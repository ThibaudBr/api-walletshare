var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/entities/AddressEntity.html",[0,1.349,1,2.978]],["body/entities/AddressEntity.html",[0,1.313,1,2.898,2,1.241,3,0.046,4,0.053,5,0.049,6,3.55,7,2.715,8,0.139,9,0.625,10,6.301,11,3.838,12,6.301,13,2.269,14,2.511,15,1.488,16,5.781,17,7.054,18,7.054,19,7.054,20,7.054,21,2.313,22,1.221,23,5.781,24,0.496,25,0.006,26,1.208,27,2.837,28,5.585,29,6.9,30,5.145,31,6.411,32,0.347,33,3.039,34,4.159,35,2.628,36,4.717,37,4.039,38,3.287,39,3.868,40,3.744,41,3.039,42,3.039,43,3.047,44,2.715,45,3.882,46,5.439,47,3.039,48,2.715,49,3.882,50,3.039,51,2.094,52,3.039,53,3.868,54,4.717,55,1.749,56,3.039,57,3.039,58,3.039,59,3.039,60,3.039,61,2.715,62,3.882,63,3.039,64,2.365,65,4.717,66,3.039,67,4.214,68,3.039,69,0.438,70,3.67,71,2.094,72,2.141,73,3.128,74,1.32,75,2.094,76,0.902,77,2.108,78,1.644,79,4.947,80,6.204,81,0.286,82,1.444,83,0.545,84,2.214,85,0.053,86,6.002,87,0.003,88,0.003]],["title/controllers/ApiLandingPageController.html",[89,2.482,90,3.734]],["body/controllers/ApiLandingPageController.html",[3,0.074,4,0.086,5,0.08,8,0.224,24,0.382,25,0.006,26,1.007,27,2.116,32,0.259,69,0.593,81,0.297,83,0.305,85,0.086,87,0.004,88,0.004,89,2.505,90,5.146,91,2.381,92,2.928,93,4.837,94,5.542,95,4.368,96,3.563,97,2.571,98,5.861,99,1.498,100,2.458,101,5.966,102,7.302,103,4.368,104,6.679,105,4.89,106,4.002,107,4.89,108,6.679,109,4.89,110,0.527,111,0.471,112,3.031,113,1.476,114,2.239,115,4.89,116,4.89,117,4.89,118,2.17,119,3.246,120,2.27,121,3.768,122,1.166,123,5.277,124,4.368,125,7.607,126,7.607,127,3.392,128,2.646,129,5.542,130,4.368,131,3.392,132,4.025,133,2.441,134,4.025,135,2.573,136,4.368,137,4.89,138,1.748,139,0.822,140,4.89,141,6.679,142,4.89,143,5.146,144,2.265,145,4.89,146,4.89,147,4.89,148,4.89]],["title/modules/ApiLandingPageModule.html",[149,1.328,150,3.531]],["body/modules/ApiLandingPageModule.html",[3,0.065,4,0.076,5,0.07,25,0.006,69,0.641,81,0.261,83,0.444,85,0.076,87,0.004,88,0.004,90,5.475,91,2.975,92,1.657,93,3.962,94,3.136,97,3.145,122,1.026,123,5.887,124,3.845,149,1.674,150,6.955,151,2.398,152,3.405,153,3.845,154,3.845,155,3.845,156,5.214,157,5.633,158,3.396,159,4.728,160,3.755,161,2.645,162,2.645,163,4.304,164,3.755,165,3.755,166,2.986,167,5.365,168,2.264,169,4.057,170,1.161,171,2.546,172,2.986,173,4.304,174,3.897,175,2.148,176,1.998,177,2.045,178,3.792,179,4.709,180,4.304,181,2.645,182,4.709,183,3.845,184,2.857,185,4.709,186,3.845,187,3.316,188,3.897,189,2.986,190,2.745,191,1.869,192,3.845,193,3.136,194,2.986,195,2.986,196,4.929,197,4.929,198,4.717,199,3.316,200,3.316,201,3.316,202,3.542,203,3.542,204,4.304,205,3.845,206,3.845]],["title/injectables/ApiLandingPageService.html",[123,3.362,207,1.561]],["body/injectables/ApiLandingPageService.html",[3,0.077,4,0.09,5,0.083,8,0.234,24,0.346,25,0.006,26,1.03,32,0.302,69,0.601,81,0.31,83,0.43,85,0.09,87,0.004,88,0.004,92,3.204,93,4.826,94,6.065,99,1.544,100,2.49,101,6.147,102,7.436,103,6.147,110,0.741,111,0.663,112,2.885,113,1.52,114,2.28,122,1.218,123,4.774,129,3.723,130,4.564,138,1.827,139,1.157,144,1.733,170,1.378,181,3.14,187,3.937,207,2.217,208,2.372,209,4.564,210,0.54,211,3.937,212,6.521,213,6.664,214,5.11,215,5.11,216,5.11,217,4.568,218,5.11,219,5.014,220,4.564,221,3.723,222,4.564,223,4.564,224,1.827,225,2.075,226,3.937,227,1.733,228,3.937]],["title/modules/ApiLogModule.html",[149,1.328,156,2.978]],["body/modules/ApiLogModule.html",[3,0.085,4,0.1,5,0.092,25,0.006,69,0.619,81,0.344,83,0.354,85,0.1,87,0.004,88,0.004,91,2.763,92,2.185,97,2.185,122,1.353,149,2.021,151,3.162,152,4.11,156,6.005,158,3.689,160,4.533,161,3.488,162,3.488,164,4.533,165,4.533,166,3.938,167,5.117,168,2.986,169,4.897,170,1.531,171,2.365,174,4.704,175,2.833,176,2.635,177,2.698,178,3.425,188,4.704,190,3.62,191,2.465,194,3.938,195,3.938,196,3.938,197,3.938,198,3.768,199,4.374,200,4.374,229,5.676,230,5.676,231,5.676,232,5.676,233,5.071]],["title/injectables/ApiLogService.html",[158,1.939,207,1.561]],["body/injectables/ApiLogService.html",[3,0.076,4,0.089,5,0.083,8,0.233,24,0.39,25,0.006,32,0.301,69,0.583,81,0.308,83,0.484,85,0.089,87,0.004,88,0.004,92,3.198,99,1.538,100,2.487,110,0.836,111,0.748,113,1.515,114,2.275,118,2.257,122,1.212,138,1.818,139,0.855,149,1.393,158,2.744,170,1.371,171,3.46,172,3.527,190,3.242,207,2.209,208,2.36,210,0.538,211,3.918,212,6.511,225,2.068,226,5.284,227,2.632,234,4.542,235,6.858,236,6.858,237,5.084,238,6.858,239,5.923,240,5.084,241,5.98,242,6.858,243,6.401,244,5.084,245,4.997,246,4.997,247,5.654,248,4.542,249,2.591,250,2.208,251,5.084,252,5.084]],["title/controllers/ApiMailController.html",[89,2.482,253,3.734]],["body/controllers/ApiMailController.html",[3,0.086,4,0.101,5,0.093,8,0.263,24,0.289,25,0.006,27,1.818,32,0.223,69,0.621,81,0.348,83,0.358,85,0.101,87,0.004,88,0.004,89,2.94,91,2.794,92,2.861,96,4.182,97,2.861,99,1.667,100,2.293,110,0.618,111,0.553,112,2.755,113,1.268,114,2.035,118,2.548,119,3.81,121,4.423,122,1.368,127,3.982,128,3.106,131,3.982,132,4.724,133,2.865,134,4.724,135,3.02,136,5.127,138,2.052,139,0.965,143,4.423,225,1.731,253,5.725,254,5.414,255,5.127,256,6.638,257,5.127,258,6.737,259,5.74,260,5.74,261,5.725,262,5.716,263,5.127,264,5.127,265,5.74,266,4.182,267,5.74,268,5.74]],["title/modules/ApiMailModule.html",[149,1.328,269,3.531]],["body/modules/ApiMailModule.html",[3,0.067,4,0.078,5,0.072,25,0.006,64,1.408,69,0.648,78,2.405,81,0.27,83,0.39,85,0.078,87,0.004,88,0.004,91,3.043,92,1.711,97,3.183,122,1.059,149,1.712,151,2.476,152,3.483,156,5.269,157,5.692,158,3.431,159,4.777,160,3.841,161,2.731,162,2.731,164,3.841,165,3.841,166,3.083,167,5.016,168,2.338,169,4.149,170,1.198,171,2.604,172,3.083,174,3.986,175,2.218,176,2.063,177,2.112,178,3.357,181,2.731,184,2.95,188,3.986,189,3.083,190,2.834,191,1.93,192,3.97,193,3.238,194,3.083,195,3.083,196,4.336,197,4.336,198,4.149,199,3.424,200,3.424,201,3.424,202,3.658,203,3.658,253,5.571,254,3.238,262,5.948,263,3.97,269,6.99,270,3.97,271,3.97,272,4.444,273,4.444,274,4.816,275,4.444,276,4.816,277,4.444,278,4.444,279,3.083,280,1.778,281,3.658]],["title/injectables/ApiMailService.html",[207,1.561,262,3.362]],["body/injectables/ApiMailService.html",[3,0.086,4,0.1,5,0.093,8,0.263,24,0.373,25,0.006,32,0.288,69,0.585,81,0.347,83,0.463,85,0.1,87,0.004,88,0.004,92,3.168,99,1.664,100,2.29,110,0.799,111,0.714,113,1.265,114,2.032,122,1.364,138,2.047,139,1.247,170,1.543,181,3.517,207,2.389,208,2.657,210,0.605,211,4.41,212,6.732,213,6.852,224,2.047,225,1.726,226,4.41,227,1.941,254,5.995,256,6.626,257,6.626,258,6.732,262,5.145,264,5.113,282,5.113,283,5.724,284,5.724,285,5.404,286,5.724]],["title/controllers/AppController.html",[89,2.482,287,3.734]],["body/controllers/AppController.html",[3,0.08,4,0.094,5,0.087,8,0.245,25,0.006,26,1.053,27,1.69,32,0.207,69,0.534,81,0.324,85,0.094,87,0.004,88,0.004,89,3.628,91,2.598,97,2.054,99,1.589,113,1.179,119,3.542,122,1.272,127,3.702,128,2.887,138,1.908,139,0.897,144,1.809,266,3.888,287,5.458,288,4.767,289,7.875,290,5.336,291,7.567,292,4.07,293,8.388,294,8.388,295,5.458,296,2.733,297,5.336,298,7.083,299,7.083,300,5.278,301,4.767,302,6.328,303,5.336,304,5.336,305,4.112,306,4.767,307,5.336,308,4.112,309,4.392,310,4.767,311,5.336,312,7.103,313,5.336,314,5.336,315,3.403,316,3.279,317,4.392,318,5.336]],["title/modules/AppModule.html",[149,1.328,319,3.531]],["body/modules/AppModule.html",[3,0.056,4,0.065,5,0.06,24,0.275,25,0.006,32,0.143,38,1.509,69,0.645,81,0.224,83,0.407,85,0.065,87,0.003,88,0.003,91,2.665,93,2.804,94,2.694,99,0.829,110,0.398,111,0.356,113,0.817,122,0.881,144,1.254,149,1.973,150,5.867,151,2.06,152,3.05,156,4.948,157,5.345,158,3.222,160,3.363,161,2.272,162,2.272,164,3.363,165,3.363,166,2.565,167,4.521,168,1.946,169,3.634,170,0.997,171,2.28,172,2.565,191,1.606,194,2.565,195,2.565,196,3.797,197,3.797,198,3.634,201,2.849,254,2.694,269,5.867,279,2.565,280,1.48,287,5.022,300,5.345,301,3.303,319,7.079,320,3.303,321,3.303,322,3.303,323,5.867,324,5.867,325,5.867,326,3.698,327,3.698,328,5.474,329,7.204,330,3.698,331,3.698,332,2.358,333,5.474,334,3.698,335,4.218,336,3.698,337,3.698,338,3.303,339,3.698,340,2.849,341,3.698,342,3.303,343,3.303,344,3.698,345,3.698,346,5.249,347,2.849,348,3.698,349,6.517,350,4.218,351,3.698,352,2.849,353,3.698,354,3.698,355,3.698,356,3.698,357,3.698,358,3.698,359,3.698,360,3.698,361,3.698,362,3.698,363,4.505,364,1.115,365,2.455,366,2.565,367,2.565,368,2.565,369,2.565,370,4.505,371,3.043,372,3.043,373,2.694,374,3.698,375,3.698]],["title/injectables/AppService.html",[207,1.561,300,3.217]],["body/injectables/AppService.html",[3,0.105,4,0.122,5,0.114,8,0.32,25,0.006,26,1.111,32,0.27,69,0.468,81,0.423,85,0.122,87,0.005,88,0.005,99,1.882,113,1.54,122,1.662,144,2.364,207,2.703,208,3.236,289,8.343,293,6.227,294,6.227,300,5.569,376,6.227,377,6.971]],["title/controllers/AppTestE2eController.html",[89,2.482,378,3.734]],["body/controllers/AppTestE2eController.html",[3,0.062,4,0.073,5,0.068,8,0.19,22,1.77,24,0.35,25,0.006,26,0.921,27,2.551,32,0.312,64,1.314,69,0.563,81,0.252,83,0.434,85,0.073,87,0.003,88,0.003,89,3.048,91,2.019,99,1.335,106,2.182,110,0.749,111,0.67,113,1.779,114,2.5,118,1.841,119,2.753,122,0.989,138,1.483,139,0.697,144,2.731,261,3.196,300,2.753,378,4.585,379,6.458,380,6.458,381,6.441,382,3.705,383,6.794,384,5.316,385,5.951,386,7.605,387,5.951,388,8.994,389,4.147,390,4.585,391,4.147,392,3.705,393,5.15,394,4.147,395,4.147,396,4.147,397,6.107,398,4.147,399,4.147,400,4.147,401,5.951,402,4.898,403,4.147,404,4.147,405,4.147,406,2.429,407,4.147,408,4.128,409,3.705,410,3.705,411,6.458,412,3.413,413,4.147,414,3.196,415,2.753,416,3.413,417,3.196,418,3.705,419,4.147,420,4.147,421,4.147,422,4.147,423,4.147,424,3.413,425,4.147,426,4.147,427,4.147,428,5.951,429,4.147,430,4.147,431,4.147]],["title/modules/AppTestE2eModule.html",[149,1.328,432,3.734]],["body/modules/AppTestE2eModule.html",[1,3.63,3,0.062,4,0.072,5,0.067,6,3.847,25,0.006,34,3.292,64,1.872,69,0.669,81,0.249,85,0.072,87,0.003,88,0.003,91,2.876,122,0.979,149,1.618,151,2.287,152,3.292,160,3.63,161,2.523,162,2.523,164,3.63,165,3.63,279,2.848,280,1.643,319,6.086,378,5.333,379,3.163,380,3.163,381,4.594,408,5.795,409,5.278,410,3.668,416,3.379,432,6.787,433,3.668,434,4.106,435,3.668,436,4.106,437,4.106,438,4.106,439,3.108,440,3.379,441,3.379,442,3.63,443,2.991,444,2.848,445,3.63,446,2.991,447,2.221,448,3.292,449,3.379,450,3.768,451,2.991,452,4.099,453,3.507,454,3.379,455,3.63,456,2.991,457,2.848,458,3.768,459,3.379,460,3.63,461,2.991,462,2.359,463,3.394,464,3.379,465,3.63,466,3.379,467,3.507,468,3.379,469,3.768,470,3.379,471,3.026,472,3.163,473,3.768,474,2.991,475,2.991,476,3.922,477,2.991,478,3.163,479,3.292,480,3.163,481,3.507,482,3.163,483,3.768,484,2.848,485,3.163,486,3.668]],["title/injectables/AppTestE2eService.html",[207,1.561,408,3.362]],["body/injectables/AppTestE2eService.html",[1,1.455,3,0.036,4,0.042,5,0.039,6,3.55,8,0.109,11,1.572,15,0.995,22,0.5,24,0.284,25,0.006,26,0.886,32,0.259,34,1.319,38,0.967,64,0.75,69,0.627,76,0.702,81,0.144,83,0.353,84,1.725,85,0.042,87,0.002,88,0.002,99,0.867,100,2.383,110,0.609,111,0.545,112,0.878,113,1.377,114,2.145,122,0.564,139,1.53,144,1.918,207,1.246,208,1.099,210,0.409,224,3.256,225,2.804,280,0.948,379,5.437,380,5.437,381,4.684,383,5.053,384,3.454,392,3.454,393,3.83,406,2.309,408,2.682,414,1.825,415,1.572,416,1.949,439,1.246,440,1.949,441,1.949,442,1.455,443,1.725,444,1.643,445,1.455,446,1.725,447,1.281,448,1.319,449,1.949,450,1.51,451,1.725,452,2.682,453,1.405,454,1.949,455,1.455,456,1.725,457,1.643,458,1.51,459,1.949,460,1.455,461,1.725,462,1.36,463,1.36,464,1.949,465,1.455,466,1.949,467,1.405,468,1.949,469,1.51,470,1.949,471,1.213,472,1.825,473,1.51,474,1.725,475,1.725,476,1.572,477,1.725,478,1.825,479,1.319,480,1.825,481,1.405,482,1.825,483,1.51,484,1.643,485,1.825,487,2.115,488,5.657,489,3.867,490,3.867,491,1.125,492,4.76,493,4.9,494,4.9,495,4.9,496,4.9,497,4.9,498,4.9,499,4.9,500,4.9,501,4.9,502,4.9,503,4.9,504,4.9,505,4.9,506,4.9,507,4.9,508,4.9,509,4.9,510,4.9,511,4.9,512,4.9,513,4.9,514,2.368,515,1.838,516,2.368,517,2.368,518,2.368,519,3.867,520,2.368,521,3.867,522,2.368,523,1.125,524,2.567,525,1.125,526,2.368,527,2.368,528,2.368,529,2.368,530,2.368,531,2.368,532,2.368,533,2.368,534,2.368,535,2.368,536,2.368,537,2.368,538,2.368,539,2.368,540,2.368,541,2.368,542,2.368,543,2.368,544,2.368,545,2.368,546,2.368,547,2.368,548,2.368,549,1.725,550,2.368,551,2.368,552,2.368,553,2.368,554,2.115,555,2.368,556,1.572,557,2.368,558,2.115,559,2.368,560,1.455,561,2.368,562,2.115,563,2.368,564,2.115,565,2.368,566,2.115,567,2.368,568,1.643,569,2.368,570,1.455,571,2.368,572,1.949,573,2.368,574,1.949,575,2.368,576,1.572,577,2.368,578,1.949,579,2.368,580,2.115,581,2.368,582,1.725,583,2.368,584,1.643,585,2.368,586,2.368,587,2.368,588,2.368,589,0.929,590,2.368,591,2.368,592,1.007,593,2.368,594,1.725,595,1.099,596,2.368,597,2.115,598,1.572,599,2.368,600,1.825]],["title/controllers/AuthController.html",[89,2.482,601,3.734]],["body/controllers/AuthController.html",[3,0.046,4,0.053,5,0.05,8,0.14,22,0.643,24,0.392,25,0.006,26,0.766,27,2.366,32,0.29,64,2.236,69,0.608,78,1.647,81,0.185,83,0.466,85,0.053,87,0.003,88,0.003,89,1.559,91,1.482,96,2.218,99,1.059,100,2.432,110,0.804,111,0.719,113,1.65,114,2.206,118,1.351,119,2.02,120,1.413,121,2.345,122,0.726,127,2.111,128,1.647,131,2.111,133,1.519,134,2.505,135,1.601,138,1.088,139,0.794,143,2.345,144,2.533,159,3.224,168,1.601,193,2.218,224,1.088,225,1.966,227,2.211,250,2.832,261,2.345,266,2.218,315,5.647,424,2.505,601,3.639,602,2.719,603,2.02,604,4.723,605,4.723,606,2.686,607,4.723,608,4.219,609,4.723,610,3.044,611,6.144,612,3.044,613,3.044,614,4.752,615,3.044,616,3.044,617,3.044,618,3.044,619,3.044,620,3.044,621,3.044,622,3.044,623,3.044,624,2.719,625,5.442,626,3.044,627,3.044,628,4.723,629,3.044,630,3.012,631,2.964,632,3.044,633,2.719,634,2.719,635,2.719,636,3.841,637,2.505,638,2.192,639,2.218,640,4.459,641,2.345,642,3.044,643,2.719,644,2.505,645,1.87,646,2.218,647,3.044,648,3.044,649,3.044,650,4.723,651,2.218,652,2.719,653,2.719,654,1.807,655,2.719,656,3.044,657,3.044,658,3.044,659,3.044,660,2.192,661,3.044,662,2.143,663,1.853,664,2.959,665,3.044,666,3.044,667,3.044,668,3.044,669,3.044,670,3.044,671,4.723,672,3.044,673,3.044,674,3.044,675,3.044,676,3.044,677,4.723,678,4.723,679,3.639,680,4.723,681,4.723,682,5.169,683,3.044,684,3.044,685,3.044,686,3.044,687,3.044,688,4.723,689,2.719,690,3.044,691,5.787,692,3.044,693,3.044,694,3.044,695,3.044,696,3.044,697,3.044,698,3.044,699,3.044,700,3.044,701,4.723,702,3.044,703,3.044,704,3.044,705,3.044,706,2.505,707,3.044,708,2.719,709,2.505,710,2.345,711,1.696]],["title/modules/AuthModule.html",[149,1.328,323,3.531]],["body/modules/AuthModule.html",[3,0.056,4,0.066,5,0.061,22,0.789,25,0.006,64,1.184,69,0.653,78,2.023,81,0.227,83,0.409,85,0.066,87,0.003,88,0.003,91,2.686,97,2.525,122,0.891,149,1.512,151,2.083,152,3.074,156,4.967,158,3.235,159,4.504,160,3.391,161,2.297,162,2.297,164,3.391,165,3.391,166,2.593,167,5.024,168,1.967,169,3.663,170,1.008,171,2.299,172,2.593,174,3.519,175,1.866,176,1.735,177,1.777,178,3.362,188,3.519,189,2.593,190,2.384,191,1.624,193,2.724,194,2.593,195,2.593,196,4.55,197,4.55,198,4.354,199,2.88,200,2.88,201,2.88,202,3.077,203,3.077,205,3.339,206,3.339,279,2.593,280,1.496,281,3.077,323,7.004,601,5.054,606,1.735,636,6.072,637,3.077,712,3.339,713,3.339,714,3.339,715,3.738,716,5.89,717,5.89,718,5.89,719,3.738,720,5.518,721,5.518,722,2.384,723,3.738,724,3.738,725,3.738,726,3.738,727,3.077,728,4.541,729,3.077,730,4.252,731,3.738,732,3.738,733,3.738,734,3.738,735,4.021,736,3.738,737,2.724,738,4.252,739,3.738,740,3.077,741,4.021,742,3.738,743,3.339,744,3.339,745,3.738,746,3.339,747,3.738,748,3.738]],["title/injectables/AuthService.html",[207,1.561,636,3.217]],["body/injectables/AuthService.html",[3,0.048,4,0.057,5,0.052,8,0.148,22,0.68,24,0.412,25,0.006,26,1.258,32,0.308,64,1.02,69,0.586,78,1.743,81,0.195,83,0.477,85,0.057,87,0.003,88,0.003,99,1.107,100,2.341,110,0.823,111,0.736,113,1.688,114,2.093,120,1.495,122,0.768,138,1.152,144,2.591,170,0.869,207,1.589,208,1.495,210,0.341,212,5.795,213,5.795,224,1.764,225,1.487,227,2.033,228,3.801,250,3.319,406,2.743,589,1.264,603,3.275,606,1.495,608,4.407,624,4.407,625,5.278,631,4.202,634,2.877,635,2.877,636,3.275,638,1.495,651,2.347,652,2.877,653,2.877,654,2.928,655,2.877,660,1.495,662,1.462,663,1.264,664,2.239,682,5.356,709,2.651,710,2.482,727,2.651,737,2.347,743,5.356,746,4.407,749,2.877,750,2.005,751,6.719,752,4.933,753,4.933,754,4.933,755,3.594,756,3.221,757,7.641,758,3.221,759,3.221,760,4.933,761,3.221,762,4.933,763,4.933,764,3.221,765,4.933,766,3.221,767,3.221,768,4.933,769,5.177,770,3.221,771,3.221,772,4.661,773,2.651,774,2.651,775,2.347,776,3.221,777,2.234,778,4.933,779,2.347,780,2.347,781,2.877,782,3.221,783,3.221,784,3.221,785,3.221,786,2.877,787,2.877,788,4.935,789,4.933,790,3.221,791,3.221,792,3.221,793,6.719,794,5.177,795,6.719,796,3.221,797,4.407,798,3.221,799,3.221,800,3.221,801,3.221,802,4.933,803,3.221,804,2.651,805,3.221,806,2.877]],["title/entities/CardEntity.html",[0,1.349,439,2.55]],["body/entities/CardEntity.html",[0,0.862,2,0.741,3,0.027,4,0.032,5,0.03,6,3.579,8,0.083,9,0.536,13,1.59,14,1.759,15,1.042,21,1.621,24,0.46,25,0.006,26,1.124,27,2.876,32,0.352,35,1.726,37,3.561,38,3.806,39,4.655,40,4.089,43,2.687,51,1.375,53,1.838,55,3.118,69,0.527,70,3.158,71,1.798,72,1.838,73,2.192,74,0.789,75,1.798,76,0.539,81,0.188,82,0.863,83,0.113,85,0.032,87,0.002,88,0.002,111,0.801,296,2.997,316,1.116,439,1.63,445,3.839,447,0.982,455,2.941,457,1.26,463,2.75,465,2.941,467,2.841,471,3.2,473,3.053,475,1.323,549,2.257,560,1.116,568,3.727,570,1.903,572,4.422,576,3.178,807,1.622,808,4.051,809,3.618,810,4.051,811,4.051,812,4.051,813,4.051,814,4.051,815,4.051,816,4.051,817,3.618,818,4.051,819,4.051,820,3.334,821,3.121,822,4.051,823,4.051,824,4.051,825,5.373,826,5.227,827,5.88,828,4.051,829,4.051,830,4.051,831,4.051,832,4.508,833,1.816,834,5.373,835,1.816,836,2.941,837,4.276,838,3.097,839,5.001,840,5.106,841,1.816,842,3.097,843,1.816,844,1.816,845,1.816,846,6.242,847,6.043,848,1.816,849,4.787,850,1.816,851,1.816,852,2.767,853,3.097,854,1.816,855,1.816,856,1.622,857,2.056,858,1.816,859,1.816,860,1.205,861,3.097,862,1.816,863,3.097,864,1.816,865,1.816,866,1.903,867,2.549,868,3.097,869,2.149,870,1.816,871,1.816,872,2.149,873,3.097,874,1.816,875,1.816,876,3.097,877,1.816,878,1.816,879,3.097,880,1.816,881,1.816,882,3.097,883,1.816,884,1.816,885,3.727,886,1.816,887,1.816,888,1.816,889,1.816,890,3.618,891,1.816,892,3.618,893,1.816,894,3.618,895,1.816,896,2.387,897,2.81,898,3.302,899,1.975,900,1.158,901,1.494,902,4.051,903,1.494,904,4.051,905,1.622,906,1.816,907,1.816,908,2.257,909,3.097,910,1.399,911,1.399,912,1.622,913,1.816,914,1.323,915,1.494,916,1.816,917,1.494,918,2.987,919,5.373,920,1.816,921,0.863,922,1.816,923,1.816,924,1.816,925,1.816,926,0.843]],["title/entities/CompanyEmployeeEntity.html",[0,1.349,442,2.978]],["body/entities/CompanyEmployeeEntity.html",[0,1.239,2,1.818,3,0.067,4,0.078,5,0.073,6,3.531,8,0.204,9,0.958,11,5.696,13,2.841,14,3.144,15,1.863,21,2.897,24,0.443,25,0.006,26,0.829,27,2.792,32,0.342,34,4.375,35,3.488,38,2.556,43,3.503,51,2.779,55,2.321,69,0.528,70,1.977,71,3.213,72,3.285,73,3.917,74,1.935,75,3.213,76,1.321,77,3.09,81,0.27,85,0.078,87,0.004,88,0.004,296,2.281,442,3.847,443,6.556,471,4.022,576,5.493,595,3.361,846,4.824,847,4.824,900,2.84,918,3.894,921,2.117,926,2.068,927,3.979,928,6.26,929,4.454,930,4.454,931,4.454,932,4.454,933,6.26,934,4.454,935,6.467,936,4.454,937,4.454,938,3.979,939,4.454,940,4.454,941,1.818,942,2.955,943,1.855,944,4.454]],["title/entities/CompanyEntity.html",[0,1.349,34,2.7]],["body/entities/CompanyEntity.html",[0,1.158,1,3.665,2,1.058,3,0.039,4,0.045,5,0.042,6,3.628,8,0.119,9,0.69,10,4.656,11,2.762,12,4.656,13,2.045,14,2.264,15,1.341,21,2.086,24,0.462,25,0.006,26,1.237,27,2.912,32,0.356,34,2.318,35,1.444,37,4.458,38,3.876,39,3.541,40,4.007,43,2.847,51,1.847,55,0.961,67,4.656,69,0.468,70,3.724,71,2.313,72,2.365,73,2.251,74,1.126,75,2.313,76,0.769,81,0.157,83,0.372,84,4.759,85,0.045,87,0.002,88,0.002,111,0.908,292,2.995,442,4.285,444,1.799,463,4.21,467,4.139,471,3.572,568,4.138,820,4.29,832,6.348,836,2.557,839,3.804,840,3.96,860,2.762,872,1.799,896,3.206,897,2.887,898,3.203,899,3.324,900,1.653,911,1.998,914,1.889,918,3.164,921,1.232,926,1.204,941,1.058,942,2.128,943,1.08,945,2.316,946,4.656,947,5.212,948,4.29,949,2.82,950,5.212,951,5.212,952,5.212,953,4.656,954,5.212,955,4.656,956,2.593,957,4.161,958,2.593,959,2.593,960,3.717,961,2.593,962,2.593,963,2.593,964,2.593,965,2.593,966,2.593,967,2.593,968,4.161,969,2.593,970,2.593,971,2.593,972,2.593,973,2.593,974,4.161,975,2.593,976,2.593,977,3.717,978,2.593,979,2.593,980,2.593,981,2.593,982,2.593,983,2.316,984,2.593]],["title/entities/ConnectedCardEntity.html",[0,1.349,445,2.978]],["body/entities/ConnectedCardEntity.html",[0,1.701,2,1.757,3,0.065,4,0.076,5,0.07,6,3.5,8,0.197,9,0.941,13,2.788,14,3.086,15,1.829,21,2.843,24,0.439,25,0.006,26,0.809,27,2.765,32,0.338,35,3.405,38,1.757,39,4.591,40,4.875,43,3.464,51,2.712,69,0.477,71,3.154,72,3.224,73,3.844,74,1.869,75,3.154,76,1.277,81,0.261,83,0.269,85,0.076,87,0.004,88,0.004,439,4.897,445,3.755,446,6.499,447,2.329,448,4.309,462,2.473,554,3.845,556,5.794,860,2.857,899,3.897,918,3.851,921,2.045,926,1.998,941,1.757,942,2.9,943,1.793,985,3.845,986,7.105,987,7.105,988,6.111,989,4.304,990,6.111,991,4.304,992,3.845,993,4.304,994,4.304,995,4.304,996,4.304,997,4.304,998,4.709]],["title/entities/ConversationEntity.html",[0,1.349,448,2.7]],["body/entities/ConversationEntity.html",[0,1.589,2,1.599,3,0.059,4,0.069,5,0.064,6,3.583,8,0.18,9,0.892,13,2.645,14,2.927,15,1.734,21,2.697,24,0.453,25,0.006,26,0.98,27,2.855,32,0.349,37,3.09,38,2.331,43,3.355,51,2.535,69,0.552,70,2.991,71,2.991,72,3.058,74,1.701,75,2.991,76,1.162,81,0.238,83,0.245,85,0.069,87,0.003,88,0.003,295,5.192,445,5.05,447,2.119,448,3.181,453,4.878,460,5.05,462,2.251,465,4.55,481,4.396,556,2.6,560,4.141,570,3.509,584,3.961,817,6.02,836,4.55,837,6.02,860,2.6,898,4.838,899,3.641,901,3.224,915,3.224,918,3.73,921,1.862,926,1.818,999,3.499,1000,6.739,1001,5.546,1002,5.71,1003,3.917,1004,3.917,1005,3.917,1006,3.917,1007,5.71,1008,3.917,1009,3.917,1010,5.71,1011,3.917,1012,5.71,1013,3.917,1014,5.71,1015,3.917,1016,3.917,1017,3.018,1018,3.224,1019,3.224]],["title/classes/CreateLogCommand.html",[81,0.294,247,3.531]],["body/classes/CreateLogCommand.html",[3,0.048,4,0.057,5,0.052,8,0.148,9,0.653,24,0.48,25,0.006,26,1.238,27,2.922,32,0.36,37,4.95,38,3.861,69,0.403,81,0.195,83,0.201,85,0.057,87,0.003,88,0.003,92,3.601,110,0.347,111,0.916,118,2.661,128,1.743,210,0.341,247,3.594,249,2.265,305,4.62,308,4.62,316,3.684,663,2.353,679,6.322,866,3.031,885,2.234,941,2.014,942,2.957,943,1.342,1020,0.347,1021,8.355,1022,2.877,1023,5.356,1024,5.356,1025,5.356,1026,5.356,1027,4.368,1028,5.356,1029,5.356,1030,5.356,1031,5.356,1032,4.62,1033,3.221,1034,6.623,1035,3.221,1036,5.025,1037,2.877,1038,3.221,1039,3.221,1040,5.962,1041,7.329,1042,3.221,1043,4.407,1044,3.221,1045,3.221,1046,6.471,1047,3.221,1048,3.823,1049,3.221,1050,3.221,1051,3.221,1052,3.221,1053,3.221,1054,3.221,1055,3.221,1056,3.221,1057,3.221,1058,3.221,1059,3.275,1060,2.877]],["title/classes/CreateLogCommandHandler.html",[81,0.294,188,3.091]],["body/classes/CreateLogCommandHandler.html",[3,0.065,4,0.076,5,0.071,8,0.199,9,0.813,24,0.427,25,0.006,26,1.027,32,0.33,69,0.587,81,0.263,83,0.445,85,0.076,87,0.004,88,0.004,92,3.366,99,1.377,100,1.984,110,0.661,111,0.591,113,0.957,114,1.681,122,1.032,139,1.582,144,1.469,168,2.279,170,1.168,188,3.914,189,6.066,190,5.697,210,0.458,224,3.392,241,3.337,247,5.651,364,1.851,741,4.473,1020,0.466,1036,4.946,1059,2.875,1060,3.869,1061,1.495,1062,3.858,1063,6.369,1064,6.369,1065,6.369,1066,5.195,1067,2.725,1068,3.337,1069,5.381,1070,3.914,1071,4.73,1072,3.337,1073,3.337,1074,3.565,1075,5.651,1076,3.321,1077,3.565,1078,3.751,1079,2.344,1080,3.869,1081,4.331,1082,3.337,1083,3.005,1084,4.331,1085,3.869,1086,5.195,1087,4.331,1088,5.052,1089,3.869,1090,3.869,1091,3.869,1092,3.869,1093,3.565,1094,3.869,1095,3.565,1096,3.869,1097,4.331,1098,4.331]],["title/classes/CreateLogDto.html",[81,0.294,239,3.091]],["body/classes/CreateLogDto.html",[3,0.047,4,0.055,5,0.051,8,0.143,9,0.637,24,0.48,25,0.006,26,1.246,27,2.927,32,0.361,37,4.919,38,3.843,69,0.395,81,0.189,83,0.195,85,0.055,87,0.003,88,0.003,92,3.604,110,0.336,111,0.932,118,2.608,128,1.687,149,1.609,210,0.33,239,3.068,249,2.219,305,4.527,308,4.527,316,3.61,663,2.306,679,6.256,866,2.956,885,2.163,941,1.964,942,2.914,943,1.299,1020,0.336,1023,5.248,1024,5.248,1025,5.248,1026,5.248,1027,4.281,1028,5.248,1029,5.248,1030,5.248,1031,5.248,1032,4.527,1034,6.648,1036,4.951,1037,2.785,1040,5.874,1041,7.253,1043,4.298,1046,6.376,1048,3.746,1059,3.194,1099,6.214,1100,2.566,1101,2.785,1102,3.118,1103,3.118,1104,3.118,1105,3.118,1106,3.118,1107,3.118,1108,3.118,1109,3.118,1110,3.118,1111,3.118,1112,3.118,1113,3.118,1114,3.118,1115,3.118,1116,3.118,1117,3.118,1118,3.118,1119,3.118,1120,3.118]],["title/classes/CreateMethodLogDto.html",[81,0.294,243,3.734]],["body/classes/CreateMethodLogDto.html",[3,0.093,4,0.108,5,0.1,8,0.282,9,1.029,24,0.449,25,0.006,26,1.247,32,0.347,81,0.373,83,0.384,85,0.108,87,0.005,88,0.005,92,3.55,110,0.663,111,0.593,118,3.779,149,2.332,210,0.651,243,5.986,249,3.654,941,3.171,942,3.764,943,2.563,1020,0.663,1099,6.121,1100,5.065,1101,5.497,1121,6.154,1122,6.154,1123,6.154]],["title/classes/CreateUserCommand.html",[81,0.294,1124,3.531]],["body/classes/CreateUserCommand.html",[3,0.099,4,0.116,5,0.108,8,0.303,9,1.075,24,0.408,25,0.006,32,0.315,69,0.444,81,0.401,83,0.413,85,0.116,87,0.005,88,0.005,110,0.712,111,0.637,139,1.478,210,0.699,245,4.817,393,6.071,415,4.388,750,1.936,1020,0.712,1124,5.919,1125,7.855,1126,4.586,1127,6.611,1128,5.906,1129,5.906,1130,2.699]],["title/classes/CreateUserCommandHandler.html",[81,0.294,1131,3.734]],["body/classes/CreateUserCommandHandler.html",[3,0.033,4,0.039,5,0.036,8,0.101,9,0.484,15,0.569,22,0.986,24,0.394,25,0.006,26,1.164,27,0.7,30,2.099,32,0.317,53,3.565,64,1.718,69,0.565,76,0.655,81,0.222,82,1.05,83,0.463,85,0.039,87,0.002,88,0.002,99,0.819,100,2.309,110,0.799,111,0.715,112,1.354,113,1.641,114,2.034,133,1.103,135,1.162,139,1.088,144,2.518,170,0.596,175,1.103,176,1.026,177,1.05,178,3.004,210,0.386,224,3.169,225,2.239,227,2.814,250,2.609,280,0.884,364,1.101,491,1.05,492,2.855,515,2.578,523,1.05,525,1.736,589,2.539,592,1.553,595,1.026,598,1.467,603,3.988,630,1.409,660,1.026,662,1.003,663,2.914,664,3.107,750,1.542,866,2.869,869,2.534,949,2.935,1020,0.238,1061,0.762,1062,2.526,1067,1.621,1076,1.976,1077,1.818,1078,1.162,1079,1.195,1080,1.974,1124,3.952,1131,2.814,1132,7.414,1133,5.368,1134,3.919,1135,3.843,1136,3.263,1137,4.171,1138,3.263,1139,3.006,1140,3.006,1141,3.006,1142,3.006,1143,3.006,1144,3.653,1145,2.209,1146,2.209,1147,3.263,1148,2.209,1149,2.209,1150,3.263,1151,2.209,1152,4.628,1153,3.006,1154,2.209,1155,3.006,1156,2.209,1157,1.818,1158,2.209,1159,3.006,1160,2.209,1161,3.006,1162,2.209,1163,1.076,1164,2.425,1165,4.714,1166,3.004,1167,2.425,1168,2.814,1169,2.425,1170,2.814,1171,1.61,1172,3.116,1173,1.533,1174,1.974,1175,2.534,1176,1.818,1177,1.702,1178,1.702,1179,3.418,1180,2.534,1181,1.818,1182,2.661,1183,2.661,1184,2.209,1185,1.818,1186,1.974,1187,3.006,1188,1.974,1189,1.974,1190,3.653,1191,2.209,1192,3.451,1193,3.501,1194,4.944,1195,2.425,1196,2.425,1197,3.653,1198,2.209,1199,2.209,1200,3.239,1201,2.209,1202,2.209,1203,1.974,1204,2.209,1205,1.974,1206,1.818,1207,1.974,1208,1.818,1209,1.974,1210,2.209,1211,1.974,1212,2.209,1213,2.209,1214,2.209,1215,2.209,1216,1.702,1217,2.209,1218,1.311,1219,1.818,1220,2.209,1221,2.209,1222,2.209,1223,4.628,1224,2.209,1225,2.209,1226,2.209,1227,3.263,1228,3.006,1229,1.974,1230,3.006,1231,3.006,1232,1.818,1233,1.818,1234,1.818,1235,3.006,1236,1.702]],["title/classes/CreateUserDto.html",[81,0.294,393,2.978]],["body/classes/CreateUserDto.html",[3,0.081,4,0.094,5,0.088,8,0.247,9,0.943,24,0.444,25,0.006,26,1.202,27,2.692,30,3.09,32,0.343,69,0.536,79,4.375,81,0.432,82,2.556,83,0.336,85,0.094,87,0.004,88,0.004,110,0.579,111,0.892,112,2.96,128,2.91,133,3.984,135,2.83,210,0.569,393,4.375,414,6.998,589,3.133,592,3.395,595,3.706,908,5.188,941,2.907,942,3.608,943,2.24,1020,0.579,1034,6.131,1237,4.144,1238,7.12,1239,5.378,1240,5.378,1241,5.378,1242,5.378,1243,5.378,1244,5.378,1245,5.86,1246,4.804,1247,6.361,1248,3.57,1249,4.426]],["title/classes/CreateUserEvent.html",[81,0.294,1250,3.734]],["body/classes/CreateUserEvent.html",[3,0.082,4,0.096,5,0.089,8,0.25,9,0.951,22,1.803,24,0.446,25,0.006,26,1.249,32,0.344,55,2.663,69,0.366,81,0.331,83,0.34,85,0.096,87,0.004,88,0.004,110,0.587,111,0.525,139,1.643,149,2.201,210,0.576,245,3.971,249,3.035,393,5.92,406,3.486,415,3.618,750,2.314,1020,0.587,1130,2.225,1250,5.535,1251,8.143,1252,3.618,1253,2.949,1254,7.183,1255,7.183,1256,3.335,1257,6.416,1258,3.78]],["title/classes/CreateUserEventHandler.html",[81,0.294,1259,3.734]],["body/classes/CreateUserEventHandler.html",[3,0.085,4,0.099,5,0.092,8,0.258,15,1.449,22,1.189,24,0.369,25,0.006,32,0.285,69,0.548,81,0.342,83,0.458,85,0.099,87,0.004,88,0.004,97,2.167,99,1.646,100,2.271,110,0.79,111,0.707,113,1.244,114,2.01,118,2.499,138,2.013,139,0.946,149,1.542,158,3.681,170,1.518,171,2.345,191,2.445,210,0.595,225,1.697,249,2.127,364,2.212,949,3.046,1020,0.606,1061,1.943,1250,6.664,1259,5.654,1260,7.292,1261,4.68,1262,4.295,1263,3.86,1264,3.136,1265,3.341,1266,3.86,1267,3.459,1268,2.883,1269,2.962,1270,5.629,1271,5.629,1272,3.136,1273,3.234,1274,3.234,1275,3.459,1276,5.629,1277,5.629]],["title/classes/CreateUserResponse.html",[81,0.294,1175,3.362]],["body/classes/CreateUserResponse.html",[3,0.076,4,0.089,5,0.082,8,0.232,9,0.903,13,3.034,15,1.99,24,0.458,25,0.006,26,1.228,32,0.354,43,2.785,64,1.599,69,0.458,81,0.306,83,0.315,85,0.089,87,0.004,88,0.004,110,0.543,111,0.745,112,2.867,133,3.859,135,2.655,139,1.67,210,0.534,589,3.034,595,3.589,750,2.368,941,2.785,942,3.64,943,2.102,1020,0.543,1152,5.957,1175,4.734,1248,3.35,1278,8.283,1279,4.508,1280,5.047,1281,3.677,1282,5.047,1283,5.047,1284,5.047,1285,5.047,1286,5.047,1287,5.047,1288,4.508]],["title/injectables/CustomHealthCheckService.html",[207,1.561,1289,3.362]],["body/injectables/CustomHealthCheckService.html",[3,0.09,4,0.105,5,0.098,8,0.276,24,0.302,25,0.006,32,0.297,69,0.595,81,0.365,83,0.375,85,0.105,87,0.004,88,0.004,99,1.717,100,2.343,110,0.647,111,0.579,113,1.328,114,2.096,122,1.432,138,2.149,139,1.01,144,2.038,170,1.62,207,2.465,208,2.79,210,0.635,213,6.819,225,1.812,228,4.63,1289,5.309,1290,5.589,1291,7.522,1292,6.135,1293,5.368,1294,8.864,1295,6.009,1296,6.009,1297,6.009,1298,5.576,1299,6.009,1300,4.63,1301,4.169,1302,4.946,1303,4.946]],["title/injectables/DatabaseConfiguration.html",[207,1.561,335,3.734]],["body/injectables/DatabaseConfiguration.html",[1,3.509,2,2.633,3,0.045,4,0.052,5,0.049,8,0.137,24,0.324,25,0.006,32,0.116,34,3.182,38,3.431,64,1.809,69,0.647,81,0.181,85,0.052,87,0.003,88,0.003,99,1.043,113,0.659,122,0.711,144,2.371,198,4.281,207,1.497,208,1.384,227,1.011,280,1.193,335,3.581,342,8.396,364,0.899,381,3.085,390,5.387,439,3.005,440,2.454,441,2.454,442,3.509,443,2.172,444,2.068,445,3.509,446,2.172,447,1.613,448,3.182,449,2.454,450,3.642,451,2.172,452,3.224,453,3.39,454,2.454,455,3.509,456,2.172,457,2.068,458,3.642,459,2.454,460,3.509,461,2.172,462,1.713,463,3.281,464,2.454,465,3.509,466,2.454,467,3.39,468,2.454,469,3.642,470,2.454,471,2.925,472,2.297,473,3.642,474,2.172,475,2.172,476,3.791,477,2.172,478,2.297,479,3.182,480,2.297,481,3.39,482,2.297,483,3.642,484,2.068,485,2.297,589,2.531,592,2.743,660,1.384,662,1.353,663,2.241,664,1.353,741,3.386,794,2.297,839,2.964,857,3.085,1304,2.664,1305,6.449,1306,2.982,1307,5.711,1308,4.648,1309,2.982,1310,2.172,1311,2.664,1312,2.664,1313,2.982,1314,5.761,1315,4.648,1316,6.449,1317,6.449,1318,5.761,1319,2.982,1320,2.982,1321,2.982,1322,6.449,1323,2.982,1324,2.982,1325,2.982,1326,6.449,1327,4.648,1328,4.648,1329,4.648,1330,2.982,1331,6.449,1332,2.982,1333,5.761,1334,2.982,1335,4.648,1336,2.982,1337,2.982,1338,2.982,1339,2.982,1340,2.982,1341,2.982,1342,2.982,1343,2.982,1344,2.982,1345,2.982,1346,2.982,1347,2.982,1348,2.982,1349,2.982,1350,2.982,1351,2.982,1352,2.982,1353,4.648,1354,2.982,1355,2.982,1356,2.982,1357,2.982,1358,2.982,1359,2.982,1360,2.982,1361,2.982,1362,2.982,1363,2.982,1364,2.982,1365,2.982,1366,2.664,1367,2.982]],["title/classes/DeleteMailCommand.html",[81,0.294,217,3.217]],["body/classes/DeleteMailCommand.html",[3,0.098,4,0.114,5,0.106,8,0.299,9,1.065,24,0.404,25,0.006,26,1.065,32,0.312,81,0.395,83,0.406,85,0.114,87,0.005,88,0.005,92,3.361,93,4.472,110,0.7,111,0.627,112,3.238,139,1.468,210,0.688,217,5.339,750,2.081,941,3.283,942,3.826,943,2.71,1020,0.7,1368,7.186,1369,5.013,1370,5.812,1371,5.812]],["title/classes/DeleteMailCommandHandler.html",[81,0.294,179,3.734]],["body/classes/DeleteMailCommandHandler.html",[3,0.069,4,0.08,5,0.074,8,0.209,24,0.32,25,0.006,32,0.247,69,0.608,81,0.277,83,0.397,85,0.08,87,0.004,88,0.004,92,2.823,93,3.757,97,2.451,99,1.428,100,2.041,106,2.401,110,0.686,111,0.613,113,1.008,114,1.744,120,2.118,122,1.088,139,0.767,144,1.547,168,2.401,170,1.23,174,2.91,175,3.178,176,2.956,177,3.026,178,3.405,179,6.115,181,4.877,184,3.029,210,0.482,217,5.269,224,2.277,225,1.376,227,2.691,296,2.337,364,1.92,638,2.118,663,2.499,664,2.89,706,3.756,1020,0.491,1061,1.575,1062,3.968,1067,2.826,1068,3.516,1069,5.506,1070,2.91,1071,4.906,1072,3.516,1076,3.445,1078,2.401,1079,2.469,1083,3.165,1134,4.545,1179,3.661,1192,3.658,1193,3.445,1218,2.708,1372,6.552,1373,3.756,1374,3.325,1375,3.516,1376,4.076,1377,5.688,1378,3.756,1379,4.563,1380,4.076,1381,4.076,1382,4.563,1383,4.563,1384,4.563,1385,6.368,1386,6.368,1387,4.563,1388,4.563,1389,4.563,1390,4.563,1391,4.563,1392,4.076,1393,4.563,1394,4.563]],["title/classes/DeleteMailEvent.html",[81,0.294,1374,3.531]],["body/classes/DeleteMailEvent.html",[3,0.081,4,0.095,5,0.088,8,0.247,9,0.944,24,0.428,25,0.006,26,1.246,32,0.33,55,2.645,69,0.362,81,0.327,83,0.337,85,0.095,87,0.004,88,0.004,92,3.405,93,4.748,97,2.746,98,5.496,106,3.753,110,0.581,111,0.519,112,2.645,139,1.601,149,2.423,181,3.313,210,0.754,217,5.872,249,3.342,750,2.27,1020,0.581,1256,3.311,1373,4.438,1374,5.197,1395,7.902,1396,4.438,1397,8.505,1398,5.392,1399,5.392,1400,5.392,1401,4.817,1402,4.817]],["title/classes/DeleteMailEventHandler.html",[81,0.294,182,3.734]],["body/classes/DeleteMailEventHandler.html",[3,0.084,4,0.098,5,0.091,8,0.256,22,1.176,24,0.366,25,0.006,32,0.283,69,0.545,81,0.338,83,0.455,85,0.098,87,0.004,88,0.004,92,3.126,93,4.411,97,2.805,98,4.29,99,1.634,100,2.259,106,3.833,110,0.784,111,0.702,112,2.701,113,1.23,114,1.996,118,2.471,138,1.991,139,0.936,149,1.525,158,3.67,170,1.502,171,2.319,182,5.613,184,5.717,191,2.419,210,0.589,225,1.679,249,2.103,364,2.196,1020,0.6,1061,1.921,1262,4.272,1263,3.833,1264,3.102,1265,3.305,1266,3.833,1267,3.421,1268,2.852,1269,2.93,1272,3.102,1374,6.275,1375,4.29,1403,7.253,1404,5.568,1405,5.568]],["title/classes/DeleteUserCommand.html",[81,0.294,1406,3.734]],["body/classes/DeleteUserCommand.html",[3,0.1,4,0.116,5,0.108,8,0.304,9,1.078,24,0.409,25,0.006,26,1.078,32,0.316,81,0.402,83,0.414,85,0.116,87,0.005,88,0.005,110,0.714,111,0.639,139,1.48,210,0.701,406,3.595,750,2.099,941,3.323,942,3.847,943,2.763,1020,0.714,1126,4.601,1406,6.272,1407,7.867,1408,6.699]],["title/classes/DeleteUserCommandHandler.html",[81,0.294,1409,3.734]],["body/classes/DeleteUserCommandHandler.html",[3,0.074,4,0.086,5,0.08,8,0.225,9,0.886,22,1.035,24,0.383,25,0.006,32,0.295,64,1.553,69,0.619,76,1.454,81,0.297,83,0.418,85,0.086,87,0.004,88,0.004,99,1.501,100,2.119,110,0.72,111,0.644,113,1.083,114,1.833,170,1.322,175,2.447,176,2.276,177,2.329,178,2.276,210,0.707,224,1.753,225,1.478,227,1.662,280,1.962,364,2.017,491,2.329,492,3.889,515,3.179,523,2.329,525,2.329,660,2.276,662,2.224,663,2.625,664,2.224,750,1.815,1020,0.528,1061,1.691,1062,4.121,1067,2.969,1072,3.777,1076,3.62,1078,2.579,1079,2.652,1133,5.462,1134,4.839,1163,2.386,1165,3.571,1166,2.276,1172,2.816,1179,3.339,1193,2.652,1218,3.971,1261,2.652,1373,4.034,1375,3.777,1406,6.305,1409,5.868,1410,7.309,1411,4.902,1412,4.902,1413,3.571,1414,5.155,1415,4.902,1416,4.902,1417,4.902,1418,4.902]],["title/classes/DeleteUserEvent.html",[81,0.294,1413,3.531]],["body/classes/DeleteUserEvent.html",[3,0.088,4,0.103,5,0.095,8,0.269,9,0.996,22,1.854,24,0.441,25,0.006,26,1.268,32,0.34,55,2.791,81,0.355,83,0.365,85,0.103,87,0.004,88,0.004,106,3.96,110,0.63,111,0.564,139,1.626,149,2.278,210,0.619,249,3.142,406,3.584,750,2.283,1020,0.63,1130,2.39,1252,3.887,1253,3.168,1256,3.494,1258,4.062,1413,5.484,1419,8.112,1420,5.484,1421,4.266]],["title/classes/DeleteUserEventHandler.html",[81,0.294,1422,3.734]],["body/classes/DeleteUserEventHandler.html",[3,0.083,4,0.097,5,0.09,8,0.254,15,1.425,22,1.169,24,0.365,25,0.006,32,0.282,69,0.599,81,0.336,83,0.453,85,0.097,87,0.004,88,0.004,97,2.132,99,1.628,100,2.253,110,0.782,111,0.699,113,1.224,114,1.988,118,2.458,122,1.32,138,1.98,139,0.931,149,1.517,158,3.664,168,2.914,170,1.493,171,2.307,191,2.405,210,0.586,225,1.67,249,2.092,364,2.189,1020,0.596,1061,1.911,1069,3.842,1083,3.842,1261,4.65,1262,4.261,1263,3.819,1264,3.085,1266,3.819,1268,2.837,1269,2.914,1272,3.085,1273,3.182,1274,3.182,1275,3.403,1375,4.267,1413,6.262,1422,5.593,1423,7.234,1424,3.403,1425,3.287,1426,5.538,1427,4.558]],["title/entities/DiscountCodeEntity.html",[0,1.349,450,3.091]],["body/entities/DiscountCodeEntity.html",[0,1.576,2,1.581,3,0.058,4,0.068,5,0.063,6,3.574,8,0.178,9,0.886,13,2.627,14,2.908,15,1.723,21,2.679,24,0.488,25,0.006,26,0.75,27,2.847,28,5.437,32,0.349,43,3.761,51,2.514,69,0.45,70,3.633,71,2.971,72,3.038,74,1.682,75,2.971,76,1.149,79,4.526,81,0.344,82,1.84,83,0.511,85,0.068,87,0.003,88,0.003,450,3.611,451,6.637,479,4.561,558,3.459,866,5.03,872,2.687,896,4.364,897,3.929,918,3.715,921,1.84,926,1.798,1428,3.187,1429,5.98,1430,6.695,1431,5.98,1432,5.98,1433,5.51,1434,6.695,1435,3.873,1436,3.873,1437,5.059,1438,5.98,1439,3.873,1440,5.663,1441,3.873,1442,5.059,1443,5.059,1444,3.873,1445,3.873,1446,5.059,1447,3.873,1448,3.873,1449,3.873,1450,3.873,1451,5.663,1452,3.873,1453,5.98,1454,6.58,1455,2.822,1456,5.51,1457,3.873]],["title/classes/DuplicateMailException.html",[81,0.294,1169,3.217]],["body/classes/DuplicateMailException.html",[3,0.104,4,0.121,5,0.112,25,0.006,32,0.268,69,0.464,81,0.419,85,0.121,87,0.005,88,0.005,120,3.203,122,1.645,210,0.947,638,4.16,711,3.844,1020,0.743,1166,3.871,1167,5.535,1169,5.535,1195,4.581,1196,4.581,1458,4.387,1459,5.679,1460,3.546,1461,6.164,1462,5.679]],["title/classes/DuplicateUsernameException.html",[81,0.294,1164,3.217]],["body/classes/DuplicateUsernameException.html",[3,0.104,4,0.121,5,0.112,25,0.006,32,0.268,69,0.464,81,0.419,85,0.121,87,0.005,88,0.005,120,3.203,122,1.645,210,0.947,638,4.16,711,3.844,1020,0.743,1164,5.535,1166,3.871,1167,5.535,1195,4.581,1196,4.581,1458,4.387,1460,3.546,1463,5.679,1464,6.164,1465,6.901]],["title/modules/EntitiesToMoveModule.html",[149,1.328,324,3.531]],["body/modules/EntitiesToMoveModule.html",[0,1.323,1,4.025,3,0.071,4,0.083,5,0.077,6,1.866,11,3.156,25,0.006,34,3.65,69,0.672,77,3.298,81,0.288,85,0.083,87,0.004,88,0.004,91,2.314,122,1.133,149,1.794,151,2.648,164,2.921,165,2.921,279,3.298,280,1.902,324,4.773,343,4.247,363,6.648,439,3.447,442,4.025,444,3.298,445,4.025,447,3.544,448,3.65,450,4.177,452,4.544,453,3.888,455,4.025,457,3.298,458,4.177,460,4.025,462,3.764,463,3.764,465,4.025,467,3.888,469,4.177,471,3.355,473,4.177,475,3.464,476,4.349,478,3.663,479,3.65,481,3.888,483,4.177,486,4.247,560,2.921,900,3.031,901,3.912,911,3.663,914,3.464,915,3.912,917,3.912,983,4.247,1017,3.663,1018,3.912,1019,3.912,1455,3.464,1466,4.754,1467,4.247,1468,4.247,1469,4.247,1470,4.754,1471,4.754,1472,4.247]],["title/classes/ErrorCustomEvent.html",[81,0.294,1179,2.419]],["body/classes/ErrorCustomEvent.html",[3,0.089,4,0.104,5,0.096,8,0.272,9,1.004,24,0.443,25,0.006,26,1.234,32,0.342,81,0.359,83,0.37,85,0.104,87,0.004,88,0.004,110,0.638,111,0.57,139,1.629,176,4.231,178,3.882,210,0.626,663,3.282,750,2.311,941,3.095,942,3.72,943,2.467,1020,0.638,1179,3.784,1193,4.525,1473,7.501,1474,5.291,1475,5.923,1476,5.923,1477,5.923,1478,5.923]],["title/classes/ErrorCustomEventHandler.html",[81,0.294,174,3.091]],["body/classes/ErrorCustomEventHandler.html",[3,0.063,4,0.074,5,0.068,8,0.193,9,0.795,24,0.423,25,0.006,26,1.013,32,0.326,38,1.714,53,3.563,55,1.557,69,0.565,81,0.255,83,0.437,85,0.074,87,0.003,88,0.003,99,1.347,110,0.646,111,0.578,113,0.928,138,1.501,139,1.586,158,3.06,170,1.132,171,1.749,174,3.828,176,4.023,177,4.211,191,1.823,210,0.444,224,3.345,227,1.424,239,4.469,246,3.059,250,1.823,332,3.828,346,5.572,364,1.81,663,1.648,1020,0.452,1036,4.862,1048,2.677,1059,3.985,1061,1.449,1063,6.26,1064,6.26,1065,6.26,1066,5.106,1070,3.828,1072,3.235,1074,3.455,1086,3.059,1089,5.363,1090,3.75,1091,5.363,1092,3.75,1093,3.455,1094,3.75,1095,4.941,1099,2.787,1179,3.817,1256,1.949,1262,3.687,1263,3.159,1266,3.159,1268,2.15,1269,2.209,1425,2.492,1473,7.131,1479,3.235,1480,4.626,1481,3.455,1482,3.059,1483,3.455,1484,4.198,1485,4.198,1486,4.198,1487,4.198,1488,3.455,1489,3.75,1490,3.75,1491,3.235,1492,4.198,1493,3.235,1494,4.198,1495,3.455,1496,4.198,1497,3.235]],["title/classes/ErrorExceptionFilter.html",[81,0.294,1498,3.989]],["body/classes/ErrorExceptionFilter.html",[3,0.088,4,0.102,5,0.095,8,0.268,24,0.293,25,0.006,32,0.226,46,4.254,69,0.505,81,0.354,83,0.364,85,0.102,87,0.004,88,0.004,99,1.685,110,0.629,111,0.562,113,1.29,120,3.856,122,1.392,227,1.98,250,3.809,315,4.79,332,4.79,364,2.265,614,4.316,638,3.487,645,3.587,662,3.98,794,4.498,1020,0.629,1318,7.42,1498,6.183,1499,6.711,1500,5.215,1501,8.306,1502,7.512,1503,8.77,1504,5.838,1505,6.711,1506,4.805,1507,5.838,1508,5.838,1509,5.838,1510,5.838,1511,5.215,1512,5.838,1513,5.838,1514,5.838,1515,5.838,1516,5.838,1517,5.838]],["title/injectables/ErrorLoggingMiddleware.html",[207,1.561,352,3.734]],["body/injectables/ErrorLoggingMiddleware.html",[3,0.063,4,0.074,5,0.069,8,0.193,9,0.796,24,0.385,25,0.006,32,0.272,69,0.582,81,0.255,83,0.375,85,0.074,87,0.003,88,0.003,99,1.349,100,1.952,110,0.647,111,0.579,113,0.929,122,1.003,138,1.504,139,1.287,144,1.427,149,1.152,158,3.063,171,1.752,191,1.827,207,1.937,208,1.953,210,0.445,224,2.508,225,1.268,227,1.427,239,4.474,246,3.065,250,3.325,296,3.594,315,4.881,346,5.577,352,4.633,364,1.268,365,2.793,366,2.918,367,5.617,368,2.918,369,2.918,370,4.948,371,3.462,372,3.462,373,3.065,614,4.398,639,3.065,640,5.406,645,2.585,660,1.953,662,1.909,663,2.359,664,1.909,1027,4.381,1048,2.683,1059,2.793,1066,5.112,1075,5.577,1082,3.241,1086,4.381,1099,2.793,1479,3.241,1480,4.633,1482,3.065,1488,3.462,1489,3.758,1491,3.241,1493,3.241,1495,3.462,1497,3.241,1518,6.838,1519,3.241,1520,4.633,1521,6.012,1522,4.948,1523,7.655,1524,4.207,1525,4.948,1526,4.633,1527,3.241,1528,3.462,1529,3.462,1530,3.462,1531,3.462,1532,3.462,1533,4.948,1534,3.462,1535,3.462,1536,3.462,1537,3.462,1538,3.462,1539,3.462,1540,3.758,1541,3.758,1542,3.758,1543,3.758,1544,3.758,1545,3.758,1546,3.758,1547,3.462,1548,3.462,1549,3.462,1550,3.462,1551,3.462,1552,3.462]],["title/classes/GenerateUserDto.html",[81,0.294,1553,3.531]],["body/classes/GenerateUserDto.html",[3,0.093,4,0.109,5,0.101,8,0.284,9,1.032,24,0.429,25,0.006,26,1.032,32,0.331,69,0.416,81,0.376,83,0.386,85,0.109,87,0.005,88,0.005,110,0.667,111,0.596,112,3.166,133,4.261,135,3.257,139,1.585,210,0.655,595,3.963,750,2.248,941,3.183,942,3.771,943,2.579,1020,0.667,1237,4.77,1248,4.11,1553,5.682,1554,8.005,1555,7.798,1556,6.191]],["title/classes/GetAllMailQuery.html",[81,0.294,219,3.531]],["body/classes/GetAllMailQuery.html",[3,0.113,4,0.132,5,0.123,25,0.005,81,0.457,85,0.132,87,0.005,88,0.005,92,2.901,93,3.86,219,6.401,1020,0.811,1557,6.731,1558,6.731]],["title/classes/GetAllMailQueryHandler.html",[81,0.294,185,3.734]],["body/classes/GetAllMailQueryHandler.html",[3,0.078,4,0.091,5,0.084,8,0.237,24,0.349,25,0.006,32,0.269,69,0.603,81,0.314,83,0.433,85,0.091,87,0.004,88,0.004,92,3.014,93,4.285,99,1.557,100,2.179,110,0.747,111,0.668,113,1.143,114,1.901,122,1.233,144,1.755,168,2.722,170,1.395,185,5.347,187,6.447,210,0.547,219,6.096,221,5.056,222,4.622,223,4.622,224,1.85,225,1.56,227,1.755,364,2.092,365,3.435,366,3.589,367,3.589,368,3.589,369,3.589,638,2.402,664,2.348,706,4.258,1020,0.557,1061,1.785,1067,3.08,1068,3.987,1069,5.804,1071,5.347,1073,3.987,1083,3.589,1267,3.179,1376,6.199,1377,6.199,1378,4.258,1380,4.622,1381,4.622,1392,4.622,1559,6.994,1560,4.993,1561,4.607,1562,3.299,1563,3.299,1564,3.435,1565,5.174,1566,4.622,1567,4.622,1568,4.622,1569,5.174,1570,5.174,1571,5.174,1572,5.174]],["title/classes/GetUserByEmailQuery.html",[81,0.294,1573,3.734]],["body/classes/GetUserByEmailQuery.html",[3,0.1,4,0.117,5,0.109,8,0.306,9,1.082,22,1.865,24,0.411,25,0.006,26,1.218,32,0.317,81,0.405,83,0.417,85,0.117,87,0.005,88,0.005,110,0.719,111,0.643,139,1.484,210,0.706,750,1.948,949,4.979,1020,0.719,1130,2.725,1573,6.297,1574,5.863,1575,5.963,1576,6.676,1577,6.676,1578,6.676]],["title/classes/GetUserByEmailQueryHandler.html",[81,0.294,1579,3.734]],["body/classes/GetUserByEmailQueryHandler.html",[3,0.08,4,0.094,5,0.087,8,0.245,13,2.094,15,1.373,21,2.135,22,1.789,24,0.356,25,0.006,32,0.275,64,1.69,69,0.592,76,1.583,81,0.324,83,0.442,85,0.094,87,0.004,88,0.004,99,1.589,100,2.213,110,0.763,111,0.682,112,2.627,113,1.179,114,1.94,144,1.809,170,1.439,210,0.749,224,1.908,225,1.609,280,2.135,364,2.136,491,2.536,492,4.025,515,3.366,523,2.536,525,2.536,592,2.269,595,2.477,660,2.477,662,2.421,663,2.78,664,2.421,1020,0.575,1061,1.841,1067,3.144,1070,3.403,1163,2.598,1424,3.279,1560,5.07,1561,4.702,1562,3.403,1563,3.403,1564,3.542,1573,6.527,1579,5.458,1580,5.278,1581,6.971,1582,5.336,1583,3.702,1584,5.336,1585,3.702,1586,4.392,1587,3.167]],["title/classes/GetUserByUsernameQuery.html",[81,0.294,1588,3.734]],["body/classes/GetUserByUsernameQuery.html",[3,0.1,4,0.117,5,0.109,8,0.306,9,1.082,22,1.865,24,0.411,25,0.006,26,1.218,32,0.317,81,0.405,83,0.417,85,0.117,87,0.005,88,0.005,110,0.719,111,0.643,139,1.484,210,0.706,589,3.612,750,1.948,1020,0.719,1130,2.725,1574,5.863,1588,6.297,1589,5.963,1590,5.144,1591,6.676,1592,6.676]],["title/classes/GetUserByUsernameQueryHandler.html",[81,0.294,1593,3.734]],["body/classes/GetUserByUsernameQueryHandler.html",[3,0.08,4,0.094,5,0.087,8,0.245,13,2.094,15,1.373,21,2.135,22,1.789,24,0.356,25,0.006,32,0.275,64,1.69,69,0.592,76,1.583,81,0.324,83,0.442,85,0.094,87,0.004,88,0.004,99,1.589,100,2.213,110,0.763,111,0.682,113,1.179,114,1.94,144,1.809,170,1.439,210,0.749,224,1.908,225,1.609,280,2.135,364,2.136,491,2.536,492,4.025,515,3.366,523,2.536,525,2.536,589,2.78,592,2.269,595,2.477,660,2.477,662,2.421,663,2.78,664,2.421,1020,0.575,1061,1.841,1067,3.144,1070,3.403,1163,2.598,1424,3.279,1560,5.07,1561,4.702,1562,3.403,1563,3.403,1564,3.542,1580,5.278,1583,3.702,1585,3.702,1586,4.392,1587,3.167,1588,6.527,1593,5.458,1594,6.971,1595,5.336,1596,4.767]],["title/classes/GetUserIfRefreshTokenMatchesQuery.html",[81,0.294,1597,3.531]],["body/classes/GetUserIfRefreshTokenMatchesQuery.html",[3,0.092,4,0.107,5,0.099,8,0.28,9,1.023,22,1.882,24,0.426,25,0.006,26,1.278,32,0.329,81,0.37,83,0.381,85,0.107,87,0.004,88,0.004,110,0.657,111,0.587,139,1.579,210,0.645,406,3.754,606,4.138,631,4.565,750,2.192,1020,0.657,1130,2.49,1574,5.916,1597,5.628,1598,5.448,1599,6.867,1600,5.448,1601,6.099,1602,7.725]],["title/classes/GetUserIfRefreshTokenMatchesQueryHandler.html",[81,0.294,1603,3.734]],["body/classes/GetUserIfRefreshTokenMatchesQueryHandler.html",[3,0.071,4,0.083,5,0.077,8,0.217,15,1.678,22,1.927,24,0.328,25,0.006,32,0.253,64,1.496,69,0.602,76,1.4,81,0.286,83,0.407,85,0.083,87,0.004,88,0.004,99,1.462,100,2.078,110,0.702,111,0.628,112,1.751,113,1.043,114,1.786,144,1.601,170,1.273,175,2.356,176,2.192,177,2.244,178,2.192,210,0.689,224,2.331,225,1.966,227,1.601,250,2.832,280,1.889,364,1.966,491,2.244,492,3.827,515,3.098,523,2.244,524,4.328,525,2.244,589,1.853,595,2.192,598,3.134,606,3.739,631,4.125,660,2.192,662,2.142,663,2.931,1020,0.508,1061,1.629,1067,2.894,1134,4.588,1163,2.298,1179,3.254,1192,2.712,1193,2.554,1425,2.802,1560,4.762,1561,4.328,1562,3.01,1563,3.01,1564,3.134,1580,4.957,1585,3.275,1597,5.868,1603,5.754,1604,6.206,1605,3.44,1606,4.721,1607,3.638,1608,4.217,1609,6.52,1610,4.721,1611,4.721]],["title/classes/GetUserLoginQuery.html",[81,0.294,780,3.531]],["body/classes/GetUserLoginQuery.html",[3,0.094,4,0.11,5,0.102,8,0.287,9,1.038,22,1.899,24,0.431,25,0.006,26,1.284,32,0.332,81,0.379,83,0.39,85,0.11,87,0.005,88,0.005,110,0.673,111,0.602,139,1.589,210,0.661,589,3.528,750,2.208,769,7.137,780,5.715,1020,0.673,1130,2.55,1574,5.968,1590,4.814,1612,5.581,1613,6.248,1614,7.843]],["title/classes/GetUserLoginQueryHandler.html",[81,0.294,735,3.531]],["body/classes/GetUserLoginQueryHandler.html",[3,0.059,4,0.069,5,0.064,8,0.18,13,2.247,14,2.487,15,1.474,21,2.292,22,1.665,24,0.339,25,0.006,26,1.09,32,0.262,64,1.246,69,0.596,76,1.166,81,0.239,83,0.422,85,0.069,87,0.003,88,0.003,99,1.285,100,2.29,110,0.727,111,0.651,112,2.504,113,1.265,114,2.032,120,1.825,122,0.937,144,2.29,170,1.06,210,0.605,224,2.819,225,2.377,227,1.942,250,2.487,280,1.574,364,1.727,491,1.869,492,3.526,515,2.721,523,1.869,524,3.801,525,1.869,589,2.65,592,2.435,595,2.658,598,3.801,638,1.825,660,1.825,662,1.784,663,2.65,664,3.367,709,4.713,710,4.412,711,3.19,728,4.713,729,3.236,735,4.172,737,5.745,769,3.03,780,5.406,786,5.115,1020,0.423,1061,1.357,1067,2.542,1073,3.03,1134,4.351,1163,1.914,1218,3.399,1261,2.127,1481,3.236,1560,4.307,1561,3.801,1562,2.507,1563,2.507,1564,2.61,1580,4.925,1585,3.973,1586,4.713,1587,3.399,1596,5.115,1615,5.115,1616,5.115,1617,6.628,1618,3.932,1619,2.865,1620,3.513,1621,3.932,1622,8.23,1623,5.726,1624,5.726,1625,5.726,1626,3.513]],["title/classes/GetUserQuery.html",[81,0.294,777,3.362]],["body/classes/GetUserQuery.html",[3,0.1,4,0.117,5,0.109,8,0.306,9,1.082,24,0.411,25,0.006,26,1.218,32,0.317,81,0.405,83,0.417,85,0.117,87,0.005,88,0.005,110,0.719,111,0.851,139,1.484,210,0.706,406,3.757,750,1.948,777,5.669,1020,0.719,1130,2.725,1253,3.612,1281,4.864,1574,5.863,1627,5.963,1628,6.676,1629,6.676]],["title/classes/GetUserQueryHandler.html",[81,0.294,1630,3.734]],["body/classes/GetUserQueryHandler.html",[3,0.077,4,0.09,5,0.084,8,0.236,15,1.322,22,1.084,24,0.347,25,0.006,32,0.268,64,1.627,69,0.615,76,1.523,81,0.312,83,0.431,85,0.09,87,0.004,88,0.004,99,1.549,100,2.171,110,0.743,111,0.665,113,1.135,114,1.891,144,2.341,170,1.385,210,0.73,224,1.836,225,2.082,227,1.741,250,2.231,280,2.055,364,2.082,491,2.44,492,3.964,515,3.281,523,2.44,525,2.44,654,4.098,777,5.786,779,6.077,1020,0.553,1061,1.772,1067,3.064,1163,2.5,1425,3.048,1560,4.974,1561,4.583,1562,3.275,1563,3.275,1564,3.409,1580,5.178,1583,3.562,1608,6.168,1630,5.32,1631,4.226,1632,3.957,1633,6.427,1634,5.135,1635,5.135,1636,5.135,1637,5.135,1638,5.135,1639,5.135,1640,5.135]],["title/classes/GetUserWithCriteriaDto.html",[81,0.294,1641,3.362]],["body/classes/GetUserWithCriteriaDto.html",[3,0.064,4,0.074,5,0.069,8,0.194,9,0.798,22,1.978,24,0.466,25,0.006,26,1.117,32,0.36,43,3.824,53,3.579,81,0.256,83,0.264,85,0.074,87,0.004,88,0.004,110,0.455,111,0.947,112,2.608,139,1.686,210,0.447,589,2.76,750,2.392,941,2.461,942,3.311,943,1.76,1020,0.455,1641,4.183,1642,8.367,1643,3.773,1644,7.032,1645,7.032,1646,7.032,1647,7.032,1648,7.032,1649,5.418,1650,7.032,1651,7.032,1652,6.03,1653,4.224,1654,4.224,1655,4.224,1656,4.224,1657,4.224,1658,4.224,1659,4.224,1660,4.224,1661,4.224]],["title/classes/GetUserWithCriteriaQuery.html",[81,0.294,1662,3.531]],["body/classes/GetUserWithCriteriaQuery.html",[3,0.098,4,0.114,5,0.106,8,0.299,9,1.067,22,1.928,24,0.405,25,0.006,32,0.313,69,0.438,81,0.396,83,0.407,85,0.114,87,0.005,88,0.005,110,0.703,111,0.629,139,1.47,210,0.69,750,1.921,1020,0.703,1130,2.664,1574,5.804,1641,6.84,1662,5.872,1663,5.83,1664,6.527,1665,6.527,1666,6.527,1667,5.372,1668,5.372]],["title/classes/GetUserWithCriteriaQueryHandler.html",[81,0.294,1669,3.734]],["body/classes/GetUserWithCriteriaQueryHandler.html",[3,0.078,4,0.091,5,0.085,8,0.239,22,1.77,24,0.35,25,0.006,32,0.27,38,2.123,64,1.647,69,0.587,76,1.543,81,0.315,83,0.435,85,0.091,87,0.004,88,0.004,99,1.562,100,2.184,110,0.75,111,0.671,113,1.149,114,1.907,170,1.402,210,0.736,224,1.859,250,2.259,280,2.081,364,2.099,491,2.471,492,3.984,515,3.309,523,2.471,525,2.471,600,4.007,1020,0.56,1061,1.795,1067,3.09,1070,3.316,1163,2.532,1424,3.195,1560,5.006,1561,4.622,1562,3.316,1563,3.316,1564,3.452,1580,5.211,1662,6.108,1669,5.365,1670,6.46,1671,5.201,1672,5.201,1673,5.201,1674,5.201,1675,5.201,1676,6.963,1677,6.963,1678,5.201,1679,5.201,1680,5.201,1681,5.201,1682,5.201,1683,5.201,1684,5.201]],["title/entities/GroupEntity.html",[0,1.349,453,2.877]],["body/entities/GroupEntity.html",[0,1.542,2,1.534,3,0.057,4,0.066,5,0.061,6,3.502,8,0.172,9,0.871,13,2.582,14,2.858,15,1.693,21,2.633,24,0.441,25,0.006,26,0.961,27,2.78,30,2.16,32,0.34,37,4.532,38,3.776,39,4.31,40,4.939,43,3.306,51,2.459,69,0.52,70,2.459,71,2.921,72,2.986,74,1.633,75,2.921,76,1.115,81,0.336,82,1.786,83,0.453,85,0.066,87,0.003,88,0.003,448,4.045,453,3.289,455,4.462,457,2.608,462,2.16,463,4.812,556,3.678,560,3.404,568,5.037,836,3.404,839,4.63,840,3.678,852,4.949,857,4.82,860,3.678,898,4.043,899,4.196,914,2.739,918,3.295,926,1.745,948,5.416,992,3.358,998,5.595,1249,4.56,1685,3.358,1686,6.58,1687,6.58,1688,6.58,1689,5.54,1690,5.54,1691,3.759,1692,5.54,1693,3.759,1694,3.759,1695,3.759,1696,3.759,1697,5.54,1698,3.759,1699,3.759,1700,4.037,1701,3.759,1702,5.54,1703,3.759,1704,3.759,1705,3.759]],["title/entities/GroupMembershipEntity.html",[0,1.349,455,2.978]],["body/entities/GroupMembershipEntity.html",[0,1.721,2,1.787,3,0.066,4,0.077,5,0.071,6,3.515,8,0.201,9,0.949,13,2.814,14,3.115,15,1.846,21,2.87,24,0.441,25,0.006,26,0.819,27,2.779,32,0.34,35,3.446,38,2.525,39,4.626,40,4.478,43,3.483,51,2.745,55,2.293,69,0.523,70,1.943,71,3.183,72,3.254,73,3.88,74,1.901,75,3.183,76,1.299,81,0.266,83,0.273,85,0.077,87,0.004,88,0.004,296,2.242,439,4.489,447,2.369,453,5.065,455,3.8,456,6.527,549,5.225,560,4.789,562,3.911,846,4.766,847,4.766,918,3.872,921,2.08,926,2.032,938,3.911,1017,3.373,1649,5.526,1706,3.911,1707,6.185,1708,4.378,1709,4.378,1710,4.378,1711,6.185,1712,4.378,1713,4.378,1714,5.526,1715,4.378,1716,4.378,1717,4.378,1718,4.378]],["title/controllers/HealthCheckController.html",[89,2.482,1719,3.734]],["body/controllers/HealthCheckController.html",[3,0.08,4,0.093,5,0.086,8,0.243,25,0.006,27,1.677,32,0.205,69,0.591,81,0.321,85,0.093,87,0.004,88,0.004,89,2.712,91,2.578,96,3.858,97,3.385,99,1.581,113,1.17,114,1.93,119,3.515,122,1.262,127,3.673,128,2.865,138,1.893,144,1.795,266,3.858,291,6.295,292,4.049,295,5.43,296,2.712,302,6.295,305,4.08,306,4.73,308,4.08,309,4.358,310,4.73,312,4.73,316,3.253,317,4.358,340,5.43,1289,5.495,1290,4.678,1292,6.83,1301,3.673,1302,4.358,1303,4.358,1719,5.43,1720,4.73,1721,9.73,1722,5.295,1723,8.444,1724,5.295,1725,8.444,1726,3.858,1727,4.73,1728,4.73,1729,5.295,1730,5.295,1731,5.295]],["title/modules/HealthCheckModule.html",[149,1.328,325,3.531]],["body/modules/HealthCheckModule.html",[3,0.089,4,0.104,5,0.096,25,0.006,55,2.19,69,0.626,81,0.358,85,0.104,87,0.004,88,0.004,91,3.684,122,1.408,149,2.073,151,3.29,152,4.216,160,4.65,161,3.629,162,3.629,164,4.65,165,3.629,169,5.024,170,1.592,178,3.513,325,6.788,340,4.55,363,7.249,1289,6.463,1290,3.92,1292,5.514,1300,4.55,1472,5.275,1719,6.435,1726,4.303,1727,5.275,1728,5.275,1732,5.275,1733,5.275,1734,5.905,1735,7.568,1736,5.905,1737,5.831,1738,5.905]],["title/classes/HealthCheckQuery.html",[81,0.294,1298,3.531]],["body/classes/HealthCheckQuery.html",[3,0.114,4,0.133,5,0.123,25,0.005,81,0.459,85,0.133,87,0.005,88,0.005,1020,0.814,1290,5.021,1298,6.415,1739,6.756,1740,6.756]],["title/classes/HealthCheckQueryHandler.html",[81,0.294,1737,3.734]],["body/classes/HealthCheckQueryHandler.html",[3,0.07,4,0.082,5,0.076,8,0.214,24,0.235,25,0.006,32,0.251,69,0.538,81,0.283,83,0.291,85,0.082,87,0.004,88,0.004,99,1.451,100,2.066,110,0.503,111,0.45,113,1.031,114,2.385,144,1.583,170,1.259,210,0.684,224,3.009,225,1.407,227,1.583,364,1.95,741,4.713,794,3.596,1020,0.503,1061,1.61,1067,3.557,1073,3.596,1134,4.574,1290,4.927,1292,3.4,1298,3.4,1300,6.175,1301,4.487,1302,3.841,1303,3.841,1520,3.596,1560,4.733,1563,2.976,1726,3.4,1737,4.984,1741,6.631,1742,4.667,1743,8.708,1744,8.929,1745,8.929,1746,8.929,1747,4.667,1748,4.667,1749,4.667,1750,4.667,1751,4.667,1752,4.667,1753,6.468,1754,6.468,1755,6.468,1756,4.667,1757,4.667,1758,4.667,1759,8.014,1760,6.468,1761,4.667,1762,4.667,1763,4.667,1764,4.169,1765,4.667,1766,4.667,1767,4.667,1768,4.169,1769,4.169,1770,4.667,1771,4.667,1772,4.667,1773,4.667]],["title/classes/HealthCheckResponse.html",[81,0.294,1301,3.362]],["body/classes/HealthCheckResponse.html",[3,0.099,4,0.115,5,0.107,8,0.301,9,1.071,24,0.407,25,0.006,32,0.314,69,0.441,81,0.398,83,0.41,85,0.115,87,0.005,88,0.005,110,0.707,111,0.633,139,1.474,210,0.695,750,1.929,1020,0.707,1130,2.681,1290,5.821,1301,5.613,1726,4.786,1774,7.833,1775,5.868,1776,9.152,1777,6.568,1778,9.398,1779,6.568,1780,6.568]],["title/classes/InvalidIdException.html",[81,0.294,1414,3.734]],["body/classes/InvalidIdException.html",[3,0.104,4,0.121,5,0.113,15,1.782,25,0.006,32,0.269,69,0.465,81,0.42,85,0.121,87,0.005,88,0.005,120,3.214,122,1.65,210,0.949,638,4.166,711,3.857,1020,0.745,1166,3.879,1172,4.8,1414,6.438,1458,4.396,1460,3.553,1781,6.185,1782,6.924,1783,6.185]],["title/classes/InvalidMailException.html",[81,0.294,1182,3.531]],["body/classes/InvalidMailException.html",[3,0.104,4,0.121,5,0.113,25,0.006,32,0.269,69,0.465,81,0.42,85,0.121,87,0.005,88,0.005,120,3.214,122,1.65,210,0.949,638,4.166,711,3.857,1020,0.745,1166,3.879,1172,4.8,1182,6.088,1458,4.396,1459,5.698,1460,3.553,1461,6.185,1462,5.698,1784,6.924]],["title/classes/InvalidParameterEntityException.html",[81,0.294,1171,3.531]],["body/classes/InvalidParameterEntityException.html",[3,0.089,4,0.104,5,0.097,24,0.382,25,0.006,32,0.23,69,0.51,81,0.461,82,2.823,83,0.371,85,0.104,87,0.004,88,0.004,110,0.818,111,0.572,120,2.757,122,1.416,144,2.576,210,0.628,250,2.58,316,3.65,570,3.65,638,3.888,711,4.232,1020,0.64,1166,3.526,1171,5.534,1172,4.364,1173,5.269,1200,4.12,1458,3.996,1460,3.23,1785,4.888,1786,7.596,1787,9.122,1788,5.94,1789,5.94,1790,6.785,1791,5.306,1792,3.943,1793,5.94,1794,5.94,1795,5.94,1796,5.94,1797,5.94]],["title/classes/InvalidPasswordException.html",[81,0.294,1180,3.362]],["body/classes/InvalidPasswordException.html",[3,0.099,4,0.116,5,0.108,25,0.006,32,0.256,69,0.444,81,0.401,85,0.116,87,0.005,88,0.005,120,3.069,122,1.576,210,0.93,592,3.455,638,4.082,711,3.683,866,4.062,1020,0.712,1166,3.771,1172,4.667,1180,5.635,1200,4.586,1236,5.094,1458,4.274,1460,3.455,1792,4.388,1798,5.441,1799,5.906,1800,6.611,1801,6.611,1802,8.794,1803,6.611,1804,8.123,1805,6.611]],["title/classes/InvalidUsernameException.html",[81,0.294,1183,3.531]],["body/classes/InvalidUsernameException.html",[3,0.104,4,0.121,5,0.112,25,0.006,32,0.268,69,0.464,81,0.419,85,0.121,87,0.005,88,0.005,120,3.203,122,1.645,210,0.947,589,2.708,638,4.16,711,3.844,1020,0.743,1166,3.871,1172,4.791,1183,6.075,1458,4.387,1460,3.546,1463,5.679,1464,6.164,1505,6.164,1783,6.164]],["title/entities/InvoicesEntity.html",[0,1.349,458,3.091]],["body/entities/InvoicesEntity.html",[0,0.718,2,1.053,3,0.039,4,0.045,5,0.042,6,3.581,8,0.118,9,0.688,13,2.039,14,2.256,15,1.337,21,2.079,24,0.497,25,0.006,26,1.208,27,2.871,28,5.988,29,6.929,30,5.166,31,6.457,32,0.351,35,1.437,37,2.242,38,1.053,43,2.84,51,1.839,55,0.957,69,0.349,70,3.92,71,2.306,72,2.357,73,2.242,74,1.12,75,2.306,76,0.765,79,5.304,80,6.203,81,0.251,82,1.226,83,0.539,85,0.045,86,6.045,87,0.002,88,0.002,111,0.399,292,3.743,316,1.585,458,2.643,479,3.876,582,3.785,809,4.64,866,4.947,885,2.875,918,3.157,921,1.226,926,1.198,1429,4.64,1437,3.702,1438,2.304,1454,6.215,1455,1.88,1456,2.123,1806,2.304,1807,6.515,1808,5.195,1809,5.195,1810,5.195,1811,5.195,1812,5.195,1813,6.515,1814,5.195,1815,5.195,1816,5.195,1817,5.195,1818,2.58,1819,4.144,1820,2.58,1821,4.144,1822,2.58,1823,4.144,1824,2.58,1825,4.144,1826,2.58,1827,4.144,1828,2.58,1829,4.144,1830,2.58,1831,2.58,1832,2.58,1833,2.58,1834,2.58,1835,6.515,1836,2.58,1837,2.58,1838,2.58,1839,4.144,1840,2.58,1841,2.58,1842,2.58,1843,4.144,1844,5.195,1845,2.58,1846,4.144,1847,2.58,1848,4.144,1849,2.58,1850,2.58,1851,4.144,1852,2.58,1853,3.702,1854,2.58,1855,2.58,1856,2.58,1857,2.58,1858,2.58,1859,2.58,1860,2.58,1861,2.58]],["title/classes/IsTestEnvironmentPipe.html",[81,0.294,411,3.734]],["body/classes/IsTestEnvironmentPipe.html",[3,0.092,4,0.107,5,0.099,8,0.28,24,0.307,25,0.006,32,0.237,69,0.41,81,0.37,83,0.381,85,0.107,87,0.004,88,0.004,99,1.733,110,0.657,111,0.587,113,1.348,120,2.831,122,1.454,144,2.068,227,2.068,364,2.329,365,4.049,366,4.231,367,4.231,368,4.231,369,4.231,381,5.628,411,5.952,412,6.358,638,2.831,664,2.768,1020,0.657,1256,3.586,1314,5.448,1566,5.448,1567,5.448,1568,5.448,1862,5.448,1863,8.478,1864,7.725,1865,7.725,1866,9.196,1867,7.574,1868,8.913,1869,6.099,1870,6.099,1871,6.099]],["title/entities/JoinedConversation.html",[0,1.349,460,2.978]],["body/entities/JoinedConversation.html",[0,1.791,2,1.892,3,0.07,4,0.081,5,0.075,6,3.566,8,0.213,9,0.979,13,2.902,14,3.212,15,1.904,21,2.96,24,0.448,25,0.006,26,1.058,27,2.823,32,0.346,35,3.587,43,3.547,51,2.857,69,0.497,70,3.283,71,3.283,72,3.356,73,4.002,74,2.013,75,3.283,76,1.375,81,0.281,83,0.289,85,0.081,87,0.004,88,0.004,448,4.452,460,3.956,461,6.621,462,2.663,471,4.451,556,5.574,566,4.141,576,4.91,900,2.956,918,3.943,921,2.203,926,2.152,998,5.699,1872,4.141,1873,7.396,1874,4.635,1875,4.635,1876,4.635,1877,4.635,1878,4.635,1879,4.635,1880,4.635,1881,4.635,1882,4.635,1883,4.635,1884,4.635]],["title/injectables/JwtAuthenticationGuard.html",[207,1.561,1885,3.989]],["body/injectables/JwtAuthenticationGuard.html",[3,0.108,4,0.127,5,0.118,25,0.006,55,2.676,69,0.575,81,0.438,85,0.127,87,0.005,88,0.005,122,1.72,207,2.759,208,3.35,722,4.602,1460,3.069,1885,7.049,1886,5.939,1887,6.447,1888,5.939,1889,6.447]],["title/injectables/JwtRefreshGuard.html",[207,1.561,646,3.531]],["body/injectables/JwtRefreshGuard.html",[3,0.107,4,0.125,5,0.116,25,0.006,55,2.648,69,0.572,81,0.433,85,0.125,87,0.005,88,0.005,122,1.702,207,2.742,208,3.315,606,3.951,631,3.658,646,6.202,722,4.554,1460,3.037,1886,5.877,1888,5.877,1889,6.379,1890,6.379]],["title/injectables/JwtRefreshTokenStrategy.html",[207,1.561,716,3.531]],["body/injectables/JwtRefreshTokenStrategy.html",[3,0.075,4,0.088,5,0.082,8,0.23,24,0.341,25,0.006,26,0.663,32,0.263,38,2.045,69,0.622,81,0.304,83,0.424,85,0.088,87,0.004,88,0.004,99,1.523,100,2.143,110,0.731,111,0.654,113,1.107,114,1.86,122,1.194,138,1.791,139,0.842,144,2.302,159,4.957,193,3.65,207,2.187,208,2.326,210,0.53,225,1.51,250,2.176,606,3.833,611,3.475,614,5.228,630,4.33,631,2.566,643,4.475,644,4.123,645,3.078,716,4.947,722,3.195,728,5.588,729,4.123,772,5.728,773,4.123,774,4.123,788,6.339,797,4.475,804,4.123,1460,2.13,1599,3.86,1792,3.326,1891,6.88,1892,4.475,1893,5.01,1894,5.01,1895,6.79,1896,5.01,1897,4.123,1898,4.475,1899,4.123,1900,3.86,1901,5.232,1902,4.123,1903,4.475,1904,4.475,1905,6.065,1906,5.588,1907,4.475,1908,5.01,1909,5.01]],["title/injectables/JwtStrategy.html",[207,1.561,717,3.531]],["body/injectables/JwtStrategy.html",[3,0.079,4,0.092,5,0.086,8,0.241,15,1.352,24,0.352,25,0.006,26,0.696,32,0.272,64,1.664,69,0.629,76,1.559,78,2.843,81,0.319,83,0.438,85,0.092,87,0.004,88,0.004,99,1.573,100,2.196,110,0.755,111,0.675,113,1.161,114,1.92,122,1.252,139,0.883,144,2.377,207,2.258,208,2.439,210,0.741,224,1.878,225,1.584,280,2.102,491,2.497,492,4.001,515,3.332,523,2.497,525,2.497,614,4.533,630,4.471,645,3.228,717,5.108,722,3.35,744,4.693,772,5.84,773,4.324,774,4.324,788,4.324,804,4.324,1460,2.234,1583,3.645,1792,3.488,1897,4.324,1898,4.693,1899,4.324,1900,4.048,1901,4.048,1902,4.324,1903,4.693,1904,4.693,1905,4.693,1906,4.324,1907,4.693,1910,4.693,1911,5.254,1912,7.011,1913,5.254]],["title/classes/ListRolesDto.html",[81,0.294,1914,3.734]],["body/classes/ListRolesDto.html",[3,0.098,4,0.114,5,0.106,8,0.299,9,1.065,24,0.404,25,0.006,32,0.312,69,0.437,81,0.395,83,0.406,85,0.114,87,0.005,88,0.005,110,0.7,111,0.627,133,4.358,135,3.423,139,1.468,210,0.688,595,4.053,750,2.081,941,3.283,942,3.826,943,2.71,1020,0.7,1248,4.319,1914,6.198,1915,7.8,1916,5.812,1917,6.506,1918,6.506]],["title/injectables/LocalAuthenticationGuard.html",[207,1.561,641,3.734]],["body/injectables/LocalAuthenticationGuard.html",[3,0.109,4,0.127,5,0.118,25,0.006,69,0.578,81,0.441,85,0.127,87,0.005,88,0.005,122,1.732,207,2.771,208,3.374,641,6.627,722,4.635,1460,3.091,1888,5.982,1919,6.492,1920,7.268]],["title/injectables/LocalStrategy.html",[207,1.561,718,3.531]],["body/injectables/LocalStrategy.html",[3,0.085,4,0.1,5,0.092,8,0.26,24,0.371,25,0.006,26,1.22,32,0.286,64,1.798,69,0.604,78,3.071,81,0.344,83,0.46,85,0.1,87,0.004,88,0.004,99,1.655,100,2.281,110,0.794,111,0.711,113,1.254,114,2.021,122,1.353,138,2.029,144,1.925,207,2.376,208,2.635,210,0.6,592,3.825,630,4.704,636,5.76,637,4.672,718,5.375,722,3.62,755,5.375,1460,2.414,1792,3.768,1897,4.672,1899,4.672,1900,4.374,1902,4.672,1921,7.321,1922,5.071,1923,5.676,1924,5.676,1925,7.377,1926,7.377,1927,5.676,1928,5.071,1929,5.676,1930,5.676,1931,5.676]],["title/classes/LoggingTypeEnum.html",[81,0.294,1048,3.091]],["body/classes/LoggingTypeEnum.html",[3,0.09,4,0.105,5,0.098,8,0.276,9,1.013,24,0.423,25,0.006,26,1.115,32,0.327,55,3.122,81,0.365,85,0.105,87,0.004,88,0.004,92,3.413,139,1.634,315,5.838,614,5.26,663,3.593,1020,0.647,1048,4.88,1256,3.909,1482,6.459,1932,4.946,1933,8.683,1934,6.009,1935,6.009,1936,6.009]],["title/classes/LoginOfUserEvent.html",[81,0.294,1619,3.531]],["body/classes/LoginOfUserEvent.html",[3,0.088,4,0.103,5,0.095,8,0.269,9,0.996,22,1.854,24,0.441,25,0.006,26,1.268,32,0.34,55,2.791,81,0.355,83,0.365,85,0.103,87,0.004,88,0.004,110,0.63,111,0.564,139,1.626,149,2.278,210,0.619,249,3.142,589,3.445,750,2.283,755,5.484,1020,0.63,1130,2.39,1252,3.887,1256,3.494,1258,4.062,1420,5.484,1421,4.266,1590,4.511,1619,5.484,1937,8.112]],["title/classes/LoginOfUserEventHandler.html",[81,0.294,1938,3.734]],["body/classes/LoginOfUserEventHandler.html",[3,0.083,4,0.097,5,0.09,8,0.254,22,1.169,24,0.365,25,0.006,32,0.282,69,0.599,81,0.336,83,0.453,85,0.097,87,0.004,88,0.004,97,2.132,99,1.628,100,2.253,110,0.782,111,0.699,113,1.224,114,1.988,118,2.458,122,1.32,138,1.98,139,0.931,149,1.517,158,3.664,168,2.914,170,1.493,171,2.307,191,2.405,210,0.586,225,1.67,249,2.092,364,2.189,589,2.173,1020,0.596,1061,1.911,1069,3.842,1083,3.842,1261,4.65,1262,4.261,1263,3.819,1264,3.085,1266,3.819,1268,2.837,1269,2.914,1272,3.085,1273,3.182,1274,3.182,1424,3.403,1425,3.287,1619,6.262,1620,4.947,1938,5.593,1939,7.234,1940,5.538,1941,5.538,1942,5.538]],["title/classes/MailDto.html",[81,0.294,258,3.531]],["body/classes/MailDto.html",[3,0.087,4,0.102,5,0.095,8,0.266,9,0.991,24,0.44,25,0.006,26,1.228,27,2.624,32,0.339,69,0.503,79,4.599,81,0.454,82,2.759,83,0.362,85,0.102,87,0.004,88,0.004,92,3.487,110,0.625,111,0.872,128,3.141,210,0.614,258,5.453,570,5.09,908,5.453,941,3.055,942,3.697,943,2.418,949,4.482,1020,0.625,1034,6.433,1943,5.186,1944,6.383,1945,5.805,1946,5.805,1947,5.805,1948,5.805,1949,5.805]],["title/classes/MailLandingPageDto.html",[81,0.294,221,3.531]],["body/classes/MailLandingPageDto.html",[3,0.092,4,0.107,5,0.099,8,0.28,9,1.023,15,2.294,24,0.426,25,0.006,26,1.278,32,0.329,81,0.37,83,0.381,85,0.107,87,0.004,88,0.004,92,3.431,93,4.945,110,0.657,111,0.587,112,3.41,139,1.579,210,0.645,221,5.628,750,2.192,1020,0.657,1130,2.49,1950,7.962,1951,5.448,1952,6.099,1953,6.099,1954,7.725]],["title/classes/MailRequiredException.html",[81,0.294,1955,3.734]],["body/classes/MailRequiredException.html",[3,0.104,4,0.121,5,0.113,25,0.006,32,0.269,69,0.465,81,0.42,85,0.121,87,0.005,88,0.005,120,3.214,122,1.65,210,0.949,638,4.166,711,3.857,1020,0.745,1166,3.879,1458,4.396,1460,3.553,1462,5.698,1955,6.438,1956,6.876,1957,6.185,1958,6.924,1959,5.335]],["title/classes/MailResponse.html",[81,0.294,129,3.531]],["body/classes/MailResponse.html",[3,0.099,4,0.116,5,0.107,8,0.302,9,1.073,24,0.408,25,0.006,26,1.073,32,0.314,81,0.4,83,0.411,85,0.116,87,0.005,88,0.005,92,3.38,93,4.498,110,0.71,111,0.635,112,3.256,129,5.907,139,1.476,210,0.697,750,2.093,941,3.309,942,3.74,1020,0.71,1960,5.887,1961,6.59,1962,6.59,1963,6.59]],["title/entities/MediaEntity.html",[0,1.349,463,2.785]],["body/entities/MediaEntity.html",[0,1.446,2,1.408,3,0.052,4,0.06,5,0.056,6,3.569,8,0.158,9,0.828,13,2.453,14,2.716,15,1.609,21,2.502,24,0.452,25,0.006,26,0.921,27,2.849,32,0.349,34,4.945,39,5.452,40,5.277,43,3.203,51,2.306,69,0.501,70,2.775,71,2.775,72,2.837,74,1.498,75,2.775,76,1.023,77,2.392,81,0.209,83,0.215,85,0.06,87,0.003,88,0.003,439,4.128,447,1.866,453,4.833,463,2.985,471,4.546,560,4.276,568,2.392,750,1.49,860,5.406,899,5.344,900,2.199,918,3.561,921,1.639,926,1.601,1017,2.657,1964,3.081,1965,6.252,1966,6.252,1967,6.252,1968,6.252,1969,6.252,1970,5.585,1971,6.252,1972,6.252,1973,5.196,1974,3.449,1975,5.196,1976,3.449,1977,5.196,1978,3.449,1979,3.449,1980,3.449,1981,5.196,1982,3.449,1983,5.196,1984,3.449,1985,3.449,1986,3.449,1987,5.196,1988,3.449,1989,5.196,1990,3.449,1991,3.449]],["title/entities/MessageEntity.html",[0,1.349,465,2.978]],["body/entities/MessageEntity.html",[0,1.789,2,1.888,3,0.07,4,0.081,5,0.075,6,3.564,8,0.212,9,0.978,13,2.899,14,3.209,15,1.901,21,2.956,24,0.448,25,0.006,26,1.057,27,2.822,32,0.345,35,3.581,39,3.815,40,3.693,43,3.545,51,2.853,69,0.496,70,3.279,71,3.279,72,3.352,73,3.997,74,2.009,75,3.279,76,1.372,81,0.281,83,0.289,85,0.081,87,0.004,88,0.004,295,5.692,439,4.569,447,2.502,448,4.448,462,2.657,465,3.949,556,5.569,570,2.842,750,2.07,918,3.941,921,2.198,926,2.147,1992,4.131,1993,6.599,1994,6.427,1995,4.625,1996,4.625,1997,6.427,1998,4.625,1999,4.625,2000,4.625,2001,4.625,2002,4.625]],["title/classes/NoUserTraceException.html",[81,0.294,2003,3.989]],["body/classes/NoUserTraceException.html",[3,0.103,4,0.12,5,0.112,22,1.887,25,0.006,32,0.266,69,0.46,81,0.416,85,0.12,87,0.005,88,0.005,210,0.945,710,5.281,1020,0.738,1166,3.855,1173,4.755,1458,4.369,1460,3.532,2003,6.835,2004,7.418,2005,6.123,2006,8.934,2007,6.854,2008,6.854,2009,6.854,2010,6.854]],["title/entities/NotificationEntity.html",[0,1.349,481,2.877]],["body/entities/NotificationEntity.html",[0,1.345,2,1.281,3,0.047,4,0.055,5,0.051,6,3.499,8,0.144,9,0.781,13,2.314,14,2.562,15,1.518,21,2.36,22,1.245,24,0.491,25,0.006,26,1.077,27,2.789,28,4.597,29,5.826,30,4.344,31,3.979,32,0.341,35,3.286,37,4.611,38,3.479,39,4.488,40,4.344,43,3.087,44,2.802,45,3.979,46,5.509,48,2.802,49,3.979,51,2.146,53,3.933,55,2.457,61,2.802,62,3.979,64,2.395,69,0.508,70,3.356,71,2.146,72,2.194,73,3.585,74,1.363,75,2.146,76,0.931,78,1.697,79,3.624,80,4.544,81,0.293,82,1.491,83,0.508,85,0.055,86,5.106,87,0.003,88,0.003,292,4.112,296,1.607,448,4.213,462,1.802,471,3.873,481,2.869,556,3.915,576,3.915,584,2.176,857,3.209,867,2.582,885,4.597,900,2,918,3.431,921,1.491,926,1.456,1059,2.082,1944,5.515,2011,2.802,2012,5.898,2013,7.158,2014,4.834,2015,3.137,2016,3.137,2017,3.137,2018,3.137,2019,3.137,2020,4.834,2021,3.137,2022,3.137,2023,4.834,2024,3.137,2025,3.137,2026,6.394,2027,3.137,2028,3.137,2029,4.834,2030,3.137,2031,3.137,2032,3.137]],["title/entities/OccupationEntity.html",[0,1.349,467,2.877]],["body/entities/OccupationEntity.html",[0,1.237,2,1.814,3,0.067,4,0.078,5,0.072,6,3.587,8,0.204,9,0.957,13,2.838,14,3.141,15,1.861,21,2.893,24,0.452,25,0.006,26,1.039,27,2.849,32,0.349,34,4.777,37,2.405,38,2.552,43,3.5,51,2.774,69,0.527,70,2.774,71,3.209,72,3.281,74,1.93,75,3.209,76,1.318,77,3.083,81,0.27,83,0.451,85,0.078,87,0.004,88,0.004,439,4.511,447,2.405,467,3.71,471,4.392,832,3.424,857,4.149,872,5.016,897,5.443,900,2.834,918,3.891,921,2.112,926,2.063,1700,4.554,2033,3.97,2034,6.459,2035,6.459,2036,6.459,2037,6.251,2038,4.444,2039,6.251,2040,4.444,2041,4.444,2042,4.444,2043,4.444,2044,4.444,2045,6.251,2046,4.444,2047,4.444,2048,4.444]],["title/entities/PlanEntity.html",[0,1.349,469,3.091]],["body/entities/PlanEntity.html",[0,1.623,2,1.646,3,0.061,4,0.071,5,0.066,6,3.605,8,0.185,9,0.907,13,2.689,14,2.976,15,1.763,21,2.742,24,0.49,25,0.006,26,1.099,27,2.874,28,5.525,29,5.785,30,4.313,32,0.352,43,3.389,51,2.589,69,0.392,70,3.685,71,3.041,72,3.109,74,1.752,75,3.041,76,1.196,81,0.245,83,0.573,85,0.071,86,5.785,87,0.003,88,0.003,292,4.576,469,3.719,479,4.625,574,3.319,836,2.478,866,5.101,898,3.584,918,3.768,921,1.917,926,1.872,1433,5.639,1455,2.938,1456,4.8,2049,3.603,2050,6.852,2051,7.965,2052,7.965,2053,4.033,2054,4.033,2055,4.033,2056,5.832,2057,7.508,2058,4.033,2059,4.033,2060,4.033,2061,4.033,2062,4.033,2063,5.832,2064,4.033,2065,4.033]],["title/entities/ProfileEntity.html",[0,1.349,471,2.482]],["body/entities/ProfileEntity.html",[0,1.141,2,1.039,3,0.038,4,0.045,5,0.041,6,3.455,8,0.117,9,0.681,11,1.689,13,2.02,14,2.235,15,1.325,21,2.06,22,1.366,24,0.438,25,0.006,26,0.781,27,2.759,32,0.338,34,3.852,35,1.418,38,3.594,39,5.323,40,5.059,43,2.823,51,1.819,64,1.869,69,0.525,70,2.284,71,2.284,72,2.336,73,2.218,74,1.105,75,2.284,76,0.755,77,1.765,78,1.377,81,0.154,83,0.454,85,0.045,87,0.002,88,0.002,111,0.864,296,3.022,439,3.826,442,3.626,444,1.765,447,1.377,460,4.249,462,1.462,463,4.178,467,3.503,471,2.099,481,3.503,549,5.038,568,4.094,572,4.857,576,3.416,584,2.843,820,4.236,836,3.976,839,5.719,840,5.845,860,2.721,872,2.843,896,3.966,897,3.57,898,4.249,899,3.282,911,1.961,914,1.854,918,3.138,921,1.209,926,1.181,948,4.236,953,4.598,960,3.661,977,3.661,998,4.547,1001,4.236,1018,2.094,1019,2.094,2035,4.598,2066,2.273,2067,5.147,2068,5.147,2069,5.147,2070,5.147,2071,5.147,2072,2.544,2073,4.099,2074,4.099,2075,2.544,2076,2.544,2077,2.544,2078,2.544,2079,4.099,2080,2.544,2081,4.099,2082,2.544,2083,4.099,2084,4.099,2085,5.901,2086,2.544,2087,4.099,2088,2.544,2089,4.099,2090,2.544,2091,2.544,2092,4.099,2093,4.099,2094,2.544,2095,2.544,2096,4.099,2097,2.544,2098,2.544,2099,4.099,2100,2.544,2101,2.544]],["title/entities/ReferralCodeEntity.html",[0,1.349,483,3.091]],["body/entities/ReferralCodeEntity.html",[0,1.016,2,1.491,3,0.055,4,0.064,5,0.059,6,3.418,8,0.168,9,0.718,13,2.539,15,1.665,21,2.589,22,1.512,24,0.47,25,0.006,26,0.948,27,2.701,30,2.098,32,0.331,37,3.874,38,2.923,43,3.618,46,3.951,51,1.621,64,2.759,69,0.514,70,2.871,71,2.407,73,3.5,74,1.586,75,2.407,76,1.083,78,1.976,80,4.179,81,0.329,82,1.735,85,0.064,87,0.003,88,0.003,128,1.976,317,4.463,479,4.466,483,3.458,484,6.042,582,4.714,594,3.951,821,4.985,857,3.6,899,3.458,910,4.179,1034,6.042,1040,6.597,1223,4.985,1228,4.463,1245,3.005,1247,4.844,1428,3.005,1455,2.661,1700,2.661,1959,5.517,2102,6.469,2103,6.469,2104,5.423,2105,5.423,2106,4.463,2107,3.652,2108,3.652,2109,3.652,2110,3.652,2111,3.652,2112,3.652,2113,3.652,2114,3.652,2115,5.423,2116,5.423,2117,5.423,2118,5.423,2119,3.652,2120,3.652,2121,3.652,2122,5.423,2123,3.652,2124,3.652,2125,3.652,2126,3.652,2127,3.652,2128,3.652,2129,5.423,2130,3.652,2131,5.423,2132,3.652,2133,3.652,2134,3.652]],["title/classes/RegisterCommand.html",[81,0.294,775,3.531]],["body/classes/RegisterCommand.html",[3,0.091,4,0.106,5,0.098,8,0.277,9,1.017,24,0.447,25,0.006,26,1.313,32,0.345,81,0.367,83,0.377,85,0.106,87,0.004,88,0.004,110,0.651,111,0.582,112,3.401,139,1.635,210,0.639,589,3.486,592,3.9,750,2.297,775,5.597,1020,0.651,1130,2.468,1590,4.658,2135,5.4,2136,6.045,2137,8.443]],["title/classes/RegisterEvent.html",[81,0.294,2138,3.531]],["body/classes/RegisterEvent.html",[3,0.102,4,0.119,5,0.111,8,0.312,9,1.095,24,0.416,25,0.006,26,1.227,32,0.321,81,0.413,83,0.425,85,0.119,87,0.005,88,0.005,110,0.733,111,0.656,139,1.497,210,0.72,406,3.782,750,1.971,1020,0.733,1130,2.779,1253,3.684,2138,6.026,2139,6.082,2140,6.809,2141,6.809]],["title/classes/RegisterEventHandler.html",[81,0.294,738,3.734]],["body/classes/RegisterEventHandler.html",[3,0.087,4,0.102,5,0.094,8,0.266,9,0.989,15,1.923,22,1.578,24,0.291,25,0.006,32,0.29,55,2.146,69,0.587,81,0.351,83,0.361,85,0.102,87,0.004,88,0.004,99,1.676,110,0.623,111,0.558,113,1.279,122,1.38,170,1.561,227,2.533,364,2.253,738,5.757,740,6.809,1020,0.623,1061,1.997,1256,2.687,1262,4.352,1263,3.931,1266,3.931,1268,2.965,1269,3.046,1275,4.591,1310,5.444,1312,5.171,1424,3.557,1425,3.436,2138,6.369,2142,7.39,2143,8.273,2144,7.471,2145,5.789,2146,5.171,2147,5.789,2148,5.789,2149,6.674,2150,5.789]],["title/classes/RegisterHandler.html",[81,0.294,730,3.734]],["body/classes/RegisterHandler.html",[3,0.037,4,0.043,5,0.04,8,0.113,9,0.529,22,0.844,24,0.388,25,0.006,26,1.18,30,1.416,32,0.315,53,3.778,64,1.266,69,0.581,76,0.731,78,1.334,81,0.242,82,1.171,83,0.482,85,0.043,87,0.002,88,0.002,99,0.896,100,2.376,110,0.854,111,0.744,112,1.481,113,1.707,114,2.116,144,2.619,170,0.665,175,1.23,176,1.144,177,1.171,178,3.164,210,0.422,224,3.258,225,2.329,227,2.895,250,2.516,280,0.986,364,1.204,491,1.171,492,2.753,515,1.898,523,1.171,524,2.652,525,1.171,589,2.674,592,2.142,594,1.796,598,1.636,603,4.524,630,1.572,663,2.674,664,3.093,730,3.078,775,4.22,866,2.455,869,1.71,949,3.134,1020,0.265,1062,2.725,1067,1.773,1076,2.161,1078,1.297,1079,1.334,1134,3.676,1135,4.145,1136,3.569,1137,4.499,1138,3.569,1139,3.288,1140,3.288,1141,3.288,1142,3.288,1143,3.288,1147,2.202,1150,3.569,1152,4.463,1153,3.288,1155,3.288,1157,2.029,1159,3.288,1161,3.288,1164,2.652,1165,4.965,1166,3.164,1167,2.652,1168,3.078,1169,2.652,1170,3.078,1171,1.796,1172,3.328,1173,1.71,1174,2.202,1179,3.582,1180,2.771,1181,2.029,1182,2.911,1183,2.911,1185,2.029,1186,2.202,1187,3.288,1188,2.202,1189,2.202,1192,3.915,1193,3.687,1194,5.609,1195,2.652,1196,2.652,1200,4.018,1203,2.202,1205,2.202,1206,3.288,1207,2.202,1208,2.029,1209,2.202,1211,2.202,1218,1.463,1223,3.881,1227,3.569,1228,3.288,1229,2.202,1230,3.288,1231,3.288,1232,2.029,1233,2.029,1234,2.029,1235,3.288,1236,1.899,2138,1.796,2146,2.202,2151,2.202,2152,3.995,2153,2.465,2154,2.465,2155,2.465,2156,2.465,2157,2.465,2158,2.465,2159,2.465,2160,2.465,2161,2.465,2162,2.465,2163,2.465,2164,2.465,2165,2.465,2166,2.465,2167,3.995,2168,2.465,2169,3.995,2170,2.465,2171,2.465,2172,3.995,2173,2.465]],["title/classes/RemoveRefreshTokenCommand.html",[81,0.294,2174,3.531]],["body/classes/RemoveRefreshTokenCommand.html",[3,0.1,4,0.117,5,0.109,8,0.306,9,1.082,24,0.411,25,0.006,26,1.218,32,0.317,81,0.405,83,0.417,85,0.117,87,0.005,88,0.005,110,0.719,111,0.643,139,1.484,210,0.706,406,3.757,606,4.1,750,1.948,1020,0.719,1130,2.725,1253,3.612,2174,5.954,2175,7.889,2176,5.494,2177,5.963,2178,5.963]],["title/classes/RemoveRefreshTokenCommandHandler.html",[81,0.294,2179,3.734]],["body/classes/RemoveRefreshTokenCommandHandler.html",[3,0.078,4,0.091,5,0.084,8,0.237,22,1.09,24,0.348,25,0.006,32,0.269,64,1.635,69,0.603,76,1.531,81,0.313,83,0.432,85,0.091,87,0.004,88,0.004,99,1.554,100,2.176,110,0.746,111,0.667,113,1.14,114,1.898,170,1.392,175,2.576,176,2.396,177,2.453,178,2.396,210,0.732,224,2.477,225,1.556,227,1.75,280,2.065,296,2.644,364,2.089,491,2.453,492,3.972,515,3.292,523,2.453,525,2.453,606,3.88,660,2.396,662,2.342,663,3.069,1020,0.556,1061,1.781,1062,4.231,1067,3.075,1076,3.748,1078,2.715,1079,2.792,1134,4.696,1163,2.513,1179,3.458,1192,2.965,1193,2.792,1267,3.171,1607,3.977,1631,4.248,2174,6.09,2179,6.025,2180,6.985,2181,6.09,2182,5.161,2183,5.161,2184,3.76]],["title/classes/RemoveRefreshTokenEvent.html",[81,0.294,2185,3.734]],["body/classes/RemoveRefreshTokenEvent.html",[3,0.086,4,0.101,5,0.093,8,0.263,9,0.984,22,1.569,24,0.438,25,0.006,26,1.263,32,0.338,55,2.755,81,0.348,83,0.358,85,0.101,87,0.004,88,0.004,110,0.618,111,0.553,139,1.62,149,2.257,210,0.607,249,3.113,406,3.557,606,4.369,631,3.806,750,2.273,1020,0.618,1130,2.343,1253,3.106,1256,3.449,2185,5.725,2186,8.062,2187,4.724,2188,6.638,2189,6.115,2190,5.127,2191,5.127]],["title/classes/RemoveRefreshTokenEventHandler.html",[81,0.294,2192,3.734]],["body/classes/RemoveRefreshTokenEventHandler.html",[3,0.085,4,0.1,5,0.092,8,0.26,15,1.461,24,0.371,25,0.006,32,0.286,69,0.55,81,0.344,83,0.46,85,0.1,87,0.004,88,0.004,97,2.185,99,1.655,110,0.794,111,0.711,113,1.254,118,2.519,138,2.029,139,0.954,149,1.555,158,3.689,170,1.531,171,2.365,191,2.465,210,0.6,249,2.144,332,4.704,364,2.224,606,4.175,631,2.907,1020,0.611,1061,1.959,1262,4.312,1263,3.881,1264,3.162,1265,3.369,1266,3.881,1268,2.907,1269,2.986,1272,3.162,1273,3.261,1274,3.261,1275,3.488,1424,3.488,2185,6.686,2192,5.684,2193,7.321,2194,6.686,2195,5.676,2196,5.676,2197,5.676]],["title/injectables/RequestLoggingMiddleware.html",[207,1.561,347,3.734]],["body/injectables/RequestLoggingMiddleware.html",[3,0.062,4,0.073,5,0.068,8,0.191,9,0.789,24,0.35,25,0.006,32,0.27,69,0.594,81,0.252,83,0.372,85,0.073,87,0.003,88,0.003,99,1.337,110,0.642,111,0.574,113,0.918,122,0.991,138,1.486,139,1.279,158,3.046,171,1.731,191,1.805,207,1.92,208,1.929,210,0.439,224,2.491,227,1.409,239,4.443,246,3.028,250,3.5,296,4.128,315,4.854,332,3.8,346,5.872,347,4.592,364,1.253,365,2.759,366,2.883,367,5.591,368,2.883,369,2.883,373,5.077,614,4.374,639,3.028,640,5.369,645,2.553,1027,4.342,1032,4.592,1036,2.883,1048,2.65,1059,3.956,1066,5.077,1075,5.546,1082,3.202,1086,4.342,1088,3.42,1095,3.42,1096,3.712,1099,2.759,1479,3.202,1480,4.592,1482,3.028,1483,3.42,1488,3.42,1490,3.712,1491,3.202,1493,3.202,1497,3.202,1519,3.202,1520,4.592,1522,4.905,1525,4.905,1526,4.592,1527,3.202,1528,3.42,1529,3.42,1530,3.42,1531,4.905,1532,3.42,1533,4.905,1534,3.42,1535,3.42,1536,3.42,1537,3.42,1538,3.42,1539,3.42,1540,3.712,1548,3.42,1549,3.42,1550,3.42,1551,4.905,1552,3.42,1906,3.42,2198,6.8,2199,5.96,2200,4.156,2201,3.712,2202,4.156,2203,5.324,2204,3.712,2205,3.712,2206,4.156,2207,4.156,2208,4.156,2209,4.156]],["title/interfaces/RequestUser.html",[611,3.362,2210,3.217]],["body/interfaces/RequestUser.html",[3,0.104,4,0.121,5,0.112,8,0.317,9,1.104,22,1.965,24,0.347,25,0.006,64,2.949,69,0.56,78,3.734,85,0.121,87,0.005,88,0.005,611,5.784,614,5.148,645,4.24,1460,3.546,2210,4.581,2211,5.317,2212,6.164,2213,6.164]],["title/injectables/ResponseLoggingMiddleware.html",[207,1.561,350,3.734]],["body/injectables/ResponseLoggingMiddleware.html",[3,0.064,4,0.075,5,0.07,8,0.196,9,0.805,24,0.388,25,0.006,32,0.275,69,0.569,81,0.259,83,0.38,85,0.075,87,0.004,88,0.004,99,1.365,100,1.97,110,0.655,111,0.586,113,0.945,122,1.02,138,1.529,139,1.296,144,1.45,149,1.172,158,3.086,171,1.782,191,1.858,207,1.96,208,1.986,210,0.452,224,2.532,225,1.29,227,1.45,239,4.515,246,3.116,250,3.539,296,4.174,315,4.918,346,5.159,350,4.688,364,1.29,365,2.839,366,2.967,367,5.653,368,2.967,369,2.967,370,5.007,371,3.52,372,5.007,373,5.619,614,4.431,639,3.116,640,5.456,645,2.628,1027,4.433,1032,4.688,1066,5.159,1075,5.619,1082,3.296,1086,3.116,1088,3.52,1099,2.839,1479,3.296,1480,4.688,1491,3.296,1493,3.296,1495,3.52,1497,3.296,1519,3.296,1520,4.688,1522,5.007,1525,5.007,1526,4.688,1527,3.296,1528,3.52,1529,3.52,1530,3.52,1531,3.52,1532,3.52,1533,5.007,1534,3.52,1535,3.52,1536,3.52,1537,3.52,1538,3.52,1539,3.52,1541,3.821,1542,3.821,1543,3.821,1544,3.821,1545,3.821,1546,3.821,1548,3.52,1549,3.52,1550,3.52,1551,3.52,1552,3.52,2201,3.821,2203,5.435,2204,3.821,2205,3.821,2214,6.89,2215,6.084,2216,4.277]],["title/classes/RestoreUserCommand.html",[81,0.294,2217,3.531]],["body/classes/RestoreUserCommand.html",[3,0.1,4,0.116,5,0.108,8,0.304,9,1.078,15,2.266,24,0.409,25,0.006,26,1.078,32,0.316,81,0.402,83,0.414,85,0.116,87,0.005,88,0.005,110,0.714,111,0.639,139,1.48,210,0.701,750,2.099,941,3.323,942,3.847,943,2.763,1020,0.714,1126,4.601,1408,6.699,2217,5.93,2218,7.867]],["title/classes/RestoreUserCommandHandler.html",[81,0.294,2219,3.734]],["body/classes/RestoreUserCommandHandler.html",[3,0.07,4,0.082,5,0.076,8,0.215,9,0.859,15,1.67,22,0.99,24,0.374,25,0.006,32,0.289,38,1.914,64,1.485,69,0.601,76,1.391,81,0.284,83,0.405,85,0.082,87,0.004,88,0.004,99,1.456,100,2.071,110,0.699,111,0.625,113,1.036,114,1.777,170,1.264,175,2.34,176,2.177,177,2.228,178,2.177,210,0.686,224,1.676,225,1.956,227,2.523,280,1.876,364,1.956,491,2.228,492,3.816,515,3.084,523,2.228,525,2.228,600,3.613,660,3.012,662,2.944,663,2.92,664,3.377,708,4.188,750,1.774,1020,0.505,1061,1.618,1062,4.026,1067,2.88,1070,2.99,1076,3.511,1078,2.467,1079,2.537,1133,5.376,1134,4.797,1163,2.283,1179,3.239,1192,2.694,1193,2.537,1218,2.783,1261,2.537,1425,2.783,1583,3.252,1587,2.783,1605,3.416,1959,3.613,2217,5.851,2219,5.733,2220,7.173,2221,4.688,2222,3.416,2223,4.188,2224,4.688,2225,6.489,2226,4.728,2227,4.688,2228,4.688]],["title/classes/RestoreUserEvent.html",[81,0.294,2222,3.531]],["body/classes/RestoreUserEvent.html",[3,0.088,4,0.103,5,0.095,8,0.269,9,0.996,22,1.854,24,0.441,25,0.006,26,1.268,32,0.34,55,2.791,81,0.355,83,0.365,85,0.103,87,0.004,88,0.004,110,0.63,111,0.564,139,1.626,149,2.278,210,0.619,249,3.142,406,3.584,750,2.283,1020,0.63,1130,2.39,1252,3.887,1253,3.168,1256,3.494,1258,4.062,1420,5.484,1421,4.266,2222,5.484,2229,8.112,2230,7.526]],["title/classes/RestoreUserEventHandler.html",[81,0.294,2231,3.989]],["body/classes/RestoreUserEventHandler.html",[3,0.086,4,0.1,5,0.093,8,0.261,15,1.465,22,1.202,24,0.371,25,0.006,32,0.287,69,0.551,81,0.345,83,0.461,85,0.1,87,0.004,88,0.004,97,2.191,99,1.658,100,2.284,110,0.796,111,0.712,113,1.258,114,2.024,118,2.526,138,2.035,139,0.957,149,1.559,158,3.692,170,1.535,171,2.371,191,2.472,210,0.602,225,1.716,249,2.15,364,2.228,1020,0.613,1061,1.964,1261,4.699,1262,4.318,1263,3.888,1264,3.171,1265,3.378,1266,3.888,1267,3.497,1268,2.915,1269,2.995,1272,3.171,1273,3.27,1274,3.27,1275,3.497,2222,6.329,2223,5.085,2231,6.082,2232,7.331,2233,5.692,2234,5.692]],["title/classes/RoleGroupMembershipEnum.html",[81,0.294,1714,3.734]],["body/classes/RoleGroupMembershipEnum.html",[3,0.089,4,0.104,5,0.097,6,3.464,8,0.273,9,1.006,24,0.421,25,0.006,26,1.109,32,0.325,55,3.105,81,0.36,85,0.104,87,0.004,88,0.004,139,1.63,560,5.423,821,7.029,1020,0.64,1256,3.888,1714,5.853,1933,8.664,2235,7.264,2236,5.306,2237,8.149,2238,9.122,2239,5.94,2240,5.94,2241,5.94]],["title/classes/SamePasswordException.html",[81,0.294,2242,3.734]],["body/classes/SamePasswordException.html",[3,0.103,4,0.12,5,0.112,25,0.006,32,0.266,69,0.46,81,0.416,85,0.12,87,0.005,88,0.005,120,3.182,122,1.634,210,0.945,592,3.532,638,4.148,711,3.819,1020,0.738,1166,3.855,1458,4.369,1460,3.532,1798,5.641,1799,6.123,2242,6.399,2243,6.835,2244,6.854,2245,5.641,2246,5.641]],["title/classes/SendMailCommand.html",[81,0.294,285,3.531]],["body/classes/SendMailCommand.html",[3,0.086,4,0.1,5,0.093,8,0.263,9,0.982,24,0.438,25,0.006,26,1.223,32,0.338,81,0.347,83,0.357,85,0.1,87,0.004,88,0.004,92,3.471,110,0.616,111,0.869,139,1.619,210,0.605,285,5.404,296,4.458,570,5.056,750,2.296,941,3.028,942,3.681,943,2.384,949,4.452,1020,0.616,1369,4.41,1370,5.113,1371,5.113,1944,6.34,2247,8.055,2248,5.113,2249,5.113]],["title/classes/SendMailCommandHandler.html",[81,0.294,274,3.734]],["body/classes/SendMailCommandHandler.html",[3,0.083,4,0.097,5,0.09,8,0.253,24,0.364,25,0.006,32,0.281,69,0.598,81,0.334,83,0.452,85,0.097,87,0.004,88,0.004,92,3.109,99,1.623,100,2.248,110,0.779,111,0.697,113,1.217,114,1.981,122,1.313,139,0.926,168,2.898,170,1.485,181,3.385,184,3.657,210,0.582,224,2.586,227,1.868,274,5.574,285,6.249,364,2.181,949,3.914,1020,0.593,1062,4.37,1067,3.211,1068,4.244,1069,5.95,1071,5.574,1076,3.914,1078,3.806,1079,2.98,1083,3.821,1085,4.921,1134,4.773,1192,3.165,1369,4.244,2248,4.921,2249,4.921,2250,7.215,2251,5.27,2252,4.921,2253,5.508,2254,5.508,2255,5.508,2256,5.508]],["title/classes/SendMailEvent.html",[81,0.294,2251,3.531]],["body/classes/SendMailEvent.html",[3,0.077,4,0.09,5,0.083,8,0.235,9,0.913,24,0.45,25,0.006,26,1.261,32,0.347,55,2.556,81,0.311,83,0.32,85,0.09,87,0.004,88,0.004,92,3.523,97,2.653,110,0.552,111,0.838,112,3.09,139,1.654,149,2.134,210,0.542,249,2.943,570,4.787,750,2.345,941,2.814,942,3.55,943,2.134,949,4.215,1020,0.552,1256,3.2,1396,4.216,1401,4.576,1402,4.576,1944,6.002,2251,5.022,2257,8.175,2258,5.122,2259,5.122,2260,5.122,2261,6.157,2262,5.122]],["title/classes/SendMailEventHandler.html",[81,0.294,276,3.734]],["body/classes/SendMailEventHandler.html",[3,0.086,4,0.1,5,0.093,8,0.261,24,0.371,25,0.006,32,0.287,69,0.551,81,0.345,83,0.461,85,0.1,87,0.004,88,0.004,92,3.159,97,2.191,99,1.658,100,2.284,110,0.796,111,0.712,112,2.111,113,1.258,114,2.024,118,2.526,138,2.035,139,0.957,149,1.559,158,3.692,170,1.535,171,2.371,184,5.766,191,2.472,210,0.602,225,1.716,249,2.15,276,5.694,364,2.228,1020,0.613,1061,1.964,1262,4.318,1263,3.888,1264,3.171,1265,3.378,1266,3.888,1268,2.915,1269,2.995,1272,3.171,1273,3.27,1274,3.27,1424,3.497,2251,6.329,2252,5.085,2263,7.331,2264,5.692,2265,5.692,2266,5.692]],["title/classes/SetCurrentRefreshTokenCommand.html",[81,0.294,2267,3.531]],["body/classes/SetCurrentRefreshTokenCommand.html",[3,0.093,4,0.108,5,0.101,8,0.283,9,1.03,24,0.429,25,0.006,26,1.281,32,0.331,81,0.374,83,0.385,85,0.108,87,0.005,88,0.005,110,0.665,111,0.595,139,1.584,210,0.653,406,3.767,606,4.156,750,2.2,1020,0.665,1130,2.52,1599,6.897,1600,5.514,2176,5.08,2177,5.514,2178,6.953,2267,5.671,2268,7.997,2269,5.942]],["title/classes/SetCurrentRefreshTokenCommandHandler.html",[81,0.294,2270,3.734]],["body/classes/SetCurrentRefreshTokenCommandHandler.html",[3,0.075,4,0.088,5,0.081,8,0.229,22,1.055,24,0.341,25,0.006,32,0.263,64,1.583,69,0.611,76,1.482,81,0.303,83,0.423,85,0.088,87,0.004,88,0.004,99,1.521,100,2.141,110,0.73,111,0.653,113,1.104,114,1.857,170,1.348,175,2.494,176,2.32,177,2.375,178,2.32,210,0.717,224,2.424,225,2.044,227,1.695,250,2.171,280,2,364,2.044,491,2.375,492,3.92,515,3.221,523,2.375,524,4.5,525,2.375,594,3.641,606,3.829,660,2.32,662,2.268,663,3.019,1020,0.538,1061,1.724,1062,4.162,1067,3.009,1076,3.668,1078,2.629,1079,2.704,1134,4.658,1163,2.433,1179,3.383,1192,2.871,1193,2.704,1425,2.966,1605,3.641,1607,5.223,2181,6.01,2184,3.641,2267,6.01,2269,5.476,2270,5.927,2271,6.872,2272,4.997,2273,4.997,2274,4.997]],["title/classes/SetCurrentRefreshTokenEvent.html",[81,0.294,2275,3.734]],["body/classes/SetCurrentRefreshTokenEvent.html",[3,0.085,4,0.099,5,0.092,8,0.258,9,0.971,22,1.826,24,0.435,25,0.006,26,1.258,32,0.335,55,2.721,81,0.342,83,0.351,85,0.099,87,0.004,88,0.004,110,0.606,111,0.542,139,1.614,149,2.236,210,0.595,249,3.084,406,3.531,606,4.349,631,3.758,750,2.264,839,4.679,1020,0.606,1130,2.298,1253,3.046,1256,3.406,2187,4.633,2188,6.554,2190,5.029,2191,5.029,2269,5.954,2275,5.654,2276,8.013]],["title/classes/SetCurrentRefreshTokenEventHandler.html",[81,0.294,2277,3.734]],["body/classes/SetCurrentRefreshTokenEventHandler.html",[3,0.084,4,0.098,5,0.091,8,0.258,15,1.445,24,0.368,25,0.006,32,0.284,69,0.548,81,0.341,83,0.457,85,0.098,87,0.004,88,0.004,97,2.161,99,1.643,110,0.789,111,0.705,113,1.24,118,2.492,138,2.007,139,0.944,149,1.538,158,3.678,170,1.514,171,2.339,191,2.438,210,0.594,249,2.121,332,4.67,364,2.208,606,4.161,631,2.875,839,3.58,1020,0.604,1061,1.937,1262,4.289,1263,3.853,1264,3.128,1265,3.332,1266,3.853,1268,2.875,1269,2.954,1272,3.128,1273,3.225,1274,3.225,1275,3.45,1424,3.45,2194,6.657,2269,5.735,2275,6.657,2277,5.643,2278,7.282,2279,5.614,2280,5.614]],["title/classes/SignInDto.html",[81,0.294,2281,3.989]],["body/classes/SignInDto.html",[3,0.099,4,0.115,5,0.107,8,0.301,9,1.071,24,0.407,25,0.006,26,1.212,27,2.563,32,0.314,69,0.441,79,5.623,81,0.491,82,3.122,85,0.115,87,0.005,88,0.005,589,3.441,592,3.729,910,5.061,1020,0.707,2106,5.406,2281,6.659,2282,7.217,2283,5.868,2284,5.868,2285,6.568,2286,6.568,2287,5.868,2288,5.868]],["title/classes/SignUpDto.html",[81,0.294,625,3.531]],["body/classes/SignUpDto.html",[3,0.094,4,0.11,5,0.102,8,0.287,9,1.038,24,0.431,25,0.006,26,1.251,27,2.716,32,0.332,69,0.42,79,5.691,81,0.476,82,2.969,85,0.11,87,0.005,88,0.005,112,3.179,589,3.364,592,3.646,625,5.715,908,5.715,910,4.814,1020,0.673,2106,5.142,2282,7.4,2284,5.581,2287,5.581,2288,5.581,2289,5.581,2290,5.581,2291,6.248,2292,6.248,2293,6.248]],["title/entities/SocialNetworkEntity.html",[0,1.349,473,3.091]],["body/entities/SocialNetworkEntity.html",[0,2.194,2,1.605,3,0.059,4,0.069,5,0.064,6,3.484,8,0.18,9,0.894,13,2.912,14,3.222,15,2.029,21,2.969,24,0.438,25,0.006,26,1.223,27,2.758,32,0.338,43,3.772,51,2.542,69,0.385,70,3.771,71,2.998,72,3.065,74,1.708,75,2.998,76,1.166,81,0.347,83,0.53,85,0.069,87,0.003,88,0.003,292,3.29,439,4.33,447,2.127,473,4.307,474,6.468,578,3.236,836,2.416,898,3.519,917,7.423,918,3.735,921,1.869,926,1.825,2034,6.033,2294,3.513,2295,6.754,2296,9.019,2297,7.885,2298,7.885,2299,5.726,2300,3.932,2301,3.932,2302,3.932,2303,3.932,2304,3.932,2305,3.932,2306,3.932,2307,3.932,2308,3.932,2309,3.513,2310,3.932,2311,8.495,2312,3.932,2313,2.61,2314,3.932]],["title/classes/SoftDeleteUserCommand.html",[81,0.294,2315,3.531]],["body/classes/SoftDeleteUserCommand.html",[3,0.1,4,0.117,5,0.109,8,0.306,9,1.082,24,0.411,25,0.006,26,1.218,32,0.317,81,0.405,83,0.417,85,0.117,87,0.005,88,0.005,106,4.647,110,0.719,111,0.643,139,1.484,210,0.706,406,3.757,750,1.948,1020,0.719,1126,4.631,1130,2.725,1253,3.612,1408,5.494,2315,5.954,2316,7.889,2317,6.676]],["title/classes/SoftDeleteUserCommandHandler.html",[81,0.294,2318,3.734]],["body/classes/SoftDeleteUserCommandHandler.html",[3,0.071,4,0.083,5,0.077,8,0.217,9,0.863,15,1.678,22,0.997,24,0.375,25,0.006,32,0.29,64,1.496,69,0.602,76,1.4,81,0.286,83,0.407,85,0.083,87,0.004,88,0.004,99,1.462,100,2.078,106,4.598,110,0.702,111,0.628,113,1.043,114,1.786,170,1.273,175,2.356,176,2.192,177,2.244,178,2.192,210,0.689,224,1.688,225,1.966,227,1.601,280,1.889,364,1.966,491,2.244,492,3.827,515,3.098,523,2.244,525,2.244,597,4.217,660,2.192,662,2.959,663,2.931,664,2.959,750,1.78,1020,0.508,1061,1.629,1062,4.041,1067,2.894,1070,3.01,1076,3.527,1078,2.484,1079,2.554,1133,5.389,1134,4.803,1163,2.298,1179,3.254,1193,2.554,1218,3.87,1261,2.554,1409,3.638,1425,2.802,1587,2.802,1605,3.44,2226,3.44,2315,5.868,2318,5.023,2319,7.194,2320,4.721,2321,3.44,2322,4.217,2323,4.721,2324,4.721,2325,4.721,2326,5.366,2327,4.721]],["title/classes/SoftDeleteUserEvent.html",[81,0.294,2321,3.531]],["body/classes/SoftDeleteUserEvent.html",[3,0.086,4,0.1,5,0.093,8,0.262,9,0.98,22,1.836,24,0.437,25,0.006,26,1.261,32,0.337,55,2.745,81,0.346,83,0.356,85,0.1,87,0.004,88,0.004,106,4.74,110,0.615,111,0.55,139,1.618,149,2.251,210,0.604,249,3.104,406,3.549,606,3.437,631,3.792,750,2.271,839,4.721,1020,0.615,1130,2.33,1252,3.789,1253,3.088,1256,3.437,1258,3.96,1420,5.394,1421,4.159,2321,5.394,2328,8.048]],["title/classes/SoftDeleteUserEventHandler.html",[81,0.294,2329,3.989]],["body/classes/SoftDeleteUserEventHandler.html",[3,0.084,4,0.098,5,0.091,8,0.258,15,1.445,22,1.185,24,0.368,25,0.006,32,0.284,69,0.548,81,0.341,83,0.457,85,0.098,87,0.004,88,0.004,97,2.161,99,1.643,100,2.268,106,4.546,110,0.789,111,0.705,113,1.24,114,2.006,118,2.492,138,2.007,139,0.944,149,1.538,158,3.678,170,1.514,171,2.339,191,2.438,210,0.594,225,1.693,249,2.121,364,2.208,1020,0.604,1061,1.937,1261,4.675,1262,4.289,1263,3.853,1264,3.128,1265,3.332,1266,3.853,1267,3.45,1268,2.875,1269,2.954,1272,3.128,1273,3.225,1274,3.225,1275,3.45,1427,4.62,2321,6.295,2322,5.015,2329,6.028,2330,7.282,2331,5.614,2332,5.614]],["title/entities/StripEventEntity.html",[0,1.349,476,3.217]],["body/entities/StripEventEntity.html",[0,2.199,2,2.582,3,0.095,4,0.111,5,0.103,6,3.102,8,0.29,9,1.141,15,2.219,24,0.318,25,0.006,26,1.046,27,2.004,32,0.245,55,2.345,69,0.425,74,3.744,76,1.876,81,0.479,83,0.493,85,0.111,87,0.005,88,0.005,476,5.995,477,5.759,580,5.65,750,2.055,918,3.587,1460,2.69,2309,5.65,2333,5.65,2334,6.325,2335,5.206,2336,6.325]],["title/entities/SubscriptionEntity.html",[0,1.349,479,2.7]],["body/entities/SubscriptionEntity.html",[0,1.34,2,1.275,3,0.047,4,0.055,5,0.051,6,3.534,8,0.143,9,0.779,13,2.308,14,2.554,15,1.838,21,2.353,22,1.508,24,0.478,25,0.006,26,0.875,27,2.822,28,4.586,32,0.345,35,2.684,37,4.084,38,3.081,43,3.843,51,2.138,55,1.158,64,2.391,69,0.507,70,3.491,71,2.61,72,2.669,73,3.182,74,1.356,75,2.61,76,0.926,78,1.689,81,0.292,82,1.484,83,0.446,85,0.055,87,0.003,88,0.003,111,0.727,292,1.794,316,1.919,450,4.813,452,2.166,458,4.813,469,4.813,479,2.684,564,5.253,574,4.84,582,2.275,750,2.232,836,1.919,872,2.166,885,3.342,897,3.342,898,2.96,918,3.425,921,1.484,926,1.45,1431,5.253,1432,5.253,1442,4.303,1443,4.303,1446,4.303,1453,6.381,1467,2.789,1468,2.789,1469,2.789,1700,2.275,2337,2.789,2338,5.881,2339,5.881,2340,5.881,2341,5.881,2342,3.123,2343,3.123,2344,4.817,2345,3.123,2346,3.123,2347,3.123,2348,4.817,2349,3.123,2350,4.817,2351,3.123,2352,3.123,2353,2.789,2354,3.123,2355,3.965,2356,4.303,2357,4.817,2358,4.817,2359,4.817,2360,4.817,2361,3.123,2362,4.817,2363,3.123,2364,3.123,2365,4.817,2366,3.123,2367,4.303,2368,3.123]],["title/classes/TimestampEntityExtendEntity.html",[81,0.294,2369,3.989]],["body/classes/TimestampEntityExtendEntity.html",[3,0.069,4,0.081,5,0.075,8,0.211,9,0.847,13,2.889,14,3.197,21,2.946,24,0.436,25,0.006,27,2.332,32,0.336,43,3.537,45,5.265,46,6.314,49,5.265,62,5.265,69,0.309,70,3.533,76,1.363,81,0.279,83,0.541,85,0.081,87,0.004,88,0.004,99,1.435,113,1.626,227,2.699,332,5.526,750,2.342,840,5.284,867,6.058,1020,0.495,1460,2.721,2335,6.058,2369,5.265,2370,7.942,2371,7.942,2372,4.104,2373,7.96,2374,7.96,2375,7.96,2376,4.594,2377,4.594,2378,6.397,2379,6.397,2380,4.594,2381,4.594,2382,4.594,2383,4.594,2384,4.594,2385,7.96,2386,6.397,2387,7.361]],["title/interfaces/TokenPayload.html",[772,3.362,2210,3.217]],["body/interfaces/TokenPayload.html",[3,0.109,4,0.127,5,0.118,8,0.332,9,1.136,24,0.364,25,0.006,26,1.211,85,0.127,87,0.005,88,0.005,406,3.861,772,5.954,2210,4.808,2211,5.58,2388,6.469,2389,6.469]],["title/classes/UnauthorizedRequestException.html",[81,0.294,2390,3.989]],["body/classes/UnauthorizedRequestException.html",[3,0.104,4,0.121,5,0.113,25,0.006,32,0.269,69,0.465,81,0.42,85,0.121,87,0.005,88,0.005,120,3.214,122,1.65,210,0.949,614,3.978,638,4.166,787,6.185,1020,0.745,1166,3.879,1458,4.396,1460,3.553,2390,6.876,2391,7.464,2392,6.185,2393,6.924,2394,6.924]],["title/classes/UpdateUserCommand.html",[81,0.294,2395,3.531]],["body/classes/UpdateUserCommand.html",[3,0.093,4,0.109,5,0.101,8,0.285,9,1.034,22,1.952,24,0.43,25,0.006,26,1.188,32,0.332,69,0.417,81,0.377,83,0.388,85,0.109,87,0.005,88,0.005,110,0.669,111,0.598,139,1.586,210,0.657,406,3.662,415,4.122,750,2.204,1020,0.669,1126,4.308,1128,5.547,1129,6.98,1130,2.535,1253,3.36,2395,5.693,2396,6.913,2397,6.414,2398,4.785]],["title/classes/UpdateUserCommandHandler.html",[81,0.294,2399,3.734]],["body/classes/UpdateUserCommandHandler.html",[3,0.038,4,0.044,5,0.041,8,0.116,9,0.539,15,1.048,22,1.08,24,0.391,25,0.006,26,1.164,32,0.302,38,1.661,53,3.037,64,1.86,69,0.569,76,0.748,81,0.247,82,1.199,83,0.471,85,0.044,87,0.002,88,0.002,99,0.913,100,2.389,110,0.812,111,0.726,112,2.177,113,1.601,114,2.133,122,0.601,144,2.336,170,0.68,175,1.259,176,1.171,177,1.199,178,2.375,210,0.43,224,3.173,225,2.65,227,2.557,250,2.55,280,1.009,296,1.292,364,1.227,491,1.199,492,2.79,515,1.934,523,1.199,525,1.199,589,2.959,598,3.397,600,3.136,603,2.702,630,2.595,654,2.416,660,1.171,662,1.145,663,2.703,664,2.923,750,1.22,840,4.276,869,1.75,949,3.177,1020,0.272,1061,0.87,1062,2.768,1067,1.807,1076,2.202,1077,2.076,1078,1.327,1079,1.365,1133,5.212,1134,4.094,1139,3.35,1140,3.35,1141,3.35,1143,3.35,1153,3.35,1155,3.35,1157,2.076,1161,3.35,1163,1.228,1164,2.702,1165,2.966,1166,1.89,1167,2.702,1168,1.944,1169,2.702,1170,1.944,1179,2.931,1192,2.94,1193,2.768,1194,3.35,1195,2.702,1196,2.702,1206,2.076,1208,2.076,1218,3.037,1230,3.35,1231,3.35,1232,2.076,1233,2.076,1235,3.35,1236,1.944,1261,1.365,1310,1.838,1427,3.35,1481,2.076,1583,1.75,1587,1.497,1631,2.076,1632,1.944,2184,1.838,2226,1.838,2326,3.35,2395,4.278,2399,3.943,2400,6.16,2401,4.07,2402,4.07,2403,2.523,2404,2.523,2405,2.523,2406,2.523,2407,4.07,2408,2.523,2409,2.523,2410,2.523,2411,1.944,2412,2.523,2413,2.523,2414,2.523,2415,1.838,2416,1.75,2417,2.523,2418,2.523,2419,2.523,2420,2.523,2421,2.523,2422,2.523,2423,2.523,2424,2.523,2425,2.523,2426,2.523,2427,2.523,2428,5.871,2429,2.523,2430,4.07,2431,2.523,2432,4.07,2433,4.07,2434,2.523]],["title/classes/UpdateUserCredentialCommand.html",[81,0.294,2435,3.531]],["body/classes/UpdateUserCredentialCommand.html",[3,0.092,4,0.107,5,0.099,8,0.28,9,1.023,22,1.942,24,0.426,25,0.006,26,1.023,32,0.329,69,0.41,81,0.37,83,0.381,85,0.107,87,0.004,88,0.004,110,0.657,111,0.587,139,1.579,210,0.645,406,3.461,750,2.239,941,3.153,942,3.754,943,2.541,1020,0.657,2396,6.867,2398,4.699,2435,5.628,2436,5.448,2437,6.517,2438,7.725,2439,6.099,2440,5.02]],["title/classes/UpdateUserCredentialCommandHandler.html",[81,0.294,2441,3.734]],["body/classes/UpdateUserCredentialCommandHandler.html",[3,0.056,4,0.065,5,0.06,8,0.17,9,0.726,15,1.411,22,1.905,24,0.362,25,0.006,26,1.157,32,0.298,53,3.253,64,1.174,69,0.575,76,1.099,81,0.225,83,0.45,85,0.065,87,0.003,88,0.003,99,1.23,100,2.242,110,0.776,111,0.695,113,1.442,114,1.975,144,1.859,170,0.999,175,1.849,176,1.72,177,1.761,178,1.72,210,0.58,224,3.225,225,2.32,227,2.732,250,1.609,280,1.482,364,1.653,491,1.761,492,3.427,515,2.605,523,1.761,524,3.639,525,1.761,592,3.546,598,2.459,660,1.72,662,1.681,663,2.829,664,3.492,689,3.309,769,2.854,806,4.896,1020,0.399,1061,1.278,1062,3.53,1067,2.433,1074,4.511,1076,2.966,1078,1.949,1079,2.004,1134,4.27,1135,5.369,1142,4.511,1159,4.511,1163,1.804,1179,2.736,1185,3.049,1187,3.049,1192,2.128,1193,2.004,1218,2.199,1234,3.049,1585,2.57,1587,2.199,1615,4.896,1616,4.896,1617,6.441,1626,3.309,2184,2.699,2226,2.699,2245,3.049,2246,4.511,2326,3.049,2400,6.208,2411,2.854,2416,2.57,2435,5.253,2441,5.027,2442,6.424,2443,3.705,2444,3.705,2445,3.705,2446,2.699,2447,3.049,2448,3.705,2449,3.705,2450,5.481,2451,3.705,2452,5.481,2453,3.705,2454,3.705,2455,3.705,2456,3.705,2457,3.705]],["title/classes/UpdateUserCredentialDto.html",[81,0.294,2437,3.362]],["body/classes/UpdateUserCredentialDto.html",[3,0.089,4,0.104,5,0.096,8,0.272,9,1.004,22,1.924,24,0.443,25,0.006,26,1.234,32,0.342,81,0.359,83,0.37,85,0.104,87,0.004,88,0.004,110,0.638,111,0.57,139,1.629,210,0.626,589,3.282,592,3.556,750,2.311,941,3.095,942,3.72,943,2.467,1020,0.638,2437,5.26,2458,7.501,2459,5.291,2460,8.363,2461,7.582,2462,5.923,2463,5.923]],["title/classes/UpdateUserCredentialEvent.html",[81,0.294,2446,3.531]],["body/classes/UpdateUserCredentialEvent.html",[3,0.086,4,0.101,5,0.093,8,0.263,9,0.984,22,2.035,24,0.438,25,0.006,26,1.263,32,0.338,55,2.755,81,0.348,83,0.358,85,0.101,87,0.004,88,0.004,110,0.618,111,0.553,139,1.62,149,2.257,210,0.607,249,3.113,406,3.557,750,2.273,1020,0.618,1130,2.343,1253,3.106,1256,3.449,2313,4.932,2446,5.414,2464,6.954,2465,5.127,2466,7.43,2467,7.43,2468,5.74,2469,5.74]],["title/classes/UpdateUserCredentialEventHandler.html",[81,0.294,2470,3.989]],["body/classes/UpdateUserCredentialEventHandler.html",[3,0.085,4,0.099,5,0.092,8,0.258,15,1.449,22,1.894,24,0.369,25,0.006,32,0.285,69,0.548,81,0.342,83,0.458,85,0.099,87,0.004,88,0.004,97,2.167,99,1.646,100,2.271,110,0.79,111,0.707,113,1.244,114,2.01,118,2.499,138,2.013,139,0.946,149,1.542,158,3.681,170,1.518,171,2.345,191,2.445,210,0.595,225,1.697,249,2.127,364,2.212,1020,0.606,1061,1.943,1262,4.295,1263,3.86,1264,3.136,1265,3.341,1266,3.86,1267,3.459,1268,2.883,1269,2.962,1272,3.136,1273,3.234,1274,3.234,1275,3.459,2416,3.905,2446,6.302,2447,7.118,2470,6.039,2471,6.29,2472,5.629,2473,4.633]],["title/classes/UpdateUserDto.html",[81,0.294,2397,3.362]],["body/classes/UpdateUserDto.html",[3,0.093,4,0.109,5,0.101,8,0.285,9,1.034,24,0.43,25,0.006,26,1.249,27,2.475,30,3.568,32,0.332,69,0.417,79,5.253,81,0.474,82,2.951,85,0.109,87,0.005,88,0.005,111,0.909,112,3.17,589,3.355,592,3.636,908,5.693,1020,0.669,1237,4.785,1245,5.111,1246,5.547,1249,6.43,2290,5.547,2397,5.42,2458,7.384,2474,6.21,2475,6.21,2476,6.21]],["title/classes/UpdateUserEvent.html",[81,0.294,2415,3.531]],["body/classes/UpdateUserEvent.html",[3,0.088,4,0.103,5,0.095,8,0.269,9,0.996,22,1.854,24,0.441,25,0.006,26,1.268,32,0.34,55,2.791,81,0.355,83,0.365,85,0.103,87,0.004,88,0.004,110,0.63,111,0.564,139,1.626,149,2.278,210,0.619,249,3.142,406,3.584,750,2.283,1020,0.63,1130,2.39,1252,3.887,1253,3.168,1256,3.494,1258,4.062,1420,5.484,1421,4.266,2313,4.996,2415,5.484,2464,6.997]],["title/classes/UpdateUserEventHandler.html",[81,0.294,2477,3.734]],["body/classes/UpdateUserEventHandler.html",[3,0.087,4,0.101,5,0.094,8,0.264,15,1.481,22,1.215,24,0.374,25,0.006,32,0.289,69,0.554,81,0.349,83,0.465,85,0.101,87,0.004,88,0.004,97,2.216,99,1.67,110,0.801,111,0.717,113,1.272,118,2.555,138,2.058,139,0.967,149,1.577,158,3.703,170,1.552,171,2.398,191,2.5,210,0.609,249,2.174,332,4.747,364,2.244,1020,0.62,1061,1.986,1261,4.72,1262,4.341,1263,3.916,1264,3.207,1265,3.416,1266,3.916,1267,3.537,1268,2.948,1269,3.028,1272,3.207,1273,3.307,1274,3.307,1275,3.537,2415,6.356,2416,3.993,2471,6.357,2473,4.737,2477,5.736,2478,5.756]],["title/classes/UpdateUserRoleCommand.html",[81,0.294,2479,3.362]],["body/classes/UpdateUserRoleCommand.html",[3,0.092,4,0.107,5,0.1,8,0.281,9,1.025,22,1.884,24,0.427,25,0.006,26,1.025,32,0.329,69,0.411,81,0.371,83,0.382,85,0.107,87,0.004,88,0.004,110,0.659,111,0.589,133,4.238,135,3.218,139,1.58,210,0.647,406,3.466,595,3.941,750,2.241,941,3.159,942,3.757,943,2.548,1020,0.659,1178,4.713,2396,6.875,2479,5.369,2480,5.464,2481,7.739,2482,6.117]],["title/classes/UpdateUserRoleCommandHandler.html",[81,0.294,2483,3.734]],["body/classes/UpdateUserRoleCommandHandler.html",[3,0.075,4,0.088,5,0.081,8,0.229,22,1.877,24,0.341,25,0.006,32,0.263,64,1.583,69,0.611,76,1.482,81,0.303,83,0.423,85,0.088,87,0.004,88,0.004,99,1.521,100,2.141,110,0.73,111,0.653,113,1.104,114,1.857,170,1.348,175,2.494,176,2.32,177,2.375,178,2.32,210,0.717,224,2.424,225,2.044,227,2.299,280,2,364,2.044,491,2.375,492,3.92,515,3.221,523,2.375,525,2.375,595,2.32,660,2.32,662,2.268,663,3.019,664,2.268,1020,0.538,1061,1.724,1062,4.162,1067,3.009,1076,3.668,1078,2.629,1079,2.704,1134,4.658,1163,2.433,1179,3.383,1192,2.871,1193,2.704,1218,2.966,1425,2.966,1605,3.641,2184,3.641,2400,5.927,2411,3.851,2416,3.467,2479,5.722,2483,5.927,2484,6.01,2485,3.641,2486,4.113,2487,4.997,2488,4.997,2489,4.997,2490,4.997]],["title/classes/UpdateUserRoleEvent.html",[81,0.294,2485,3.531]],["body/classes/UpdateUserRoleEvent.html",[3,0.085,4,0.099,5,0.092,8,0.258,9,0.971,22,2.046,24,0.435,25,0.006,26,1.145,32,0.335,55,2.721,69,0.378,81,0.342,83,0.351,85,0.099,87,0.004,88,0.004,110,0.606,111,0.542,139,1.614,149,2.236,210,0.595,249,3.084,750,2.264,1020,0.606,1130,2.298,1256,3.406,1649,5.654,2313,4.871,2411,4.338,2464,6.912,2479,6.662,2484,4.102,2485,5.346,2491,5.029,2492,5.629,2493,7.337,2494,5.629,2495,5.629]],["title/classes/UpdateUserRoleEventHandler.html",[81,0.294,2496,3.989]],["body/classes/UpdateUserRoleEventHandler.html",[3,0.083,4,0.097,5,0.09,8,0.255,15,1.429,22,1.886,24,0.366,25,0.006,32,0.282,69,0.545,81,0.337,83,0.454,85,0.097,87,0.004,88,0.004,97,2.138,99,1.631,100,2.256,110,0.783,111,0.7,113,1.227,114,1.992,118,2.465,138,1.985,139,0.933,149,1.521,158,3.667,170,1.497,171,2.313,191,2.412,210,0.587,225,1.674,249,2.098,364,2.193,1020,0.598,1061,1.916,1262,4.266,1263,3.826,1264,3.094,1265,3.296,1266,3.826,1267,3.412,1268,2.844,1269,2.922,1272,3.094,1273,3.19,1274,3.19,1649,4.279,2416,3.852,2471,6.248,2473,4.57,2485,6.269,2486,7.081,2496,5.985,2497,5.553,2498,5.553,2499,5.553]],["title/controllers/UserController.html",[89,2.482,2500,3.734]],["body/controllers/UserController.html",[3,0.029,4,0.033,5,0.031,8,0.087,15,1.646,22,1.35,24,0.384,25,0.006,26,1.012,27,2.475,32,0.303,69,0.543,81,0.116,83,0.477,85,0.033,87,0.002,88,0.002,89,0.976,91,0.928,96,1.388,99,0.724,100,2.603,106,1.002,110,0.823,111,0.737,112,0.706,113,1.726,114,2.457,118,2.664,119,1.265,120,0.884,121,1.468,122,0.454,127,1.322,128,1.031,131,1.322,132,1.568,133,0.951,135,1.002,138,0.681,139,0.32,143,6.019,144,2.699,159,2.338,225,2.306,227,2.649,245,1.388,250,0.828,261,1.468,266,1.388,393,3.688,397,3.599,406,2.017,415,2.786,418,1.702,424,4.066,570,4.8,592,0.81,595,1.949,611,6.257,638,3.695,639,3.058,644,1.568,654,1.131,660,3.626,662,3.545,663,3.066,664,3.47,1175,1.322,1176,1.568,1177,1.468,1178,1.468,1216,3.806,1219,2.656,1547,6.429,1553,4.373,1632,1.468,1641,4.164,1667,1.568,1668,1.568,1914,3.806,2189,2.656,2313,2.786,2397,5.612,2398,2.486,2437,4.666,2440,1.568,2500,2.486,2501,1.702,2502,2.882,2503,4.413,2504,2.882,2505,3.749,2506,2.882,2507,2.882,2508,2.882,2509,4.197,2510,3.749,2511,3.227,2512,1.702,2513,1.905,2514,1.905,2515,1.905,2516,1.905,2517,4.197,2518,1.905,2519,1.905,2520,1.905,2521,1.702,2522,1.905,2523,1.905,2524,1.702,2525,1.905,2526,1.905,2527,1.702,2528,3.227,2529,1.905,2530,1.905,2531,1.905,2532,3.227,2533,1.905,2534,1.905,2535,1.905,2536,1.905,2537,1.702,2538,1.905,2539,1.905,2540,1.905,2541,1.702,2542,1.905,2543,1.905,2544,1.905,2545,4.94,2546,1.905,2547,1.905,2548,1.905,2549,1.905,2550,1.905,2551,1.905,2552,1.905,2553,1.905,2554,1.905,2555,1.702,2556,1.905,2557,1.702,2558,1.905,2559,1.905,2560,1.905,2561,1.905,2562,1.905,2563,1.905,2564,1.905,2565,1.905,2566,7.812,2567,1.905,2568,1.905,2569,1.905,2570,1.905,2571,1.905,2572,1.905,2573,1.905,2574,1.905,2575,1.905,2576,1.905,2577,1.905,2578,1.905,2579,1.905,2580,1.905,2581,1.905,2582,3.227,2583,1.905,2584,1.905,2585,1.905,2586,1.905,2587,1.905,2588,1.905,2589,1.905,2590,1.905,2591,1.905,2592,1.905,2593,1.905,2594,1.905,2595,1.905]],["title/entities/UserEntity.html",[0,1.349,64,1.535]],["body/entities/UserEntity.html",[0,1.124,1,3.587,2,2.799,3,0.038,4,0.044,5,0.041,8,0.115,9,0.673,13,1.995,14,2.208,15,1.308,21,2.034,22,1.524,24,0.453,25,0.006,26,1.134,27,2.854,32,0.349,37,4.409,38,3.751,40,3.354,43,2.799,51,1.792,53,3.465,55,2.165,64,1.279,69,0.505,70,3.444,71,2.256,72,2.307,74,1.085,75,2.256,76,0.741,81,0.245,83,0.156,84,4.996,85,0.044,87,0.002,88,0.002,111,0.768,112,1.885,133,2.537,135,1.314,292,2.92,296,1.279,402,3.323,452,1.733,471,2.99,472,1.925,479,3.252,480,1.925,481,3.465,482,1.925,483,4.602,484,1.733,485,1.925,576,2.681,582,2.942,584,2.801,589,1.995,592,2.726,595,2.36,750,1.98,832,1.925,836,4.213,846,3.111,847,3.111,856,3.607,857,4.987,898,4.434,918,2.649,921,1.187,926,1.16,941,1.02,942,2.075,943,1.041,946,4.54,949,3.159,1001,4.183,1152,5.56,1216,1.925,1248,1.658,1333,3.607,1366,3.607,1433,4.183,1460,1.062,1585,4.05,1607,3.916,1700,4.254,1764,3.607,1792,1.658,2036,4.54,2149,3.607,2335,3.323,2353,4.54,2355,4.805,2356,5.215,2596,2.231,2597,5.083,2598,5.083,2599,5.083,2600,5.083,2601,5.083,2602,4.038,2603,2.498,2604,2.498,2605,4.038,2606,2.498,2607,2.498,2608,2.498,2609,2.498,2610,5.838,2611,4.038,2612,4.038,2613,2.498,2614,5.215,2615,6.409,2616,2.498,2617,2.498,2618,4.038,2619,2.498,2620,2.498,2621,4.038,2622,2.498,2623,2.498,2624,4.038,2625,2.498,2626,2.498,2627,4.038,2628,2.498,2629,2.498,2630,4.038,2631,2.498,2632,2.498,2633,2.498,2634,2.231,2635,4.038]],["title/interfaces/UserIdDto.html",[397,3.531,2210,3.217]],["body/interfaces/UserIdDto.html",[3,0.109,4,0.127,5,0.118,8,0.332,9,1.136,24,0.364,25,0.006,26,1.211,85,0.127,87,0.005,88,0.005,397,6.254,406,3.861,417,5.58,2210,4.808,2211,5.58,2636,6.469]],["title/classes/UserListResponse.html",[81,0.294,1633,3.734]],["body/classes/UserListResponse.html",[3,0.096,4,0.112,5,0.104,8,0.293,9,1.052,24,0.4,25,0.006,32,0.308,69,0.429,81,0.387,83,0.399,85,0.112,87,0.005,88,0.005,110,0.687,111,0.615,210,0.675,402,7.125,654,5.641,750,2.064,1020,0.687,1177,4.919,1281,4.652,1633,6.125,2637,7.125,2638,5.703,2639,8.657,2640,7.95,2641,7.95,2642,7.95]],["title/classes/UserLoginDto.html",[81,0.294,2643,3.989]],["body/classes/UserLoginDto.html",[3,0.089,4,0.103,5,0.096,8,0.27,9,1,24,0.419,25,0.006,26,1.292,27,2.393,32,0.323,69,0.396,81,0.357,83,0.368,85,0.103,87,0.004,88,0.004,110,0.634,111,0.567,128,3.186,139,1.565,210,0.623,417,6.779,592,4.026,750,2.219,755,6.629,1020,0.634,1034,6.311,2643,6.217,2644,5.26,2645,7.554,2646,5.888,2647,5.888,2648,5.888,2649,5.888,2650,5.888]],["title/classes/UserLoginResponse.html",[81,0.294,651,3.531]],["body/classes/UserLoginResponse.html",[3,0.071,4,0.082,5,0.077,8,0.216,9,0.86,13,2.924,15,1.917,21,2.981,24,0.465,25,0.006,26,1.24,32,0.359,43,3.281,64,1.489,69,0.437,81,0.285,83,0.293,85,0.082,87,0.004,88,0.004,110,0.506,111,0.862,133,3.718,135,2.472,139,1.656,210,0.497,589,2.924,592,3.168,595,3.459,631,3.816,651,4.735,750,2.387,941,2.653,942,3.562,943,1.958,949,4.031,1020,0.506,1248,3.119,1281,3.424,1288,4.198,2637,7.711,2651,4.198,2652,4.699,2653,4.699,2654,4.699,2655,4.699,2656,4.699,2657,4.699,2658,4.699,2659,4.699,2660,4.699]],["title/modules/UserModule.html",[149,1.328,157,3.217]],["body/modules/UserModule.html",[3,0.053,4,0.062,5,0.058,22,1.736,25,0.006,64,1.125,69,0.664,81,0.215,83,0.222,85,0.062,87,0.003,88,0.003,91,2.585,97,2.449,106,1.868,122,0.846,149,1.455,151,1.978,152,2.959,156,4.874,157,5.843,158,3.174,159,4.419,160,3.263,161,2.182,162,2.182,164,3.263,165,3.263,166,2.463,167,3.684,168,1.868,169,3.525,170,0.957,171,2.212,172,2.463,178,4.471,183,3.172,186,7.086,188,3.386,189,2.463,190,2.264,191,1.542,194,2.463,195,2.463,196,2.463,197,2.463,198,2.357,233,3.172,241,2.736,279,2.463,280,1.421,281,2.922,606,3.509,631,1.818,735,3.869,737,2.587,779,2.587,1078,1.868,1131,4.092,1133,4.503,1163,1.728,1259,4.092,1261,3.82,1268,1.818,1422,4.092,1562,2.264,1579,4.092,1581,2.922,1593,4.092,1594,2.922,1603,4.092,1604,2.736,1630,4.092,1669,4.092,1670,2.736,1938,4.092,2179,4.092,2181,3.869,2192,4.092,2194,4.092,2219,4.092,2269,3.525,2270,4.092,2277,4.092,2318,4.092,2399,4.092,2441,4.092,2442,2.736,2477,4.092,2483,4.092,2484,2.587,2500,4.902,2555,3.172,2661,3.55,2662,3.55,2663,3.55,2664,3.55,2665,3.55,2666,3.55,2667,6.362,2668,3.55,2669,3.55,2670,3.55,2671,3.55,2672,3.55,2673,3.55,2674,3.55,2675,3.55,2676,3.55,2677,6.362]],["title/classes/UserNotFoundException.html",[81,0.294,2678,3.734]],["body/classes/UserNotFoundException.html",[3,0.104,4,0.121,5,0.113,25,0.006,32,0.269,69,0.465,81,0.42,85,0.121,87,0.005,88,0.005,120,3.214,122,1.65,210,0.949,638,4.166,711,3.857,1020,0.745,1166,3.879,1458,4.396,1460,3.553,1587,4.11,2678,6.438,2679,6.876,2680,6.185,2681,6.924,2682,6.924]],["title/classes/UserResponse.html",[81,0.294,654,2.877]],["body/classes/UserResponse.html",[3,0.084,4,0.098,5,0.091,8,0.258,9,0.97,15,2.098,24,0.451,25,0.006,26,1.217,32,0.348,69,0.377,81,0.341,83,0.35,85,0.098,87,0.004,88,0.004,110,0.604,111,0.863,112,3.023,133,4.069,135,2.954,139,1.65,210,0.594,589,3.199,595,3.784,654,4.347,750,2.34,941,2.99,942,3.752,943,2.339,1020,0.604,1248,3.727,1281,4.09,2683,5.015,2684,5.614,2685,5.614,2686,5.614,2687,5.614,2688,5.614]],["title/injectables/UserService.html",[159,2.7,207,1.561]],["body/injectables/UserService.html",[3,0.025,4,0.029,5,0.027,8,0.076,15,0.976,22,1.539,24,0.397,25,0.006,26,1.244,30,0.955,32,0.315,64,0.527,69,0.601,81,0.101,83,0.493,85,0.029,87,0.002,88,0.002,93,0.851,97,0.64,99,0.644,100,2.638,106,0.875,110,0.85,111,0.761,112,2.067,113,1.771,114,2.449,122,0.396,133,2.252,135,0.875,138,0.594,139,0.483,144,2.718,159,1.6,170,0.448,181,1.021,207,0.925,208,0.772,210,0.176,211,1.281,212,4.062,213,4.355,217,1.906,220,3.386,224,1.613,225,2.507,226,2.213,227,2.848,228,5.095,245,1.211,248,1.485,250,0.722,393,3.425,406,3.428,415,2.516,589,0.652,592,2.167,595,2.588,606,1.76,631,1.471,654,0.987,660,2.933,662,2.867,663,3.049,664,3.847,741,2.092,777,1.992,779,1.211,781,5.907,869,1.153,1124,2.092,1133,2.878,1163,0.809,1164,2.516,1165,4.062,1166,2.588,1167,1.906,1168,1.281,1169,2.996,1170,1.281,1172,0.955,1175,1.153,1176,1.368,1177,1.281,1178,1.281,1180,2.63,1181,2.363,1195,2.996,1196,2.996,1200,1.992,1216,1.281,1219,2.363,1368,1.368,1506,1.368,1511,2.565,1547,5.837,1553,4.062,1587,3.309,1597,1.211,1599,1.281,1604,1.281,1632,1.281,1641,3.535,1662,2.092,1667,1.368,1668,1.368,1670,1.281,1955,2.213,1956,1.368,1959,2.213,2174,1.211,2181,2.092,2189,2.363,2217,2.092,2226,2.092,2242,2.213,2243,1.368,2245,1.368,2246,2.363,2267,1.211,2269,1.104,2313,1.906,2315,1.211,2395,1.211,2397,4.383,2398,2.213,2435,2.092,2437,4.587,2440,1.368,2442,1.281,2479,1.992,2484,1.211,2502,2.565,2503,4.031,2504,2.565,2505,2.565,2506,2.565,2507,2.565,2508,2.565,2510,2.565,2512,2.565,2521,2.565,2524,2.565,2527,2.565,2537,2.565,2541,2.565,2557,1.485,2678,4.605,2679,1.368,2689,1.485,2690,2.872,2691,4.513,2692,2.872,2693,2.872,2694,2.872,2695,2.872,2696,1.662,2697,1.662,2698,2.872,2699,1.662,2700,1.662,2701,2.872,2702,1.662,2703,1.662,2704,1.662,2705,1.662,2706,1.662,2707,2.872,2708,1.662,2709,2.872,2710,1.662,2711,2.872,2712,1.662,2713,2.872,2714,1.662,2715,1.662,2716,2.872,2717,1.662,2718,1.662,2719,2.872,2720,1.662,2721,2.872,2722,1.662,2723,1.662,2724,1.662,2725,3.791,2726,1.662,2727,1.662,2728,1.662,2729,1.662,2730,1.662,2731,1.662,2732,1.662,2733,1.662,2734,1.662,2735,1.662,2736,1.662,2737,1.662,2738,1.662,2739,2.872,2740,3.791,2741,1.662,2742,2.872,2743,1.662,2744,4.513,2745,1.662,2746,1.662,2747,1.662]],["title/changelog.html",[2748,2.941,2749,2.941,2750,4.036]],["body/changelog.html",[0,2.17,2,2.527,25,0.005,87,0.005,88,0.005,93,3.171,97,3.45,98,4.77,112,2.296,149,2.136,241,6.009,309,5.095,381,4.11,584,4.295,594,5.682,603,5.177,630,3.948,755,4.511,1223,4.77,1257,5.531,2313,4.11,2751,5.531,2752,9.43,2753,9.43,2754,5.531,2755,9.43,2756,6.191,2757,6.191,2758,6.191,2759,6.191,2760,6.191,2761,8.424,2762,6.191,2763,6.191,2764,6.191,2765,6.191,2766,6.191,2767,6.191,2768,6.191,2769,6.191,2770,6.191,2771,6.191,2772,6.191,2773,6.191,2774,6.191,2775,5.531,2776,5.531]],["title/contributing.html",[2748,2.941,2749,2.941,2777,3.605]],["body/contributing.html",[25,0.005,87,0.005,88,0.005,2777,7.042]],["title/coverage.html",[2778,5.93]],["body/coverage.html",[0,2.231,1,0.819,5,0.022,6,3.146,7,1.19,22,1.674,24,0.067,25,0.006,34,0.742,64,0.422,81,0.6,87,0.001,88,0.001,89,2.716,90,1.027,92,3.119,93,3.523,94,1.724,95,1.19,106,2.033,123,0.924,129,0.971,131,0.924,158,0.533,159,0.742,171,0.555,174,0.85,176,1.098,177,0.633,179,1.027,181,0.819,182,1.027,184,1.57,185,1.027,187,1.027,188,0.85,189,0.924,190,0.85,207,2.452,209,1.19,217,0.885,219,0.971,221,0.971,227,0.452,234,1.19,239,0.85,243,1.027,247,0.971,249,0.503,253,1.027,254,1.724,255,1.19,258,0.971,262,0.924,274,1.027,276,1.027,282,1.19,285,0.971,287,1.027,288,1.19,300,0.885,335,1.027,340,1.027,347,1.027,350,1.027,352,1.027,373,0.971,376,1.19,378,1.027,379,1.823,380,1.823,381,2.118,382,1.19,393,0.819,397,0.971,408,0.924,411,1.027,412,1.097,414,1.027,417,1.823,439,0.701,442,0.819,443,0.971,445,0.819,446,0.971,448,0.742,450,0.85,451,0.971,453,0.791,455,0.819,456,0.971,458,0.85,460,0.819,461,0.971,463,0.766,465,0.819,467,0.791,469,0.85,471,0.682,473,0.85,474,0.971,476,0.885,477,0.971,479,0.742,481,0.791,483,0.85,484,0.924,487,1.19,560,0.819,601,1.027,602,1.19,606,3.104,611,0.924,625,0.971,631,1.212,636,0.885,641,1.027,646,0.971,651,0.971,654,0.791,716,0.971,717,0.971,718,0.971,730,1.027,735,0.971,737,0.971,738,1.027,740,1.097,749,1.19,772,0.924,775,0.971,777,0.924,779,0.971,780,0.971,807,1.19,869,7.002,927,1.19,945,1.19,985,1.19,999,1.19,1021,1.19,1022,1.19,1048,0.85,1061,3.006,1099,1.57,1100,1.947,1124,0.971,1125,1.19,1126,3.069,1131,1.027,1132,1.19,1133,2.821,1164,0.885,1166,3.104,1167,1.57,1169,0.885,1171,0.971,1172,2.542,1173,0.924,1175,0.924,1179,0.665,1180,0.924,1182,0.971,1183,0.971,1237,2.458,1250,1.027,1251,1.19,1252,3.251,1259,1.027,1260,1.19,1261,2.65,1278,1.19,1279,1.19,1289,0.924,1290,2.937,1291,1.19,1292,0.971,1293,1.19,1298,0.971,1300,1.027,1301,0.924,1304,1.19,1310,0.971,1368,1.097,1369,2.458,1372,1.19,1374,0.971,1395,1.19,1396,1.947,1403,1.19,1406,1.027,1407,1.19,1409,1.027,1410,1.19,1413,0.971,1414,1.027,1419,1.19,1422,1.027,1423,1.19,1428,1.947,1458,3.517,1459,1.947,1463,1.947,1473,1.947,1474,1.19,1482,0.971,1498,1.097,1499,1.19,1500,1.19,1518,1.19,1519,2.458,1553,0.971,1554,1.19,1557,1.19,1558,1.19,1559,1.19,1573,1.027,1574,3.251,1575,1.19,1579,1.027,1580,3.251,1581,1.097,1588,1.027,1589,1.19,1593,1.027,1594,1.097,1597,0.971,1598,1.19,1603,1.027,1604,1.027,1612,1.19,1619,0.971,1627,1.19,1630,1.027,1633,1.027,1641,0.924,1642,1.19,1643,1.19,1662,0.971,1663,1.19,1669,1.027,1670,1.027,1685,1.19,1706,1.19,1714,1.027,1719,1.027,1720,1.19,1737,1.027,1739,1.19,1740,1.19,1741,1.19,1768,1.19,1774,1.19,1775,1.19,1781,1.19,1785,1.097,1798,1.947,1806,1.19,1862,1.19,1872,1.19,1885,1.097,1886,1.947,1887,1.19,1890,1.19,1891,1.19,1892,1.19,1910,1.19,1914,1.027,1915,1.19,1916,1.19,1919,1.19,1921,1.19,1922,1.19,1932,1.097,1937,1.19,1938,1.027,1939,1.19,1943,1.19,1950,1.19,1951,1.19,1955,1.027,1956,1.097,1957,1.19,1960,1.19,1964,1.19,1992,1.19,2003,1.097,2004,1.19,2005,1.19,2011,1.19,2033,1.19,2049,1.19,2066,1.19,2135,1.19,2138,0.971,2139,1.19,2142,1.19,2151,1.19,2174,0.971,2175,1.19,2176,1.947,2179,1.027,2180,1.19,2181,1.724,2185,1.027,2186,1.19,2187,1.947,2192,1.027,2193,1.19,2194,1.823,2198,1.19,2210,2.118,2212,1.19,2213,1.19,2214,1.19,2217,0.971,2218,1.19,2219,1.027,2220,1.19,2222,0.971,2229,1.19,2231,1.097,2232,1.19,2235,1.097,2236,1.19,2242,1.027,2243,1.097,2247,1.19,2250,1.19,2251,0.971,2257,1.19,2263,1.19,2267,0.971,2268,1.19,2269,2.565,2270,1.027,2271,1.19,2275,1.027,2276,1.19,2277,1.027,2278,1.19,2281,1.097,2282,1.947,2283,1.19,2289,1.19,2294,1.19,2315,0.971,2316,1.19,2318,1.027,2319,1.19,2321,0.971,2328,1.19,2329,1.097,2330,1.19,2333,1.19,2337,1.19,2369,1.097,2370,1.19,2371,1.19,2372,1.19,2388,1.19,2389,1.19,2390,1.097,2391,1.19,2392,1.19,2395,0.971,2396,2.458,2397,0.924,2399,1.027,2400,2.458,2415,0.971,2435,0.971,2436,1.19,2437,0.924,2441,1.027,2442,1.027,2446,0.971,2447,1.097,2458,1.947,2459,1.19,2464,2.458,2465,1.19,2470,1.097,2471,2.458,2477,1.027,2479,0.924,2480,1.19,2483,1.027,2484,0.971,2485,0.971,2486,1.097,2491,1.19,2496,1.097,2500,1.027,2501,1.19,2596,1.19,2636,1.19,2637,1.947,2638,1.19,2643,1.097,2644,1.19,2651,1.19,2678,1.027,2679,1.097,2680,1.19,2683,1.19,2689,1.19,2778,1.19,2779,1.19,2780,1.332,2781,1.332,2782,9.183,2783,8.017,2784,7.357,2785,8.614,2786,1.332,2787,4.897,2788,2.366,2789,7.926,2790,2.366,2791,2.366,2792,1.19,2793,3.863,2794,1.332,2795,1.332,2796,4.424,2797,2.366,2798,2.366,2799,1.332,2800,1.19,2801,1.19,2802,1.19,2803,1.19,2804,1.19,2805,1.19,2806,1.19,2807,1.19,2808,1.332,2809,1.332]],["title/dependencies.html",[152,3.251,2810,3.605]],["body/dependencies.html",[25,0.006,76,1.732,81,0.456,82,2.774,87,0.004,88,0.004,122,1.392,128,3.159,152,3.253,168,3.072,170,1.574,280,2.336,338,5.215,524,3.875,645,4.616,722,3.723,727,4.805,1311,5.215,1378,4.805,1526,4.498,1726,4.254,1867,5.215,1900,6.4,1901,5.788,1928,6.711,2634,5.215,2811,8.306,2812,7.512,2813,5.838,2814,7.512,2815,5.838,2816,5.838,2817,5.838,2818,5.838,2819,5.838,2820,5.838,2821,7.512,2822,5.838,2823,5.838,2824,5.838,2825,5.838,2826,5.838,2827,5.838,2828,5.838,2829,5.838,2830,5.838,2831,5.838,2832,5.838,2833,5.838,2834,5.838,2835,5.838,2836,5.838,2837,5.838,2838,5.838,2839,5.838,2840,5.838,2841,5.838]],["title/miscellaneous/enumerations.html",[2842,2.574,2843,5.213]],["body/miscellaneous/enumerations.html",[3,0.078,6,3.359,8,0.157,11,3.432,22,0.723,25,0.006,83,0.214,87,0.003,88,0.003,92,2.397,110,0.369,133,2.58,316,3.177,549,3.767,578,4.255,589,1.344,592,1.457,663,2.722,750,1.232,821,2.64,826,4.618,827,4.618,890,4.618,892,4.618,894,4.618,903,4.255,905,4.618,912,4.618,935,4.618,949,1.853,955,4.618,1036,3.586,1075,3.767,1195,4.133,1196,4.133,1200,3.586,1256,4.705,1483,2.819,1506,4.255,1527,2.64,1587,3.068,1853,4.618,1932,5.708,2026,4.618,2235,2.819,2237,5.562,2367,4.618,2842,2.184,2843,3.06,2844,3.426,2845,5.17,2846,3.426,2847,3.426,2848,5.17,2849,3.426,2850,5.17,2851,3.426,2852,5.17,2853,6.227,2854,5.17,2855,5.17,2856,6.935,2857,5.17,2858,3.426,2859,7.826,2860,3.426,2861,3.426,2862,5.17,2863,3.426,2864,6.227,2865,5.17,2866,5.17,2867,5.17,2868,5.17,2869,3.426,2870,3.426,2871,3.426,2872,3.426,2873,3.426,2874,3.426,2875,3.426,2876,3.426,2877,3.426,2878,3.426,2879,3.426,2880,5.17,2881,5.17,2882,5.17,2883,5.17,2884,5.17,2885,3.426,2886,3.426,2887,3.426,2888,3.426,2889,5.17,2890,6.935,2891,5.17,2892,6.935,2893,5.17,2894,5.17,2895,5.17,2896,5.17,2897,3.426,2898,5.17,2899,5.17,2900,5.17,2901,3.426,2902,5.17,2903,5.17,2904,3.426,2905,5.17,2906,5.17,2907,3.426,2908,5.17,2909,5.17,2910,5.17,2911,5.17,2912,5.17,2913,6.227,2914,6.935,2915,5.17,2916,5.17,2917,5.17,2918,5.17,2919,5.17,2920,5.17]],["title/miscellaneous/functions.html",[2842,2.574,2921,5.213]],["body/miscellaneous/functions.html",[8,0.348,25,0.005,87,0.005,88,0.005,113,1.677,114,2.079,2800,6.781,2801,8.333,2842,4.841,2921,6.781,2922,7.591]],["title/index.html",[8,0.185,2748,2.941,2749,2.941]],["body/index.html",[25,0.005,87,0.005,88,0.005,97,3.39,152,4.535,292,3.811,365,4.403,390,5.11,903,5.459,2776,5.925,2779,5.925,2923,6.632,2924,6.632,2925,6.632,2926,6.632,2927,6.632,2928,6.632,2929,6.632,2930,6.632,2931,6.632,2932,6.632,2933,6.632,2934,6.632,2935,6.632,2936,6.632,2937,9.424,2938,6.632,2939,8.139,2940,6.632,2941,6.632,2942,6.632,2943,6.632,2944,6.632,2945,6.632,2946,6.632,2947,8.806,2948,6.632,2949,6.632,2950,6.632,2951,6.632,2952,8.139,2953,6.632]],["title/license.html",[2748,2.941,2749,2.941,2954,3.605]],["body/license.html",[25,0.005,87,0.005,88,0.005]],["title/modules.html",[151,3.698]],["body/modules.html",[25,0.005,87,0.005,88,0.005,150,4.912,151,3.756,156,4.142,157,4.475,269,4.912,319,4.912,323,4.912,324,4.912,325,4.912,432,5.194,1769,6.022,2955,9.841,2956,9.841,2957,9.841,2958,9.913,2959,6.741]],["title/overview.html",[2960,5.93]],["body/overview.html",[2,1.761,25,0.006,87,0.004,88,0.004,91,2.1,123,4.935,150,6.908,151,2.403,152,3.41,153,3.853,154,3.853,155,3.853,156,5.777,157,6.181,158,3.571,159,4.731,160,3.76,161,2.65,162,2.65,208,2.002,262,4.935,269,6.908,270,3.853,271,3.853,300,4.722,319,7.181,320,3.853,321,3.853,322,3.853,323,7.105,324,5.183,325,5.956,408,4.935,432,6.543,433,3.853,435,3.853,636,5.797,712,3.853,713,3.853,714,3.853,716,5.183,717,5.183,718,5.183,1020,0.464,1289,4.935,1732,3.853,1733,3.853,2211,3.323,2754,3.853,2960,3.853,2961,4.313,2962,4.313,2963,4.313,2964,4.313,2965,4.313]],["title/properties.html",[9,0.773,2810,3.605]],["body/properties.html",[9,1.005,25,0.006,87,0.005,88,0.005,292,4.361,1093,6.248,1993,6.781,2751,6.781,2954,6.781,2966,7.591]],["title/todo.html",[2748,2.941,2749,2.941,2967,4.036]],["body/todo.html",[25,0.005,26,0.914,76,2.047,84,5.028,87,0.005,88,0.005,97,2.657,112,3.092,315,5.317,390,5.317,603,5.948,633,6.164,840,4.581,1901,5.317,2261,6.164,2355,6.862,2614,6.164,2761,8.65,2775,6.164,2968,6.901,2969,6.901,2970,6.901,2971,6.901,2972,6.901,2973,8.338,2974,8.338,2975,6.901,2976,8.338]],["title/miscellaneous/typealiases.html",[2842,2.574,2977,5.836]],["body/miscellaneous/typealiases.html",[8,0.343,24,0.376,25,0.005,87,0.005,88,0.005,1166,3.473,1172,4.298,1173,6.069,1458,3.936,1785,7.2,1790,7.814,1791,6.682,2842,4.77,2978,7.48,2979,7.48]],["title/miscellaneous/variables.html",[2842,2.574,2980,5.213]],["body/miscellaneous/variables.html",[3,0.078,8,0.238,22,1.095,24,0.394,25,0.006,26,0.687,55,3.106,81,0.315,87,0.004,88,0.004,100,1.443,114,1.421,131,4.822,133,2.589,138,1.855,139,0.872,144,2.658,159,3.873,207,1.671,225,1.564,227,1.759,250,3.019,595,2.408,614,3.994,646,3.78,679,5.356,1256,3.888,1310,5.065,1460,2.206,1792,3.443,1970,4.634,2792,4.634,2802,4.634,2803,6.209,2804,4.634,2805,6.209,2806,4.634,2807,6.209,2842,3.308,2980,4.634,2981,5.187,2982,5.187,2983,5.187,2984,5.187,2985,5.187,2986,6.951,2987,5.187,2988,5.187,2989,5.187,2990,5.187,2991,5.187,2992,5.187,2993,5.187,2994,5.187,2995,5.187,2996,5.187,2997,5.187,2998,5.187,2999,5.187,3000,5.187,3001,5.187,3002,5.187,3003,5.187,3004,5.187,3005,5.187,3006,5.187,3007,5.187,3008,5.187,3009,5.187,3010,5.187,3011,5.187,3012,5.187,3013,5.187,3014,5.187,3015,5.187,3016,5.187,3017,5.187,3018,5.187,3019,5.187]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":869,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":309,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"changelog.html":{}}}],["0.0.2",{"_index":2770,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":2768,"title":{},"body":{"changelog.html":{}}}],["0.0.4",{"_index":2765,"title":{},"body":{"changelog.html":{}}}],["0.0.5",{"_index":2759,"title":{},"body":{"changelog.html":{}}}],["0.0.6",{"_index":2751,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["0.1.13",{"_index":2834,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":2827,"title":{},"body":{"dependencies.html":{}}}],["0.3.12",{"_index":2839,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":1773,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["0.5.1",{"_index":2826,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":2828,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2785,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2798,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2791,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2797,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2786,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2788,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2789,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2782,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2783,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2784,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2796,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2787,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2790,"title":{},"body":{"coverage.html":{}}}],["03",{"_index":2753,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":2772,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":2771,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1906,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["1.0.0",{"_index":2830,"title":{},"body":{"dependencies.html":{}}}],["1.0.35",{"_index":2823,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2795,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2799,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":594,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"changelog.html":{}}}],["10.0.2",{"_index":2815,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":2794,"title":{},"body":{"coverage.html":{}}}],["1024",{"_index":1759,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["106",{"_index":2964,"title":{},"body":{"overview.html":{}}}],["15",{"_index":2760,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":2754,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["2.3.0",{"_index":2840,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":2812,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1245,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/ReferralCodeEntity.html":{},"classes/UpdateUserDto.html":{}}}],["20)@isnotempty",{"_index":2475,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["200",{"_index":291,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["2023",{"_index":2752,"title":{},"body":{"changelog.html":{}}}],["20})@column({unique",{"_index":2107,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["22",{"_index":2963,"title":{},"body":{"overview.html":{}}}],["23505",{"_index":2887,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["255",{"_index":86,"title":{},"body":{"entities/AddressEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{}}}],["255})@isnotempty()@isstring",{"_index":31,"title":{},"body":{"entities/AddressEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{}}}],["3",{"_index":2965,"title":{},"body":{"overview.html":{}}}],["3.0.8",{"_index":2822,"title":{},"body":{"dependencies.html":{}}}],["3.8.2",{"_index":2841,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1705,"title":{},"body":{"entities/GroupEntity.html":{}}}],["30)@column({nullable",{"_index":1699,"title":{},"body":{"entities/GroupEntity.html":{}}}],["300",{"_index":1763,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["30000",{"_index":1758,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["3001",{"_index":2676,"title":{},"body":{"modules/UserModule.html":{}}}],["300mb",{"_index":1754,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["3101",{"_index":200,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{}}}],["3102",{"_index":203,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{}}}],["3103",{"_index":206,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/AuthModule.html":{}}}],["3201",{"_index":361,"title":{},"body":{"modules/AppModule.html":{}}}],["3202",{"_index":362,"title":{},"body":{"modules/AppModule.html":{}}}],["3600",{"_index":3010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1236,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidPasswordException.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["4.0.1",{"_index":2829,"title":{},"body":{"dependencies.html":{}}}],["4.6.2",{"_index":2838,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":667,"title":{},"body":{"controllers/AuthController.html":{}}}],["401",{"_index":1570,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["404",{"_index":1390,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["4210",{"_index":2117,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["5",{"_index":3005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.1",{"_index":2825,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1768,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["500000",{"_index":3003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5432",{"_index":1322,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["6",{"_index":1228,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{}}}],["6.2.1",{"_index":2818,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":2962,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":2835,"title":{},"body":{"dependencies.html":{}}}],["8.9.0",{"_index":2832,"title":{},"body":{"dependencies.html":{}}}],["89f4011bb96d",{"_index":2133,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["89f4011bb96d'})@primarygeneratedcolumn('uuid",{"_index":2119,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["8e24",{"_index":2118,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["9",{"_index":2961,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":2811,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":2820,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":2814,"title":{},"body":{"dependencies.html":{}}}],["9.2.1",{"_index":2819,"title":{},"body":{"dependencies.html":{}}}],["9.3.9",{"_index":2816,"title":{},"body":{"dependencies.html":{}}}],["________",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{}}}],["______________________________________________________",{"_index":918,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["_________________________________________________________",{"_index":2635,"title":{},"body":{"entities/UserEntity.html":{}}}],["abc123",{"_index":2105,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789",{"_index":1226,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["accesstokencookie",{"_index":671,"title":{},"body":{"controllers/AuthController.html":{}}}],["accesstokencookie.auth",{"_index":683,"title":{},"body":{"controllers/AuthController.html":{}}}],["accesstokencookie.token",{"_index":688,"title":{},"body":{"controllers/AuthController.html":{}}}],["active",{"_index":2899,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["add",{"_index":2761,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["address",{"_index":84,"title":{},"body":{"entities/AddressEntity.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEntity.html":{},"entities/UserEntity.html":{},"todo.html":{}}}],["address.company",{"_index":957,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["address.entity",{"_index":983,"title":{},"body":{"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["address.user",{"_index":2602,"title":{},"body":{"entities/UserEntity.html":{}}}],["addressentity",{"_index":1,"title":{"entities/AddressEntity.html":{}},"body":{"entities/AddressEntity.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["addresses",{"_index":946,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/UserEntity.html":{}}}],["addressrepository",{"_index":513,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["admin",{"_index":2237,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{},"miscellaneous/enumerations.html":{}}}],["age=${process.env.jwt_access_token_expiration_time",{"_index":796,"title":{},"body":{"injectables/AuthService.html":{}}}],["age=${process.env.jwt_refresh_token_expiration_time",{"_index":800,"title":{},"body":{"injectables/AuthService.html":{}}}],["age=0",{"_index":802,"title":{},"body":{"injectables/AuthService.html":{}}}],["agent",{"_index":1531,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["agent']?.split('(')[1]?.split(')')[0]?.split",{"_index":2209,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["aliases",{"_index":2978,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allocated",{"_index":1761,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["alphanumeric",{"_index":1222,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["already",{"_index":1195,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["amount",{"_index":1807,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["angoston",{"_index":2930,"title":{},"body":{"index.html":{}}}],["anonymous",{"_index":2898,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["api",{"_index":97,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"controllers/AppController.html":{},"modules/AuthModule.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"controllers/HealthCheckController.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["api.log",{"_index":2999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/api",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["api/auth/auth.module",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["api/entities",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfiguration.html":{}}}],["api/health",{"_index":339,"title":{},"body":{"modules/AppModule.html":{}}}],["api/user/domain/entities/user.entity",{"_index":1313,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["api/user/user.module",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["api_landing_page",{"_index":748,"title":{},"body":{"modules/AuthModule.html":{}}}],["api_log",{"_index":195,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["api_mail",{"_index":201,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["api_name",{"_index":1063,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["api_type",{"_index":1064,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["api_version",{"_index":1065,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["api_waiting_list",{"_index":204,"title":{},"body":{"modules/ApiLandingPageModule.html":{}}}],["apidescription",{"_index":310,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["apigroup",{"_index":306,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["apilandingpagecontroller",{"_index":90,"title":{"controllers/ApiLandingPageController.html":{}},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"coverage.html":{}}}],["apilandingpagemodule",{"_index":150,"title":{"modules/ApiLandingPageModule.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apilandingpageservice",{"_index":123,"title":{"injectables/ApiLandingPageService.html":{}},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"coverage.html":{},"overview.html":{}}}],["apiloggerservice",{"_index":1480,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["apilogmodule",{"_index":156,"title":{"modules/ApiLogModule.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["apilogservice",{"_index":158,"title":{"injectables/ApiLogService.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["apimailcontroller",{"_index":253,"title":{"controllers/ApiMailController.html":{}},"body":{"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"coverage.html":{}}}],["apimailmodule",{"_index":269,"title":{"modules/ApiMailModule.html":{}},"body":{"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apimailservice",{"_index":262,"title":{"injectables/ApiMailService.html":{}},"body":{"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"coverage.html":{},"overview.html":{}}}],["apiname",{"_index":305,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"controllers/HealthCheckController.html":{}}}],["apiokresponse",{"_index":125,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["apioperation",{"_index":126,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["apiproperty",{"_index":1034,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserDto.html":{},"classes/MailDto.html":{},"entities/ReferralCodeEntity.html":{},"classes/UserLoginDto.html":{}}}],["apiproperty()@isemail",{"_index":1239,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isnotempty",{"_index":1241,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isoptional",{"_index":1243,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@length(5",{"_index":1244,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty({enum",{"_index":1037,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["apiproperty({example",{"_index":2104,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["apiproperty({nullable",{"_index":1046,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["apiproperty({type",{"_index":1040,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"entities/ReferralCodeEntity.html":{}}}],["apiresponse",{"_index":302,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["apisuccess",{"_index":311,"title":{},"body":{"controllers/AppController.html":{}}}],["apisuccessexample",{"_index":313,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags",{"_index":127,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/UserController.html":{}}}],["apitags('api",{"_index":137,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["apitags('auth",{"_index":657,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('healthcheck",{"_index":1730,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["apitags('helloworld",{"_index":303,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('mail",{"_index":265,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["apitags('user",{"_index":2562,"title":{},"body":{"controllers/UserController.html":{}}}],["apitype",{"_index":1023,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["apitypeenum",{"_index":1036,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["apitypeenum.wallet_share_api",{"_index":1095,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["apiversion",{"_index":308,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"controllers/HealthCheckController.html":{}}}],["app",{"_index":409,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{}}}],["app.controller",{"_index":334,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":301,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":287,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":319,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":300,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"coverage.html":{},"overview.html":{}}}],["appteste2econtroller",{"_index":378,"title":{"controllers/AppTestE2eController.html":{}},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"coverage.html":{}}}],["appteste2emodule",{"_index":432,"title":{"modules/AppTestE2eModule.html":{}},"body":{"modules/AppTestE2eModule.html":{},"modules.html":{},"overview.html":{}}}],["appteste2eservice",{"_index":408,"title":{"injectables/AppTestE2eService.html":{}},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":1868,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["argumentshost",{"_index":1503,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["arnaud",{"_index":2927,"title":{},"body":{"index.html":{}}}],["array",{"_index":847,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/UserEntity.html":{}}}],["async",{"_index":100,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":603,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"changelog.html":{},"todo.html":{}}}],["auth.controller",{"_index":725,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard.ts",{"_index":1887,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":637,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/guards/role.guard",{"_index":132,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/UserController.html":{}}}],["auth/interface/request",{"_index":2556,"title":{},"body":{"controllers/UserController.html":{}}}],["authcontroller",{"_index":601,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":604,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticate(@req",{"_index":700,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticate(request",{"_index":610,"title":{},"body":{"controllers/AuthController.html":{}}}],["authentication",{"_index":801,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication=${token",{"_index":792,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticationservice",{"_index":1925,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["authenticationtoken",{"_index":767,"title":{},"body":{"injectables/AuthService.html":{}}}],["authguard",{"_index":1888,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/LocalAuthenticationGuard.html":{}}}],["authguard('jwt",{"_index":1889,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["authguard('local",{"_index":1920,"title":{},"body":{"injectables/LocalAuthenticationGuard.html":{}}}],["authmodule",{"_index":323,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1993,"title":{},"body":{"entities/MessageEntity.html":{},"properties.html":{}}}],["authservice",{"_index":636,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":1769,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{},"modules.html":{}}}],["await",{"_index":225,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["banner_url",{"_index":947,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["bannerpicture",{"_index":948,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{}}}],["baseentity",{"_index":2335,"title":{},"body":{"entities/StripEventEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["bcrypt",{"_index":524,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"dependencies.html":{}}}],["bcrypt.compare(plaintextpassword",{"_index":1626,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["bcrypt.compare(query.refreshtoken",{"_index":1610,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{}}}],["bcrypt.hash(command.refreshtoken",{"_index":2274,"title":{},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}}}],["bcrypt.hashsync(command.password",{"_index":2171,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["bcrypt.hashsync(createuserdto.password",{"_index":593,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["before",{"_index":2612,"title":{},"body":{"entities/UserEntity.html":{}}}],["bf55",{"_index":2116,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["birthday",{"_index":808,"title":{},"body":{"entities/CardEntity.html":{}}}],["body",{"_index":118,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":53,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"entities/NotificationEntity.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"entities/UserEntity.html":{}}}],["bootstrap",{"_index":2801,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boundary",{"_index":371,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["briand",{"_index":2925,"title":{},"body":{"index.html":{}}}],["browse",{"_index":2958,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2955,"title":{},"body":{"modules.html":{}}}],["call",{"_index":2769,"title":{},"body":{"changelog.html":{}}}],["canactivate(context",{"_index":3013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canceled",{"_index":2892,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["card",{"_index":549,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/ProfileEntity.html":{},"miscellaneous/enumerations.html":{}}}],["card.entity",{"_index":447,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{}}}],["card.entity.ts",{"_index":985,"title":{},"body":{"entities/ConnectedCardEntity.html":{},"coverage.html":{}}}],["card.entity.ts:27",{"_index":996,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:37",{"_index":993,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:42",{"_index":989,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:47",{"_index":991,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:53",{"_index":994,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:56",{"_index":997,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:59",{"_index":995,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.enum",{"_index":904,"title":{},"body":{"entities/CardEntity.html":{}}}],["card.enum.ts",{"_index":2859,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["card.owner",{"_index":2089,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["card.profileswhosavedcard",{"_index":2092,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["card_id",{"_index":2100,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["cardentity",{"_index":439,"title":{"entities/CardEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConnectedCardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"coverage.html":{}}}],["cardentity.connectedcardone",{"_index":988,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardentity.connectedcardtwo",{"_index":990,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardentity.groupmemberships",{"_index":1707,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["cardentity.media",{"_index":1973,"title":{},"body":{"entities/MediaEntity.html":{}}}],["cardentity.messages",{"_index":1994,"title":{},"body":{"entities/MessageEntity.html":{}}}],["cardentity.occupations",{"_index":2037,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["cardentity.socialnetwork",{"_index":2299,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["cardentityone",{"_index":986,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardentitytwo",{"_index":987,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardpicture",{"_index":1965,"title":{},"body":{"entities/MediaEntity.html":{}}}],["cardrepository",{"_index":493,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["cards",{"_index":2034,"title":{},"body":{"entities/OccupationEntity.html":{},"entities/SocialNetworkEntity.html":{}}}],["cascade",{"_index":40,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["case",{"_index":3008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catch",{"_index":662,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["catch(exception",{"_index":1502,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["catcherror",{"_index":1376,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["catcherror(err",{"_index":1383,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["category",{"_index":2878,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["changelog",{"_index":2750,"title":{"changelog.html":{}},"body":{}}],["characters",{"_index":1801,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["charset",{"_index":1225,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["check",{"_index":1721,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["check.controller",{"_index":1736,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["check.controller.ts",{"_index":1720,"title":{},"body":{"controllers/HealthCheckController.html":{},"coverage.html":{}}}],["check.controller.ts:27",{"_index":1724,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["check.module",{"_index":341,"title":{},"body":{"modules/AppModule.html":{}}}],["check.module.ts",{"_index":1734,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["check.query",{"_index":1300,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["check.query.ts",{"_index":1740,"title":{},"body":{"classes/HealthCheckQuery.html":{},"coverage.html":{}}}],["check.response",{"_index":1303,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["check.response.ts",{"_index":1775,"title":{},"body":{"classes/HealthCheckResponse.html":{},"coverage.html":{}}}],["check.response.ts:3",{"_index":1779,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["check.response.ts:4",{"_index":1780,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["check.service",{"_index":1728,"title":{},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{}}}],["check.service.ts",{"_index":1293,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"coverage.html":{}}}],["check.service.ts:10",{"_index":1297,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["check.service.ts:7",{"_index":1296,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["check/cqrs/handler/query/health",{"_index":1741,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["check/cqrs/query/health",{"_index":1739,"title":{},"body":{"classes/HealthCheckQuery.html":{},"coverage.html":{}}}],["check/custom",{"_index":1291,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"coverage.html":{}}}],["check/domain/response/health",{"_index":1774,"title":{},"body":{"classes/HealthCheckResponse.html":{},"coverage.html":{}}}],["check/health",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"coverage.html":{}}}],["checkhealth",{"_index":1294,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["city",{"_index":10,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CompanyEntity.html":{}}}],["class",{"_index":81,"title":{"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/ListRolesDto.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"classes/NoUserTraceException.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{}},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["class.exception",{"_index":2414,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["classdesc",{"_index":2308,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["classes",{"_index":1020,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/ListRolesDto.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"classes/NoUserTraceException.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"overview.html":{}}}],["classic",{"_index":2910,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cleardatabasetest",{"_index":383,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{}}}],["client",{"_index":1071,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["client_address",{"_index":1819,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["client_name",{"_index":1821,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["client_vat_number",{"_index":1823,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["clientaddress",{"_index":1808,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["clientname",{"_index":1809,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["clientproxy",{"_index":1069,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["clientsmodule",{"_index":166,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["clientsmodule.register",{"_index":194,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["clientvatnumber",{"_index":1810,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["cluster_apilandingpagemodule",{"_index":153,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"overview.html":{}}}],["cluster_apilandingpagemodule_imports",{"_index":154,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"overview.html":{}}}],["cluster_apilandingpagemodule_providers",{"_index":155,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"overview.html":{}}}],["cluster_apilogmodule",{"_index":229,"title":{},"body":{"modules/ApiLogModule.html":{}}}],["cluster_apilogmodule_imports",{"_index":231,"title":{},"body":{"modules/ApiLogModule.html":{}}}],["cluster_apilogmodule_providers",{"_index":230,"title":{},"body":{"modules/ApiLogModule.html":{}}}],["cluster_apimailmodule",{"_index":270,"title":{},"body":{"modules/ApiMailModule.html":{},"overview.html":{}}}],["cluster_apimailmodule_imports",{"_index":272,"title":{},"body":{"modules/ApiMailModule.html":{}}}],["cluster_apimailmodule_providers",{"_index":271,"title":{},"body":{"modules/ApiMailModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appteste2emodule",{"_index":433,"title":{},"body":{"modules/AppTestE2eModule.html":{},"overview.html":{}}}],["cluster_appteste2emodule_imports",{"_index":434,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["cluster_appteste2emodule_providers",{"_index":435,"title":{},"body":{"modules/AppTestE2eModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":712,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":714,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":715,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":713,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_healthcheckmodule",{"_index":1732,"title":{},"body":{"modules/HealthCheckModule.html":{},"overview.html":{}}}],["cluster_healthcheckmodule_providers",{"_index":1733,"title":{},"body":{"modules/HealthCheckModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":2661,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_imports",{"_index":2663,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":2662,"title":{},"body":{"modules/UserModule.html":{}}}],["cmd",{"_index":706,"title":{},"body":{"controllers/AuthController.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["code",{"_index":1223,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"changelog.html":{}}}],["code.entity",{"_index":452,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["code.entity.ts",{"_index":1428,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/ReferralCodeEntity.html":{},"coverage.html":{}}}],["code.entity.ts:19",{"_index":2120,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:21",{"_index":1445,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:25",{"_index":2109,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:26",{"_index":1441,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:29",{"_index":2130,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:31",{"_index":1439,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:33",{"_index":2123,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:35",{"_index":1447,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:37",{"_index":2125,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:39",{"_index":1444,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:43",{"_index":2114,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:44",{"_index":1452,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:47",{"_index":2111,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:51",{"_index":2127,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:52",{"_index":1449,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:59",{"_index":1435,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:62",{"_index":1450,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:65",{"_index":1436,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.enum.ts",{"_index":2850,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["column",{"_index":70,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["column('text",{"_index":846,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/UserEntity.html":{}}}],["column()@column({unique",{"_index":2632,"title":{},"body":{"entities/UserEntity.html":{}}}],["column({default",{"_index":856,"title":{},"body":{"entities/CardEntity.html":{},"entities/UserEntity.html":{}}}],["column({name",{"_index":28,"title":{},"body":{"entities/AddressEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["column({nullable",{"_index":832,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/OccupationEntity.html":{},"entities/UserEntity.html":{}}}],["column({type",{"_index":867,"title":{},"body":{"entities/CardEntity.html":{},"entities/NotificationEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["column({unique",{"_index":2353,"title":{},"body":{"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["command",{"_index":1078,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"modules/UserModule.html":{}}}],["command.createuserdto",{"_index":1204,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["command.createuserdto.mail",{"_index":1197,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["command.createuserdto.username",{"_index":1190,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["command.email",{"_index":2256,"title":{},"body":{"classes/SendMailCommandHandler.html":{}}}],["command.id",{"_index":2225,"title":{},"body":{"classes/RestoreUserCommandHandler.html":{}}}],["command.mail",{"_index":2167,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["command.mail).pipe",{"_index":1382,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["command.roles",{"_index":2488,"title":{},"body":{"classes/UpdateUserRoleCommandHandler.html":{}}}],["command.updateusercredentialdto.newpassword",{"_index":2452,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["command.updateusercredentialdto.password",{"_index":2453,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["command.user",{"_index":2426,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["command.user.mail",{"_index":2420,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["command.user.username",{"_index":2418,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["command.userid",{"_index":2326,"title":{},"body":{"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["command.username",{"_index":2169,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["command/create",{"_index":1080,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{}}}],["command/delete",{"_index":1373,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteUserCommandHandler.html":{}}}],["command/register.command",{"_index":2162,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["command/remove",{"_index":2182,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{}}}],["command/restore",{"_index":2221,"title":{},"body":{"classes/RestoreUserCommandHandler.html":{}}}],["command/send",{"_index":2253,"title":{},"body":{"classes/SendMailCommandHandler.html":{}}}],["command/set",{"_index":2272,"title":{},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}}}],["command/soft",{"_index":2320,"title":{},"body":{"classes/SoftDeleteUserCommandHandler.html":{}}}],["command/update",{"_index":2411,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{}}}],["commandbus",{"_index":212,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["commandhandler",{"_index":1079,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["commandhandler(createlogcommand",{"_index":1084,"title":{},"body":{"classes/CreateLogCommandHandler.html":{}}}],["commandhandler(createusercommand",{"_index":1184,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["commandhandler(deletemailcommand",{"_index":1379,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["commandhandler(deleteusercommand",{"_index":1416,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{}}}],["commandhandler(registercommand",{"_index":2163,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["commandhandler(removerefreshtokencommand",{"_index":2183,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{}}}],["commandhandler(restoreusercommand",{"_index":2224,"title":{},"body":{"classes/RestoreUserCommandHandler.html":{}}}],["commandhandler(sendmailcommand",{"_index":2254,"title":{},"body":{"classes/SendMailCommandHandler.html":{}}}],["commandhandler(setcurrentrefreshtokencommand",{"_index":2273,"title":{},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}}}],["commandhandler(softdeleteusercommand",{"_index":2323,"title":{},"body":{"classes/SoftDeleteUserCommandHandler.html":{}}}],["commandhandler(updateusercommand",{"_index":2417,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["commandhandler(updateusercredentialcommand",{"_index":2448,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["commandhandler(updateuserrolecommand",{"_index":2487,"title":{},"body":{"classes/UpdateUserRoleCommandHandler.html":{}}}],["communicate",{"_index":912,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["companies",{"_index":2035,"title":{},"body":{"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{}}}],["company",{"_index":11,"title":{},"body":{"entities/AddressEntity.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{},"miscellaneous/enumerations.html":{}}}],["company.employees",{"_index":928,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["company.entity",{"_index":77,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/MediaEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{}}}],["company_account",{"_index":2909,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["company_address",{"_index":1825,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["company_employee",{"_index":552,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["company_name",{"_index":1827,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["company_vat_number",{"_index":1829,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["companyaddress",{"_index":1811,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["companyemployee",{"_index":2073,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["companyemployee.profile",{"_index":2074,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["companyemployeeentity",{"_index":442,"title":{"entities/CompanyEmployeeEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{},"coverage.html":{}}}],["companyemployeeentity.company",{"_index":968,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["companyemployeerepository",{"_index":495,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["companyentity",{"_index":34,"title":{"entities/CompanyEntity.html":{}},"body":{"entities/AddressEntity.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/MediaEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"coverage.html":{}}}],["companyentity.addresses",{"_index":36,"title":{},"body":{"entities/AddressEntity.html":{}}}],["companyentity.bannerpicture",{"_index":1975,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyentity.occupations",{"_index":2039,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["companyentity.ownerprofile",{"_index":2087,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["companyentity.profilepicture",{"_index":1977,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyentitybanner",{"_index":1966,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyname",{"_index":809,"title":{},"body":{"entities/CardEntity.html":{},"entities/InvoicesEntity.html":{}}}],["companyprofilepicture",{"_index":1967,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyrepository",{"_index":494,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["companyvatnumber",{"_index":1812,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["compose",{"_index":2940,"title":{},"body":{"index.html":{}}}],["config",{"_index":728,"title":{},"body":{"modules/AuthModule.html":{},"classes/GetUserLoginQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["configmodule",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":357,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["confirmed",{"_index":2610,"title":{},"body":{"entities/UserEntity.html":{}}}],["confirming",{"_index":2973,"title":{},"body":{"todo.html":{}}}],["connect",{"_index":1366,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["connected",{"_index":901,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["connected_card",{"_index":554,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{}}}],["connectedcard",{"_index":837,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{}}}],["connectedcard.cardentityone",{"_index":838,"title":{},"body":{"entities/CardEntity.html":{}}}],["connectedcard.cardentitytwo",{"_index":842,"title":{},"body":{"entities/CardEntity.html":{}}}],["connectedcardentity",{"_index":445,"title":{"entities/ConnectedCardEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"coverage.html":{}}}],["connectedcardentity.conversation",{"_index":1002,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["connectedcardone",{"_index":810,"title":{},"body":{"entities/CardEntity.html":{}}}],["connectedcardrepository",{"_index":496,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["connectedcardtwo",{"_index":811,"title":{},"body":{"entities/CardEntity.html":{}}}],["console.log('createlogcommandhandler",{"_index":1097,"title":{},"body":{"classes/CreateLogCommandHandler.html":{}}}],["const",{"_index":250,"title":{},"body":{"injectables/ApiLogService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/InvalidParameterEntityException.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"classes/RegisterHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constraintmap",{"_index":1790,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"miscellaneous/typealiases.html":{}}}],["constraints",{"_index":1794,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["constraints[key",{"_index":1797,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["constructor",{"_index":210,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"classes/NoUserTraceException.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["constructor(@inject('api_log",{"_index":1085,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["constructor(@inject('api_waiting_list",{"_index":1380,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["constructor(apiloggerservice",{"_index":1479,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["constructor(apilogservice",{"_index":1264,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["constructor(authenticationservice",{"_index":1923,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(client",{"_index":1068,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["constructor(commandbus",{"_index":211,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/UserService.html":{}}}],["constructor(createuserdto",{"_index":1127,"title":{},"body":{"classes/CreateUserCommand.html":{}}}],["constructor(deletemaildto",{"_index":1398,"title":{},"body":{"classes/DeleteMailEvent.html":{}}}],["constructor(email",{"_index":1576,"title":{},"body":{"classes/GetUserByEmailQuery.html":{}}}],["constructor(errors",{"_index":1786,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["constructor(getuserwithcriteriadto",{"_index":1664,"title":{},"body":{"classes/GetUserWithCriteriaQuery.html":{}}}],["constructor(healthcheckservice",{"_index":1742,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["constructor(heathcheck",{"_index":1777,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["constructor(id",{"_index":1952,"title":{},"body":{"classes/MailLandingPageDto.html":{}}}],["constructor(jwtservice",{"_index":756,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(login",{"_index":2645,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["constructor(partial",{"_index":941,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteUserCommand.html":{},"classes/ErrorCustomEvent.html":{},"classes/GenerateUserDto.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/ListRolesDto.html":{},"classes/MailDto.html":{},"classes/MailResponse.html":{},"classes/RestoreUserCommand.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserRoleCommand.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["constructor(private",{"_index":138,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"controllers/HealthCheckController.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor(public",{"_index":1130,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/CreateUserEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/HealthCheckResponse.html":{},"classes/LoginOfUserEvent.html":{},"classes/MailLandingPageDto.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleEvent.html":{}}}],["constructor(querybus",{"_index":1295,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["constructor(refreshtoken",{"_index":1600,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/SetCurrentRefreshTokenCommand.html":{}}}],["constructor(updateuserrolecommand",{"_index":2492,"title":{},"body":{"classes/UpdateUserRoleEvent.html":{}}}],["constructor(userid",{"_index":1253,"title":{},"body":{"classes/CreateUserEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/GetUserQuery.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["constructor(username",{"_index":1590,"title":{},"body":{"classes/GetUserByUsernameQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/LoginOfUserEvent.html":{},"classes/RegisterCommand.html":{}}}],["constructor(userrepository",{"_index":491,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["constructor(users",{"_index":2640,"title":{},"body":{"classes/UserListResponse.html":{}}}],["constructor(userservice",{"_index":1893,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["consumer",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(requestloggingmiddleware",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["contain",{"_index":1800,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["content",{"_index":295,"title":{},"body":{"controllers/AppController.html":{},"entities/ConversationEntity.html":{},"controllers/HealthCheckController.html":{},"entities/MessageEntity.html":{}}}],["context.switchtohttp().getrequest",{"_index":3016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contributing",{"_index":2777,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributors",{"_index":2924,"title":{},"body":{"index.html":{}}}],["controller",{"_index":89,"title":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/UserController.html":{}},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('/auth",{"_index":656,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('api",{"_index":136,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{}}}],["controller('health",{"_index":1729,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["controller('user",{"_index":2561,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":91,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["conversation",{"_index":556,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{}}}],["conversation.entity",{"_index":462,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{}}}],["conversation.entity.ts",{"_index":1872,"title":{},"body":{"entities/JoinedConversation.html":{},"coverage.html":{}}}],["conversation.entity.ts:21",{"_index":1878,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:24",{"_index":1881,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:32",{"_index":1880,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:36",{"_index":1875,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:43",{"_index":1876,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:46",{"_index":1882,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:49",{"_index":1877,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.group",{"_index":1692,"title":{},"body":{"entities/GroupEntity.html":{}}}],["conversation.joinedprofiles",{"_index":1884,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.joinedprofiles)@joincolumn",{"_index":1874,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.messages",{"_index":1997,"title":{},"body":{"entities/MessageEntity.html":{}}}],["conversationentity",{"_index":448,"title":{"entities/ConversationEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"coverage.html":{}}}],["conversationentity.notifications",{"_index":2014,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["conversationrepository",{"_index":497,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["conversations",{"_index":1686,"title":{},"body":{"entities/GroupEntity.html":{}}}],["cookie",{"_index":682,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["country",{"_index":12,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CompanyEntity.html":{}}}],["coverage",{"_index":2778,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cqrs/command/create",{"_index":248,"title":{},"body":{"injectables/ApiLogService.html":{},"injectables/UserService.html":{}}}],["cqrs/command/delete",{"_index":218,"title":{},"body":{"injectables/ApiLandingPageService.html":{}}}],["cqrs/command/register.command",{"_index":776,"title":{},"body":{"injectables/AuthService.html":{}}}],["cqrs/command/remove",{"_index":2723,"title":{},"body":{"injectables/UserService.html":{}}}],["cqrs/command/restore",{"_index":2727,"title":{},"body":{"injectables/UserService.html":{}}}],["cqrs/command/send",{"_index":286,"title":{},"body":{"injectables/ApiMailService.html":{}}}],["cqrs/command/set",{"_index":2724,"title":{},"body":{"injectables/UserService.html":{}}}],["cqrs/command/soft",{"_index":2726,"title":{},"body":{"injectables/UserService.html":{}}}],["cqrs/command/update",{"_index":2725,"title":{},"body":{"injectables/UserService.html":{}}}],["cqrs/event",{"_index":739,"title":{},"body":{"modules/AuthModule.html":{}}}],["cqrs/handler/command/create",{"_index":233,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/command/delete",{"_index":180,"title":{},"body":{"modules/ApiLandingPageModule.html":{}}}],["cqrs/handler/command/register.handler",{"_index":731,"title":{},"body":{"modules/AuthModule.html":{}}}],["cqrs/handler/command/remove",{"_index":2668,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/command/restore",{"_index":2675,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/command/send",{"_index":275,"title":{},"body":{"modules/ApiMailModule.html":{}}}],["cqrs/handler/command/set",{"_index":2666,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/command/soft",{"_index":2674,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/command/update",{"_index":2667,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/event/create",{"_index":2669,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/event/delete",{"_index":183,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/event/login",{"_index":2672,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/event/remove",{"_index":2670,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/event/send",{"_index":277,"title":{},"body":{"modules/ApiMailModule.html":{}}}],["cqrs/handler/event/set",{"_index":2671,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/event/update",{"_index":2673,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/query/get",{"_index":186,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/query/health",{"_index":1738,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["cqrs/query/get",{"_index":220,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/UserService.html":{}}}],["cqrs/query/health",{"_index":1299,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["cqrsmodule",{"_index":169,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{}}}],["create",{"_index":1257,"title":{},"body":{"classes/CreateUserEvent.html":{},"changelog.html":{}}}],["create/address.entity",{"_index":485,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["create/address.entity.ts",{"_index":7,"title":{},"body":{"entities/AddressEntity.html":{},"coverage.html":{}}}],["create/address.entity.ts:17",{"_index":52,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:22",{"_index":60,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:27",{"_index":33,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:32",{"_index":59,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:37",{"_index":42,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:42",{"_index":68,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:47",{"_index":57,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:52",{"_index":58,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:55",{"_index":56,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:58",{"_index":47,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:61",{"_index":63,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:64",{"_index":50,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:67",{"_index":66,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:70",{"_index":41,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/card.entity",{"_index":440,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/card.entity.ts",{"_index":807,"title":{},"body":{"entities/CardEntity.html":{},"coverage.html":{}}}],["create/card.entity.ts:100",{"_index":843,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:103",{"_index":880,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:109",{"_index":875,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:115",{"_index":854,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:121",{"_index":862,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:127",{"_index":864,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:132",{"_index":883,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:139",{"_index":886,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:142",{"_index":895,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:145",{"_index":891,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:148",{"_index":893,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:155",{"_index":844,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:158",{"_index":887,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:161",{"_index":845,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:35",{"_index":855,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:39",{"_index":881,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:42",{"_index":858,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:46",{"_index":851,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:50",{"_index":859,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:54",{"_index":835,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:57",{"_index":878,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:61",{"_index":850,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:65",{"_index":889,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:68",{"_index":833,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:71",{"_index":865,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:75",{"_index":871,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:78",{"_index":870,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:81",{"_index":884,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:88",{"_index":877,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:94",{"_index":841,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/company",{"_index":443,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"injectables/DatabaseConfiguration.html":{},"coverage.html":{}}}],["create/company.entity",{"_index":441,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/company.entity.ts",{"_index":945,"title":{},"body":{"entities/CompanyEntity.html":{},"coverage.html":{}}}],["create/company.entity.ts:104",{"_index":964,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:107",{"_index":980,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:110",{"_index":965,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:33",{"_index":970,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:36",{"_index":971,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:39",{"_index":979,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:42",{"_index":959,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:45",{"_index":966,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:48",{"_index":981,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:51",{"_index":956,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:54",{"_index":982,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:57",{"_index":962,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:60",{"_index":963,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:63",{"_index":976,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:66",{"_index":967,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:73",{"_index":969,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:77",{"_index":973,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:80",{"_index":975,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:86",{"_index":978,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:92",{"_index":961,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:97",{"_index":958,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/connected",{"_index":446,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"coverage.html":{}}}],["create/conversation.entity",{"_index":449,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/conversation.entity.ts",{"_index":999,"title":{},"body":{"entities/ConversationEntity.html":{},"coverage.html":{}}}],["create/conversation.entity.ts:24",{"_index":1009,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:27",{"_index":1004,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:33",{"_index":1003,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:36",{"_index":1008,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:39",{"_index":1013,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:42",{"_index":1011,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:45",{"_index":1015,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:52",{"_index":1005,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:55",{"_index":1016,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:58",{"_index":1006,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/discount",{"_index":451,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"coverage.html":{}}}],["create/entities",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"modules/EntitiesToMoveModule.html":{}}}],["create/enum/notification",{"_index":2879,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/role",{"_index":2235,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["create/enum/status",{"_index":2889,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/transferable",{"_index":2901,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/type",{"_index":2904,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/who",{"_index":2913,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/group",{"_index":456,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/GroupMembershipEntity.html":{},"coverage.html":{}}}],["create/group.entity",{"_index":454,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/group.entity.ts",{"_index":1685,"title":{},"body":{"entities/GroupEntity.html":{},"coverage.html":{}}}],["create/group.entity.ts:24",{"_index":1696,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:28",{"_index":1701,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:30",{"_index":1698,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:37",{"_index":1693,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:45",{"_index":1703,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:53",{"_index":1691,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:60",{"_index":1694,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:63",{"_index":1704,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:66",{"_index":1695,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/invoices.entity",{"_index":459,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/invoices.entity.ts",{"_index":1806,"title":{},"body":{"entities/InvoicesEntity.html":{},"coverage.html":{}}}],["create/invoices.entity.ts:103",{"_index":1842,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:110",{"_index":1831,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:113",{"_index":1850,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:116",{"_index":1833,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:20",{"_index":1838,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:25",{"_index":1818,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:30",{"_index":1832,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:41",{"_index":1840,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:46",{"_index":1828,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:51",{"_index":1826,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:56",{"_index":1830,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:61",{"_index":1822,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:66",{"_index":1820,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:71",{"_index":1824,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:76",{"_index":1834,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:81",{"_index":1845,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:86",{"_index":1849,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:91",{"_index":1847,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:95",{"_index":1837,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/joined",{"_index":461,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/JoinedConversation.html":{},"coverage.html":{}}}],["create/media.entity",{"_index":464,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/media.entity.ts",{"_index":1964,"title":{},"body":{"entities/MediaEntity.html":{},"coverage.html":{}}}],["create/media.entity.ts:22",{"_index":1985,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:25",{"_index":1986,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:32",{"_index":1984,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:37",{"_index":1982,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:40",{"_index":1990,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:42",{"_index":1988,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:45",{"_index":1974,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:48",{"_index":1978,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:50",{"_index":1976,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:57",{"_index":1979,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:60",{"_index":1991,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:63",{"_index":1980,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/message.entity",{"_index":466,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/message.entity.ts",{"_index":1992,"title":{},"body":{"entities/MessageEntity.html":{},"coverage.html":{}}}],["create/message.entity.ts:20",{"_index":2001,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:23",{"_index":1996,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:30",{"_index":1995,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:33",{"_index":1998,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:40",{"_index":1999,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:43",{"_index":2002,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:46",{"_index":2000,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/notification.entity",{"_index":482,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["create/notification.entity.ts",{"_index":2011,"title":{},"body":{"entities/NotificationEntity.html":{},"coverage.html":{}}}],["create/notification.entity.ts:23",{"_index":2019,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:28",{"_index":2025,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:33",{"_index":2018,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:36",{"_index":2027,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:39",{"_index":2021,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:42",{"_index":2022,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:49",{"_index":2030,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:52",{"_index":2024,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:58",{"_index":2015,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:65",{"_index":2016,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:68",{"_index":2028,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:71",{"_index":2017,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/occupation.entity",{"_index":468,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/occupation.entity.ts",{"_index":2033,"title":{},"body":{"entities/OccupationEntity.html":{},"coverage.html":{}}}],["create/occupation.entity.ts:21",{"_index":2043,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:24",{"_index":2044,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:31",{"_index":2046,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:34",{"_index":2040,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:37",{"_index":2038,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:44",{"_index":2041,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:47",{"_index":2047,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:50",{"_index":2042,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/plan.entity",{"_index":470,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/plan.entity.ts",{"_index":2049,"title":{},"body":{"entities/PlanEntity.html":{},"coverage.html":{}}}],["create/plan.entity.ts:19",{"_index":2060,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:22",{"_index":2061,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:25",{"_index":2055,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:28",{"_index":2062,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:31",{"_index":2059,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:34",{"_index":2058,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:41",{"_index":2064,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:48",{"_index":2053,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:51",{"_index":2065,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:54",{"_index":2054,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/profile.entity",{"_index":472,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["create/profile.entity.ts",{"_index":2066,"title":{},"body":{"entities/ProfileEntity.html":{},"coverage.html":{}}}],["create/profile.entity.ts:105",{"_index":2088,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:111",{"_index":2082,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:118",{"_index":2076,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:121",{"_index":2095,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:124",{"_index":2077,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:30",{"_index":2078,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:33",{"_index":2098,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:40",{"_index":2097,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:46",{"_index":2090,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:61",{"_index":2094,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:75",{"_index":2086,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:81",{"_index":2075,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:87",{"_index":2091,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:93",{"_index":2072,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:99",{"_index":2080,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/referal",{"_index":484,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/ReferralCodeEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["create/social",{"_index":474,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/SocialNetworkEntity.html":{},"coverage.html":{}}}],["create/strip",{"_index":477,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/StripEventEntity.html":{},"coverage.html":{}}}],["create/subscription.entity",{"_index":480,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["create/subscription.entity.ts",{"_index":2337,"title":{},"body":{"entities/SubscriptionEntity.html":{},"coverage.html":{}}}],["create/subscription.entity.ts:25",{"_index":2347,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:29",{"_index":2352,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:33",{"_index":2346,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:43",{"_index":2354,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:47",{"_index":2363,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:51",{"_index":2361,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:58",{"_index":2351,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:61",{"_index":2366,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:64",{"_index":2349,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:67",{"_index":2345,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:74",{"_index":2342,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:77",{"_index":2364,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:80",{"_index":2343,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["created",{"_index":1276,"title":{},"body":{"classes/CreateUserEventHandler.html":{}}}],["created_at",{"_index":45,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["createdat",{"_index":13,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateUserResponse.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{}}}],["createdatecolumn",{"_index":71,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["createdatecolumn({name",{"_index":44,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{}}}],["createdfrom",{"_index":1644,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["createdto",{"_index":1645,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["createlog",{"_index":235,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["createlog(log",{"_index":238,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["createlogcommand",{"_index":247,"title":{"classes/CreateLogCommand.html":{}},"body":{"injectables/ApiLogService.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"coverage.html":{}}}],["createlogcommandhandler",{"_index":188,"title":{"classes/CreateLogCommandHandler.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateLogCommandHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["createlogdto",{"_index":239,"title":{"classes/CreateLogDto.html":{}},"body":{"injectables/ApiLogService.html":{},"classes/CreateLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"coverage.html":{}}}],["createlogdto.apiname",{"_index":1486,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["createlogdto.apitype",{"_index":1490,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["createlogdto.apiversion",{"_index":1487,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["createlogdto.body",{"_index":1539,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.error",{"_index":1495,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.headers",{"_index":1537,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.ip",{"_index":1549,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.loggingtype",{"_index":1488,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["createlogdto.method",{"_index":1491,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.os",{"_index":1548,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.platform",{"_index":1551,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.responsebody",{"_index":1545,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.responseheaders",{"_index":1543,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.route",{"_index":1493,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.screensize",{"_index":1552,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.status",{"_index":1541,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogformethode",{"_index":236,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["createlogformethode(log",{"_index":242,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["createmethodlogdto",{"_index":243,"title":{"classes/CreateMethodLogDto.html":{}},"body":{"injectables/ApiLogService.html":{},"classes/CreateMethodLogDto.html":{},"coverage.html":{}}}],["createtimestamp",{"_index":2373,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["createtypeormoptions",{"_index":1305,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["createuser",{"_index":1219,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createuser(@body",{"_index":2564,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(createuserdto",{"_index":2512,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createusercommand",{"_index":1124,"title":{"classes/CreateUserCommand.html":{}},"body":{"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createusercommand(createuserdto",{"_index":2730,"title":{},"body":{"injectables/UserService.html":{}}}],["createusercommandhandler",{"_index":1131,"title":{"classes/CreateUserCommandHandler.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["createuserdto",{"_index":393,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createuserdto.mail",{"_index":591,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["createuserdto.roles",{"_index":596,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["createuserdto.username",{"_index":590,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["createuserevent",{"_index":1250,"title":{"classes/CreateUserEvent.html":{}},"body":{"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"coverage.html":{}}}],["createusereventhandler",{"_index":1259,"title":{"classes/CreateUserEventHandler.html":{}},"body":{"classes/CreateUserEventHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["createuserresponse",{"_index":1175,"title":{"classes/CreateUserResponse.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/CreateUserResponse.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createusertest",{"_index":384,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{}}}],["createusertest(@body",{"_index":422,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["createusertest(createuserdto",{"_index":392,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{}}}],["creation",{"_index":2312,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["credential",{"_index":2467,"title":{},"body":{"classes/UpdateUserCredentialEvent.html":{}}}],["credential.command",{"_index":2442,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["credential.command.ts",{"_index":2436,"title":{},"body":{"classes/UpdateUserCredentialCommand.html":{},"coverage.html":{}}}],["credential.command.ts:4",{"_index":2439,"title":{},"body":{"classes/UpdateUserCredentialCommand.html":{}}}],["credential.command.ts:5",{"_index":2438,"title":{},"body":{"classes/UpdateUserCredentialCommand.html":{}}}],["credential.dto",{"_index":2440,"title":{},"body":{"classes/UpdateUserCredentialCommand.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["credential.dto.ts",{"_index":2459,"title":{},"body":{"classes/UpdateUserCredentialDto.html":{},"coverage.html":{}}}],["credential.dto.ts:2",{"_index":2463,"title":{},"body":{"classes/UpdateUserCredentialDto.html":{}}}],["credential.dto.ts:3",{"_index":2462,"title":{},"body":{"classes/UpdateUserCredentialDto.html":{}}}],["credential.dto.ts:5",{"_index":2461,"title":{},"body":{"classes/UpdateUserCredentialDto.html":{}}}],["credential.event",{"_index":2447,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"coverage.html":{}}}],["credential.event.ts",{"_index":2465,"title":{},"body":{"classes/UpdateUserCredentialEvent.html":{},"coverage.html":{}}}],["credential.event.ts:2",{"_index":2468,"title":{},"body":{"classes/UpdateUserCredentialEvent.html":{}}}],["credential.event.ts:3",{"_index":2466,"title":{},"body":{"classes/UpdateUserCredentialEvent.html":{}}}],["credential.event.ts:4",{"_index":2469,"title":{},"body":{"classes/UpdateUserCredentialEvent.html":{}}}],["credentials",{"_index":786,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUserLoginQueryHandler.html":{}}}],["criteria.dto",{"_index":1668,"title":{},"body":{"classes/GetUserWithCriteriaQuery.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["criteria.dto.ts",{"_index":1643,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{},"coverage.html":{}}}],["criteria.dto.ts:10",{"_index":1657,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:12",{"_index":1658,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:14",{"_index":1661,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:15",{"_index":1652,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:2",{"_index":1653,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:3",{"_index":1654,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:5",{"_index":1659,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:6",{"_index":1660,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:8",{"_index":1655,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:9",{"_index":1656,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.query",{"_index":1670,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["criteria.query.ts",{"_index":1663,"title":{},"body":{"classes/GetUserWithCriteriaQuery.html":{},"coverage.html":{}}}],["criteria.query.ts:3",{"_index":1665,"title":{},"body":{"classes/GetUserWithCriteriaQuery.html":{}}}],["criteria.query.ts:4",{"_index":1666,"title":{},"body":{"classes/GetUserWithCriteriaQuery.html":{}}}],["cron",{"_index":2975,"title":{},"body":{"todo.html":{}}}],["ctx",{"_index":1507,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":1510,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":1509,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["currency",{"_index":1813,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["current",{"_index":2269,"title":{},"body":{"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["current_timestamp",{"_index":2379,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["currenthashedrefreshtoken",{"_index":1607,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"entities/UserEntity.html":{}}}],["custom",{"_index":1727,"title":{},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{}}}],["custom.event",{"_index":177,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"coverage.html":{}}}],["custom.event.ts",{"_index":1474,"title":{},"body":{"classes/ErrorCustomEvent.html":{},"coverage.html":{}}}],["custom.event.ts:1",{"_index":1475,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["custom.event.ts:6",{"_index":1478,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["custom.event.ts:7",{"_index":1477,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["custom.event.ts:8",{"_index":1476,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["customer",{"_index":2358,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["customhealthcheckservice",{"_index":1289,"title":{"injectables/CustomHealthCheckService.html":{}},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":633,"title":{},"body":{"controllers/AuthController.html":{},"todo.html":{}}}],["database",{"_index":390,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/DatabaseConfiguration.html":{},"index.html":{},"todo.html":{}}}],["databaseconfiguration",{"_index":335,"title":{"injectables/DatabaseConfiguration.html":{}},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfiguration.html":{},"coverage.html":{}}}],["date",{"_index":43,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateUserResponse.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserWithCriteriaDto.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{}}}],["date'})@isdate",{"_index":1443,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["date().toisostring",{"_index":1516,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["date(date.now",{"_index":2385,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["date})@createdatecolumn",{"_index":2110,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["date})@updatedatecolumn",{"_index":2126,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["david",{"_index":2928,"title":{},"body":{"index.html":{}}}],["dd/mm/yyyy",{"_index":2989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debug",{"_index":2911,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["decimal",{"_index":1835,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["decimal'})@isnotempty()@isnumber",{"_index":1844,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["decorators",{"_index":27,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"classes/MailDto.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{}}}],["default",{"_index":55,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"classes/CreateUserEvent.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"entities/GroupMembershipEntity.html":{},"modules/HealthCheckModule.html":{},"entities/InvoicesEntity.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"entities/NotificationEntity.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SoftDeleteUserEvent.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleEvent.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":2295,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["defined",{"_index":32,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":106,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/AppTestE2eController.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["delete('/admin/:id",{"_index":2590,"title":{},"body":{"controllers/UserController.html":{}}}],["delete('/api/test/remove",{"_index":425,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["delete('/delete",{"_index":104,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["delete('/public/delete",{"_index":2593,"title":{},"body":{"controllers/UserController.html":{}}}],["deleted",{"_index":1427,"title":{},"body":{"classes/DeleteUserEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["deleted_at",{"_index":49,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["deletedat",{"_index":14,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserLoginQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["deletedatecolumn",{"_index":72,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["deletedatecolumn({name",{"_index":48,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{}}}],["deletedfrom",{"_index":1646,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["deletedto",{"_index":1647,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["deletemail",{"_index":101,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{}}}],["deletemail(@body",{"_index":147,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["deletemail(mail",{"_index":103,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{}}}],["deletemailcommand",{"_index":217,"title":{"classes/DeleteMailCommand.html":{}},"body":{"injectables/ApiLandingPageService.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["deletemailcommandhandler",{"_index":179,"title":{"classes/DeleteMailCommandHandler.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"classes/DeleteMailCommandHandler.html":{},"coverage.html":{}}}],["deletemaildto",{"_index":1397,"title":{},"body":{"classes/DeleteMailEvent.html":{}}}],["deletemailevent",{"_index":1374,"title":{"classes/DeleteMailEvent.html":{}},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"coverage.html":{}}}],["deletemailevent(command",{"_index":1394,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["deletemaileventhandler",{"_index":182,"title":{"classes/DeleteMailEventHandler.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"classes/DeleteMailEventHandler.html":{},"coverage.html":{}}}],["deleteme",{"_index":2502,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteme(@req",{"_index":2594,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteme(requestuser",{"_index":2515,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteme(userid",{"_index":2698,"title":{},"body":{"injectables/UserService.html":{}}}],["deletetimestamp",{"_index":2374,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["deleteusercommand",{"_index":1406,"title":{"classes/DeleteUserCommand.html":{}},"body":{"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"coverage.html":{}}}],["deleteusercommandhandler",{"_index":1409,"title":{"classes/DeleteUserCommandHandler.html":{}},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"coverage.html":{}}}],["deleteuserevent",{"_index":1413,"title":{"classes/DeleteUserEvent.html":{}},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"coverage.html":{}}}],["deleteuserevent(command.userid",{"_index":1418,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{}}}],["deleteusereventhandler",{"_index":1422,"title":{"classes/DeleteUserEventHandler.html":{}},"body":{"classes/DeleteUserEventHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["deleteusertest",{"_index":385,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["deleteusertest(@body",{"_index":426,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["deleteusertest(useriddto",{"_index":396,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["deletion",{"_index":2314,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["dependencies",{"_index":152,"title":{"dependencies.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":292,"title":{},"body":{"controllers/AppController.html":{},"entities/CompanyEntity.html":{},"controllers/HealthCheckController.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"index.html":{},"properties.html":{}}}],["dev",{"_index":1353,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["device",{"_index":1533,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["diffusible",{"_index":2917,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dirname",{"_index":3000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["discount",{"_index":1467,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["discount_amount",{"_index":1437,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["discount_codes",{"_index":558,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/DiscountCodeEntity.html":{}}}],["discount_percentage",{"_index":1440,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["discountamount",{"_index":1429,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["discountcodeentity",{"_index":450,"title":{"entities/DiscountCodeEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{},"coverage.html":{}}}],["discountcodeentity.subscriptions",{"_index":2344,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["discountcoderepository",{"_index":498,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["discountcodes",{"_index":2338,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["discounted_price",{"_index":2056,"title":{},"body":{"entities/PlanEntity.html":{}}}],["discountedprice",{"_index":2050,"title":{},"body":{"entities/PlanEntity.html":{}}}],["discountpercentage",{"_index":1430,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["disk",{"_index":1765,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["diskhealthindicator",{"_index":1746,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["docker",{"_index":2939,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":2779,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documentation:serveapplication",{"_index":2950,"title":{},"body":{"index.html":{}}}],["domain/dto/create",{"_index":245,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserEvent.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/dto/generate",{"_index":2557,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/dto/get",{"_index":1667,"title":{},"body":{"classes/GetUserWithCriteriaQuery.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/dto/list",{"_index":2558,"title":{},"body":{"controllers/UserController.html":{}}}],["domain/dto/mail",{"_index":222,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["domain/dto/mail.dto",{"_index":264,"title":{},"body":{"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{}}}],["domain/dto/update",{"_index":2398,"title":{},"body":{"classes/UpdateUserCommand.html":{},"classes/UpdateUserCredentialCommand.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/dto/user",{"_index":2560,"title":{},"body":{"controllers/UserController.html":{}}}],["domain/entities/user.entity",{"_index":1163,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["domain/enum/api",{"_index":1060,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{}}}],["domain/enum/logging",{"_index":1058,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["domain/enum/user",{"_index":1178,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/enum/verbose",{"_index":1081,"title":{},"body":{"classes/CreateLogCommandHandler.html":{}}}],["domain/response/create",{"_index":1176,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/response/health",{"_index":1302,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["domain/response/mail.response",{"_index":130,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{}}}],["domain/response/user",{"_index":1634,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["domain/response/user.response",{"_index":1632,"title":{},"body":{"classes/GetUserQueryHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dotenv",{"_index":729,"title":{},"body":{"modules/AuthModule.html":{},"classes/GetUserLoginQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["double",{"_index":2972,"title":{},"body":{"todo.html":{}}}],["dto/sign",{"_index":634,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["duplicate_category_name",{"_index":2877,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicate_email",{"_index":2871,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicate_username",{"_index":2870,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicatemailexception",{"_index":1169,"title":{"classes/DuplicateMailException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["duplicateusernameexception",{"_index":1164,"title":{"classes/DuplicateUsernameException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateUsernameException.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["duration",{"_index":2051,"title":{},"body":{"entities/PlanEntity.html":{}}}],["e",{"_index":708,"title":{},"body":{"controllers/AuthController.html":{},"classes/RestoreUserCommandHandler.html":{}}}],["e2e",{"_index":2764,"title":{},"body":{"changelog.html":{}}}],["e2e.controller",{"_index":437,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["e2e.controller.ts",{"_index":382,"title":{},"body":{"controllers/AppTestE2eController.html":{},"coverage.html":{}}}],["e2e.controller.ts:14",{"_index":391,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.controller.ts:20",{"_index":395,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.controller.ts:27",{"_index":400,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.controller.ts:33",{"_index":403,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.controller.ts:39",{"_index":405,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.module.ts",{"_index":436,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["e2e.service",{"_index":410,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{}}}],["e2e.service.ts",{"_index":487,"title":{},"body":{"injectables/AppTestE2eService.html":{},"coverage.html":{}}}],["e2e.service.ts:105",{"_index":517,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:114",{"_index":522,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:118",{"_index":520,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:126",{"_index":518,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:30",{"_index":514,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:78",{"_index":516,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["each",{"_index":849,"title":{},"body":{"entities/CardEntity.html":{}}}],["eb823d92",{"_index":2115,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["email",{"_index":949,"title":{},"body":{"entities/CompanyEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/MailDto.html":{},"classes/RegisterHandler.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/UpdateUserCommandHandler.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"miscellaneous/enumerations.html":{}}}],["email.query",{"_index":1581,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["email.query.ts",{"_index":1575,"title":{},"body":{"classes/GetUserByEmailQuery.html":{},"coverage.html":{}}}],["email.query.ts:1",{"_index":1577,"title":{},"body":{"classes/GetUserByEmailQuery.html":{}}}],["email.query.ts:2",{"_index":1578,"title":{},"body":{"classes/GetUserByEmailQuery.html":{}}}],["emails",{"_index":812,"title":{},"body":{"entities/CardEntity.html":{}}}],["employee",{"_index":2888,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["employee.entity",{"_index":444,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{}}}],["employee.entity.ts",{"_index":927,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"coverage.html":{}}}],["employee.entity.ts:27",{"_index":932,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:30",{"_index":936,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:37",{"_index":929,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:40",{"_index":934,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:47",{"_index":930,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:50",{"_index":937,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:53",{"_index":931,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.enum",{"_index":939,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.enum.ts",{"_index":2852,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["employees",{"_index":950,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["empty",{"_index":2969,"title":{},"body":{"todo.html":{}}}],["end_date",{"_index":1442,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["enddate",{"_index":1431,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["entities",{"_index":2,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"changelog.html":{},"overview.html":{}}}],["entities/user.entity",{"_index":1288,"title":{},"body":{"classes/CreateUserResponse.html":{},"classes/UserLoginResponse.html":{}}}],["entitiestomovemodule",{"_index":324,"title":{"modules/EntitiesToMoveModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules.html":{},"overview.html":{}}}],["entity",{"_index":0,"title":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"changelog.html":{},"coverage.html":{}}}],["entity('company_employee",{"_index":940,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["entity('invoices",{"_index":1852,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["entity('occupation",{"_index":2048,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["entity('referral_code",{"_index":2132,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["entity.exception",{"_index":1174,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["entity.exception.ts",{"_index":1785,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["entity.exception.ts:6",{"_index":1788,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["entity.ts",{"_index":2372,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{},"coverage.html":{}}}],["entity.ts:11",{"_index":2377,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:13",{"_index":2381,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:19",{"_index":2383,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:24",{"_index":2382,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:5",{"_index":2376,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:8",{"_index":2380,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.{ts,js",{"_index":1342,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["entity/timestamp.extend",{"_index":2371,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{},"coverage.html":{}}}],["entity{.ts,.js",{"_index":1330,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["enum",{"_index":885,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["enum/api",{"_index":1119,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["enum/logging",{"_index":1120,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["enum/notification",{"_index":2031,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["enum/role",{"_index":938,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/GroupMembershipEntity.html":{}}}],["enum/transferable",{"_index":916,"title":{},"body":{"entities/CardEntity.html":{}}}],["enum/type",{"_index":907,"title":{},"body":{"entities/CardEntity.html":{}}}],["enum/user",{"_index":1248,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/GenerateUserDto.html":{},"classes/ListRolesDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["enum/who",{"_index":902,"title":{},"body":{"entities/CardEntity.html":{}}}],["enumerations",{"_index":2843,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment.pipe",{"_index":413,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["environment.pipe.ts",{"_index":1862,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{},"coverage.html":{}}}],["environment.pipe.ts:5",{"_index":1869,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["environment/app",{"_index":380,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"coverage.html":{}}}],["err",{"_index":1206,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["err.length",{"_index":1208,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["err.message",{"_index":1387,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["err.status",{"_index":1384,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["error",{"_index":663,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/LoggingTypeEnum.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["error('invalid",{"_index":806,"title":{},"body":{"injectables/AuthService.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["error('mail",{"_index":2739,"title":{},"body":{"injectables/UserService.html":{}}}],["error('new",{"_index":2454,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["error('node_env",{"_index":1367,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["error('not",{"_index":2736,"title":{},"body":{"injectables/UserService.html":{}}}],["error('response",{"_index":678,"title":{},"body":{"controllers/AuthController.html":{}}}],["error('user",{"_index":2226,"title":{},"body":{"classes/RestoreUserCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"injectables/UserService.html":{}}}],["error(error.message",{"_index":2490,"title":{},"body":{"classes/UpdateUserRoleCommandHandler.html":{}}}],["error.constraints",{"_index":1795,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["error.message",{"_index":1547,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["error.message.split(':')[0",{"_index":665,"title":{},"body":{"controllers/AuthController.html":{}}}],["error.message.split(':')[1",{"_index":666,"title":{},"body":{"controllers/AuthController.html":{}}}],["error.status",{"_index":2566,"title":{},"body":{"controllers/UserController.html":{}}}],["errorcustomevent",{"_index":1179,"title":{"classes/ErrorCustomEvent.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"coverage.html":{}}}],["errorcustomeventhandler",{"_index":174,"title":{"classes/ErrorCustomEventHandler.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"coverage.html":{}}}],["errorenum",{"_index":2845,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["errorexceptionfilter",{"_index":1498,"title":{"classes/ErrorExceptionFilter.html":{}},"body":{"classes/ErrorExceptionFilter.html":{},"coverage.html":{}}}],["errorloggingmiddleware",{"_index":352,"title":{"injectables/ErrorLoggingMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"coverage.html":{}}}],["errorloggingmiddleware).forroutes",{"_index":375,"title":{},"body":{"modules/AppModule.html":{}}}],["errors",{"_index":1789,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["errors.map((error",{"_index":1793,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["eslint",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"index.html":{}}}],["eslint/ban",{"_index":2201,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["eslint/explicit",{"_index":370,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["eslint/no",{"_index":1566,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["event",{"_index":1268,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{}}}],["event.createuserdto.mail",{"_index":1277,"title":{},"body":{"classes/CreateUserEventHandler.html":{}}}],["event.deletemaildto.mail",{"_index":1405,"title":{},"body":{"classes/DeleteMailEventHandler.html":{}}}],["event.email",{"_index":2266,"title":{},"body":{"classes/SendMailEventHandler.html":{}}}],["event.entity",{"_index":478,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{}}}],["event.entity.ts",{"_index":2333,"title":{},"body":{"entities/StripEventEntity.html":{},"coverage.html":{}}}],["event.entity.ts:16",{"_index":2334,"title":{},"body":{"entities/StripEventEntity.html":{}}}],["event.error",{"_index":1496,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["event.handler",{"_index":1494,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["event.localisation",{"_index":1492,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["event.method",{"_index":1274,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["event.module",{"_index":1273,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["event.updateuserrolecommand.roles.join",{"_index":2499,"title":{},"body":{"classes/UpdateUserRoleEventHandler.html":{}}}],["event.updateuserrolecommand.userid",{"_index":2498,"title":{},"body":{"classes/UpdateUserRoleEventHandler.html":{}}}],["event.userid",{"_index":1275,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["event.username",{"_index":1941,"title":{},"body":{"classes/LoginOfUserEventHandler.html":{}}}],["event/create",{"_index":1270,"title":{},"body":{"classes/CreateUserEventHandler.html":{}}}],["event/delete",{"_index":1375,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{}}}],["event/login",{"_index":1620,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{}}}],["event/register.event",{"_index":2146,"title":{},"body":{"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{}}}],["event/remove",{"_index":2195,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{}}}],["event/restore",{"_index":2223,"title":{},"body":{"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{}}}],["event/send",{"_index":2252,"title":{},"body":{"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{}}}],["event/set",{"_index":2279,"title":{},"body":{"classes/SetCurrentRefreshTokenEventHandler.html":{}}}],["event/soft",{"_index":2322,"title":{},"body":{"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{}}}],["event/update",{"_index":2416,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["eventbus",{"_index":1134,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["eventshandler",{"_index":1269,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["eventshandler(createuserevent",{"_index":1271,"title":{},"body":{"classes/CreateUserEventHandler.html":{}}}],["eventshandler(deletemailevent",{"_index":1404,"title":{},"body":{"classes/DeleteMailEventHandler.html":{}}}],["eventshandler(deleteuserevent",{"_index":1426,"title":{},"body":{"classes/DeleteUserEventHandler.html":{}}}],["eventshandler(errorcustomevent",{"_index":1484,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["eventshandler(loginofuserevent",{"_index":1940,"title":{},"body":{"classes/LoginOfUserEventHandler.html":{}}}],["eventshandler(registerevent",{"_index":2147,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["eventshandler(removerefreshtokenevent",{"_index":2196,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{}}}],["eventshandler(restoreuserevent",{"_index":2233,"title":{},"body":{"classes/RestoreUserEventHandler.html":{}}}],["eventshandler(sendmailevent",{"_index":2264,"title":{},"body":{"classes/SendMailEventHandler.html":{}}}],["eventshandler(setcurrentrefreshtokenevent",{"_index":2280,"title":{},"body":{"classes/SetCurrentRefreshTokenEventHandler.html":{}}}],["eventshandler(softdeleteuserevent",{"_index":2331,"title":{},"body":{"classes/SoftDeleteUserEventHandler.html":{}}}],["eventshandler(updateusercredentialevent",{"_index":2472,"title":{},"body":{"classes/UpdateUserCredentialEventHandler.html":{}}}],["eventshandler(updateuserevent",{"_index":2478,"title":{},"body":{"classes/UpdateUserEventHandler.html":{}}}],["eventshandler(updateuserroleevent",{"_index":2497,"title":{},"body":{"classes/UpdateUserRoleEventHandler.html":{}}}],["example",{"_index":317,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"entities/ReferralCodeEntity.html":{}}}],["exceed",{"_index":1767,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["exception",{"_index":1505,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"classes/InvalidUsernameException.html":{}}}],["exception.filter.ts",{"_index":1500,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:6",{"_index":1504,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exception.getstatus",{"_index":1512,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exception/duplicate",{"_index":1167,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["exception/invalid",{"_index":1172,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/RegisterHandler.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["exception/mail",{"_index":1956,"title":{},"body":{"classes/MailRequiredException.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["exception/no",{"_index":2004,"title":{},"body":{"classes/NoUserTraceException.html":{},"coverage.html":{}}}],["exception/same",{"_index":2243,"title":{},"body":{"classes/SamePasswordException.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["exception/unauthorized",{"_index":2391,"title":{},"body":{"classes/UnauthorizedRequestException.html":{},"coverage.html":{}}}],["exception/user",{"_index":2679,"title":{},"body":{"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["exceptionfilter",{"_index":1501,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exclude",{"_index":2615,"title":{},"body":{"entities/UserEntity.html":{}}}],["execute",{"_index":1067,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["execute(command",{"_index":1076,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["execute(query",{"_index":1561,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["executioncontext",{"_index":3014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exist",{"_index":1389,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["exists",{"_index":1196,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["expired",{"_index":2893,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["expiresat",{"_index":2102,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["expiresin",{"_index":746,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":85,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":720,"title":{},"body":{"modules/AuthModule.html":{}}}],["express",{"_index":645,"title":{},"body":{"controllers/AuthController.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"dependencies.html":{}}}],["extends",{"_index":1460,"title":{},"body":{"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MailRequiredException.html":{},"classes/NoUserTraceException.html":{},"interfaces/RequestUser.html":{},"classes/SamePasswordException.html":{},"entities/StripEventEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"entities/UserEntity.html":{},"classes/UserNotFoundException.html":{},"miscellaneous/variables.html":{}}}],["extra",{"_index":1327,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["extractjwt",{"_index":1898,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["extractjwt.fromextractors",{"_index":1904,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["failed",{"_index":2895,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["false",{"_index":857,"title":{},"body":{"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"entities/GroupEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/UserEntity.html":{}}}],["false})@column({type",{"_index":2112,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["false})@exclude",{"_index":2605,"title":{},"body":{"entities/UserEntity.html":{}}}],["false})@manytoone(undefined",{"_index":2124,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["feature",{"_index":2976,"title":{},"body":{"todo.html":{}}}],["features",{"_index":2755,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":5,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["filename",{"_index":2998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findall",{"_index":2503,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findme",{"_index":2690,"title":{},"body":{"injectables/UserService.html":{}}}],["findme(userid",{"_index":2701,"title":{},"body":{"injectables/UserService.html":{}}}],["findone",{"_index":2504,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":2575,"title":{},"body":{"controllers/UserController.html":{}}}],["findone(id",{"_index":2521,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findoneorfail",{"_index":2325,"title":{},"body":{"classes/SoftDeleteUserCommandHandler.html":{}}}],["findwithcriteria",{"_index":2505,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findwithcriteria(getuserwithcriteriadto",{"_index":2524,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["firstname",{"_index":813,"title":{},"body":{"entities/CardEntity.html":{}}}],["firstvaluefrom",{"_index":1377,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["fix",{"_index":2757,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":2355,"title":{},"body":{"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"todo.html":{}}}],["float",{"_index":2057,"title":{},"body":{"entities/PlanEntity.html":{}}}],["format",{"_index":2986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["found",{"_index":1587,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["found.exception",{"_index":2729,"title":{},"body":{"injectables/UserService.html":{}}}],["found.exception.ts",{"_index":2680,"title":{},"body":{"classes/UserNotFoundException.html":{},"coverage.html":{}}}],["found.exception.ts:3",{"_index":2681,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["france",{"_index":1860,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["function",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"coverage.html":{}}}],["functions",{"_index":2921,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":1220,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["generatecode",{"_index":1136,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["generatecode(length",{"_index":1147,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["generatepassword",{"_index":2691,"title":{},"body":{"injectables/UserService.html":{}}}],["generateuniquereferralcode",{"_index":1137,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["generateuserdto",{"_index":1553,"title":{"classes/GenerateUserDto.html":{}},"body":{"classes/GenerateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["generateuserdto.mail",{"_index":2740,"title":{},"body":{"injectables/UserService.html":{}}}],["generateuserdto.roles",{"_index":2742,"title":{},"body":{"injectables/UserService.html":{}}}],["generateuserfrommail",{"_index":2506,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["generateuserfrommail(@body",{"_index":2567,"title":{},"body":{"controllers/UserController.html":{}}}],["generateuserfrommail(generateuserdto",{"_index":2527,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["get('/')@httpcode(200)@healthcheck()@apiresponse({status",{"_index":1722,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["get('/actual",{"_index":699,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/admin",{"_index":2572,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/admin/')@useguards(undefined",{"_index":2519,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/admin/:id",{"_index":2574,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/admin/:id')@useguards(undefined",{"_index":2522,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/api/test/clear",{"_index":419,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["get('/api/test/get",{"_index":428,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["get('/getall",{"_index":140,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["get('/getall')@apioperation({summary",{"_index":115,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["get('/public/get",{"_index":2532,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/refresh",{"_index":702,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@httpcode(200)@apiresponse({status",{"_index":290,"title":{},"body":{"controllers/AppController.html":{}}}],["get(key",{"_index":3006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getall",{"_index":102,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{}}}],["getallmailquery",{"_index":219,"title":{"classes/GetAllMailQuery.html":{}},"body":{"injectables/ApiLandingPageService.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"coverage.html":{}}}],["getallmailqueryhandler",{"_index":185,"title":{"classes/GetAllMailQueryHandler.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"classes/GetAllMailQueryHandler.html":{},"coverage.html":{}}}],["getallusers",{"_index":488,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["getalluserstest",{"_index":386,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["getcookieforlogout",{"_index":751,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwtrefreshtoken",{"_index":752,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwtrefreshtoken(userid",{"_index":760,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwttoken",{"_index":753,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwttoken(userid",{"_index":763,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcurrentuser",{"_index":698,"title":{},"body":{"controllers/AuthController.html":{}}}],["gethello",{"_index":289,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getme",{"_index":2507,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getme(@req",{"_index":2579,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(requestuser",{"_index":2531,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(userid",{"_index":2707,"title":{},"body":{"injectables/UserService.html":{}}}],["getting",{"_index":2748,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["getuser",{"_index":489,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["getuser(userid",{"_index":519,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["getuserbyemailquery",{"_index":1573,"title":{"classes/GetUserByEmailQuery.html":{}},"body":{"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"coverage.html":{}}}],["getuserbyemailqueryhandler",{"_index":1579,"title":{"classes/GetUserByEmailQueryHandler.html":{}},"body":{"classes/GetUserByEmailQueryHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["getuserbyreferralcode",{"_index":1138,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["getuserbyreferralcode(referralcode",{"_index":1150,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["getuserbyusernamequery",{"_index":1588,"title":{"classes/GetUserByUsernameQuery.html":{}},"body":{"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"coverage.html":{}}}],["getuserbyusernamequeryhandler",{"_index":1593,"title":{"classes/GetUserByUsernameQueryHandler.html":{}},"body":{"classes/GetUserByUsernameQueryHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["getuserfromauthtoken",{"_index":754,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserfromauthtoken(authenticationtoken",{"_index":765,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserifrefreshtokenmatches",{"_index":2692,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserifrefreshtokenmatches(refreshtoken",{"_index":2709,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserifrefreshtokenmatchesquery",{"_index":1597,"title":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{}},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["getuserifrefreshtokenmatchesquery(refreshtoken",{"_index":2731,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserifrefreshtokenmatchesqueryhandler",{"_index":1603,"title":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{}},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["getuserloginquery",{"_index":780,"title":{"classes/GetUserLoginQuery.html":{}},"body":{"injectables/AuthService.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"coverage.html":{}}}],["getuserloginquery(username",{"_index":785,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserloginqueryhandler",{"_index":735,"title":{"classes/GetUserLoginQueryHandler.html":{}},"body":{"modules/AuthModule.html":{},"classes/GetUserLoginQueryHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["getuserquery",{"_index":777,"title":{"classes/GetUserQuery.html":{}},"body":{"injectables/AuthService.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["getuserquery(id",{"_index":2734,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserquery(payload.userid",{"_index":805,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserquery(userid",{"_index":2744,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserqueryhandler",{"_index":1630,"title":{"classes/GetUserQueryHandler.html":{}},"body":{"classes/GetUserQueryHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["getusertest",{"_index":387,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["getusertest(@body",{"_index":430,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["getusertest(userid",{"_index":404,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["getuserwithcriteriadto",{"_index":1641,"title":{"classes/GetUserWithCriteriaDto.html":{}},"body":{"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["getuserwithcriteriaquery",{"_index":1662,"title":{"classes/GetUserWithCriteriaQuery.html":{}},"body":{"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["getuserwithcriteriaquery(getuserwithcriteriadto",{"_index":2743,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserwithcriteriaqueryhandler",{"_index":1669,"title":{"classes/GetUserWithCriteriaQueryHandler.html":{}},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["given",{"_index":1224,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["google",{"_index":2614,"title":{},"body":{"entities/UserEntity.html":{},"todo.html":{}}}],["graph",{"_index":2959,"title":{},"body":{"modules.html":{}}}],["group",{"_index":560,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"coverage.html":{}}}],["group.bannerpicture",{"_index":1981,"title":{},"body":{"entities/MediaEntity.html":{}}}],["group.entity",{"_index":1017,"title":{},"body":{"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{}}}],["group.picture",{"_index":1983,"title":{},"body":{"entities/MediaEntity.html":{}}}],["group_membership",{"_index":562,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/GroupMembershipEntity.html":{}}}],["groupbannerpicture",{"_index":1968,"title":{},"body":{"entities/MediaEntity.html":{}}}],["groupentity",{"_index":453,"title":{"entities/GroupEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"coverage.html":{}}}],["groupentity.conversations",{"_index":1007,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["groupentity.members",{"_index":1711,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["groupmembership",{"_index":852,"title":{},"body":{"entities/CardEntity.html":{},"entities/GroupEntity.html":{}}}],["groupmembership.card",{"_index":853,"title":{},"body":{"entities/CardEntity.html":{}}}],["groupmembership.group",{"_index":1697,"title":{},"body":{"entities/GroupEntity.html":{}}}],["groupmembershipentity",{"_index":455,"title":{"entities/GroupMembershipEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"coverage.html":{}}}],["groupmembershiprepository",{"_index":500,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["groupmemberships",{"_index":814,"title":{},"body":{"entities/CardEntity.html":{}}}],["grouppicture",{"_index":1969,"title":{},"body":{"entities/MediaEntity.html":{}}}],["grouprepository",{"_index":499,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["guards/auth.guard",{"_index":642,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/jwt",{"_index":647,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/role.guard",{"_index":649,"title":{},"body":{"controllers/AuthController.html":{}}}],["handle",{"_index":1263,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["handle(event",{"_index":1266,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["handled",{"_index":2737,"title":{},"body":{"injectables/UserService.html":{}}}],["handler",{"_index":178,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"modules/HealthCheckModule.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"modules/UserModule.html":{}}}],["handler.ts",{"_index":1061,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"coverage.html":{}}}],["handler.ts:10",{"_index":1425,"title":{},"body":{"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["handler.ts:100",{"_index":1148,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:105",{"_index":2408,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:11",{"_index":1072,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["handler.ts:110",{"_index":1149,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:118",{"_index":1151,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:12",{"_index":1074,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["handler.ts:123",{"_index":1156,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:129",{"_index":1154,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:13",{"_index":1073,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["handler.ts:135",{"_index":1160,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:139",{"_index":1162,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:14",{"_index":1070,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{}}}],["handler.ts:143",{"_index":1158,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:15",{"_index":1411,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{}}}],["handler.ts:16",{"_index":1631,"title":{},"body":{"classes/GetUserQueryHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:17",{"_index":1605,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["handler.ts:18",{"_index":1412,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{}}}],["handler.ts:19",{"_index":1144,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:20",{"_index":1481,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:21",{"_index":1747,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["handler.ts:22",{"_index":2443,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["handler.ts:23",{"_index":1077,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:24",{"_index":1145,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:29",{"_index":1146,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:51",{"_index":2444,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["handler.ts:54",{"_index":1618,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{}}}],["handler.ts:55",{"_index":2445,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["handler.ts:6",{"_index":1265,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["handler.ts:71",{"_index":2404,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:77",{"_index":2403,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:8",{"_index":1424,"title":{},"body":{"classes/DeleteUserEventHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{}}}],["handler.ts:83",{"_index":2410,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:87",{"_index":2409,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:9",{"_index":1267,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["handler.ts:92",{"_index":2406,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler/error",{"_index":176,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"coverage.html":{}}}],["handler/register.event",{"_index":740,"title":{},"body":{"modules/AuthModule.html":{},"classes/RegisterEventHandler.html":{},"coverage.html":{}}}],["handlers",{"_index":2677,"title":{},"body":{"modules/UserModule.html":{}}}],["hashedpassword",{"_index":1617,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["headers",{"_index":1024,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["health",{"_index":1292,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["healthcheck",{"_index":1725,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["healthcheckcontroller",{"_index":1719,"title":{"controllers/HealthCheckController.html":{}},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"coverage.html":{}}}],["healthcheckmodule",{"_index":325,"title":{"modules/HealthCheckModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthCheckModule.html":{},"modules.html":{},"overview.html":{}}}],["healthcheckquery",{"_index":1298,"title":{"classes/HealthCheckQuery.html":{}},"body":{"injectables/CustomHealthCheckService.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["healthcheckqueryhandler",{"_index":1737,"title":{"classes/HealthCheckQueryHandler.html":{}},"body":{"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["healthcheckresponse",{"_index":1301,"title":{"classes/HealthCheckResponse.html":{}},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"coverage.html":{}}}],["healthcheckresult",{"_index":1778,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["healthcheckservice",{"_index":1743,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["healthindicatorresult",{"_index":1749,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["heap",{"_index":1757,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["heathcheck",{"_index":1776,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["hello",{"_index":293,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["helloworld",{"_index":307,"title":{},"body":{"controllers/AppController.html":{}}}],["henrie",{"_index":2929,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":2990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":1318,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/ErrorExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":1508,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["http",{"_index":1166,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/MailRequiredException.html":{},"classes/NoUserTraceException.html":{},"classes/RegisterHandler.html":{},"classes/SamePasswordException.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["http/1.1",{"_index":298,"title":{},"body":{"controllers/AppController.html":{}}}],["httpcode",{"_index":119,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/UserController.html":{}}}],["httpcode(200",{"_index":266,"title":{},"body":{"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/UserController.html":{}}}],["httpcode(200)@post('/admin/criteria')@useguards(undefined",{"_index":2525,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(200)@useguards(localauthenticationguard)@post('/login",{"_index":622,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(204",{"_index":424,"title":{},"body":{"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["httpcode(204)@delete('/admin/:id')@useguards(undefined",{"_index":2535,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(204)@delete('/public/delete",{"_index":2516,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(204)@post('/admin/restore",{"_index":2538,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(204)@put('/admin/:id/role')@useguards(undefined",{"_index":2551,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(204)@useguards(jwtrefreshguard)@post('/logout",{"_index":616,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(204)@usepipes(new",{"_index":398,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":146,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["httpexception",{"_index":638,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorExceptionFilter.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/MailRequiredException.html":{},"classes/SamePasswordException.html":{},"classes/UnauthorizedRequestException.html":{},"controllers/UserController.html":{},"classes/UserNotFoundException.html":{}}}],["httpexception('forbidden",{"_index":1870,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["httpexception('mail",{"_index":1388,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["httpexception('unreachable",{"_index":1392,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["httpexception('wrong",{"_index":709,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GetUserLoginQueryHandler.html":{}}}],["httponly",{"_index":793,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus",{"_index":120,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorExceptionFilter.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/MailRequiredException.html":{},"classes/SamePasswordException.html":{},"classes/UnauthorizedRequestException.html":{},"controllers/UserController.html":{},"classes/UserNotFoundException.html":{}}}],["httpstatus.bad_request",{"_index":711,"title":{},"body":{"controllers/AuthController.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/MailRequiredException.html":{},"classes/SamePasswordException.html":{},"classes/UserNotFoundException.html":{}}}],["httpstatus.forbidden",{"_index":1871,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["httpstatus.internal_server_error",{"_index":1513,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["httpstatus.service_unavailable",{"_index":1393,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["httpstatus.unauthorized",{"_index":787,"title":{},"body":{"injectables/AuthService.html":{},"classes/UnauthorizedRequestException.html":{}}}],["icommandhandler",{"_index":1062,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["icon",{"_index":2297,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["id",{"_index":15,"title":{},"body":{"entities/AddressEntity.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/InvalidIdException.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"injectables/JwtStrategy.html":{},"classes/MailLandingPageDto.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["id.dto",{"_index":418,"title":{},"body":{"controllers/AppTestE2eController.html":{},"controllers/UserController.html":{}}}],["id.dto.ts",{"_index":2636,"title":{},"body":{"interfaces/UserIdDto.html":{},"coverage.html":{}}}],["id.exception",{"_index":1415,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{}}}],["id.exception.ts",{"_index":1781,"title":{},"body":{"classes/InvalidIdException.html":{},"coverage.html":{}}}],["id.exception.ts:3",{"_index":1782,"title":{},"body":{"classes/InvalidIdException.html":{}}}],["identifier",{"_index":2780,"title":{},"body":{"coverage.html":{}}}],["ieventhandler",{"_index":1262,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["ignore",{"_index":304,"title":{},"body":{"controllers/AppController.html":{}}}],["implements",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["import",{"_index":69,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailRequiredException.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":165,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{}}}],["in.dto.ts",{"_index":2283,"title":{},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["in.dto.ts:10",{"_index":2285,"title":{},"body":{"classes/SignInDto.html":{}}}],["in.dto.ts:5",{"_index":2286,"title":{},"body":{"classes/SignInDto.html":{}}}],["inactive",{"_index":2900,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":2356,"title":{},"body":{"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["info",{"_index":3,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info.level.touppercase",{"_index":2992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info.timestamp",{"_index":2993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["information.enum",{"_index":906,"title":{},"body":{"entities/CardEntity.html":{}}}],["information.enum.ts",{"_index":2866,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["informations",{"_index":1856,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["init",{"_index":2774,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":1083,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["injectable",{"_index":207,"title":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/AppService.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"injectables/UserService.html":{}},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/AppService.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["injectables",{"_index":208,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/AppService.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":523,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["injectrepository(addressentity",{"_index":546,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(cardentity",{"_index":526,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(companyemployeeentity",{"_index":528,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(companyentity",{"_index":527,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(connectedcardentity",{"_index":529,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(conversationentity",{"_index":530,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(discountcodeentity",{"_index":531,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(groupentity",{"_index":532,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(groupmembershipentity",{"_index":533,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(invoicesentity",{"_index":534,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(joinedconversation",{"_index":535,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(mediaentity",{"_index":536,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(messageentity",{"_index":537,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(notificationentity",{"_index":544,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(occupationentity",{"_index":538,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(planentity",{"_index":539,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(profileentity",{"_index":540,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(referralcodeentity",{"_index":545,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(socialnetworkentity",{"_index":541,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(stripevententity",{"_index":542,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(subscriptionentity",{"_index":543,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(userentity",{"_index":525,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["inserteduser",{"_index":2172,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["installation",{"_index":2945,"title":{},"body":{"index.html":{}}}],["installrun",{"_index":2946,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":1511,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"injectables/UserService.html":{}}}],["int",{"_index":1456,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{}}}],["int'})@isnotempty()@isnumber",{"_index":1438,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["integer",{"_index":868,"title":{},"body":{"entities/CardEntity.html":{}}}],["interceptors",{"_index":2971,"title":{},"body":{"todo.html":{}}}],["interface",{"_index":2210,"title":{"interfaces/RequestUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/UserIdDto.html":{}},"body":{"interfaces/RequestUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/UserIdDto.html":{},"coverage.html":{}}}],["interface/request",{"_index":643,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["interface/token",{"_index":773,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":2211,"title":{},"body":{"interfaces/RequestUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/UserIdDto.html":{},"overview.html":{}}}],["invalid",{"_index":1200,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/RegisterHandler.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["invalid_parameters",{"_index":2873,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_password",{"_index":2872,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalidclassexception",{"_index":2412,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["invalidclassexception('parameter",{"_index":2425,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["invalididexception",{"_index":1414,"title":{"classes/InvalidIdException.html":{}},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/InvalidIdException.html":{},"coverage.html":{}}}],["invalidmailexception",{"_index":1182,"title":{"classes/InvalidMailException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidMailException.html":{},"classes/RegisterHandler.html":{},"coverage.html":{}}}],["invalidparameterentityexception",{"_index":1171,"title":{"classes/InvalidParameterEntityException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/RegisterHandler.html":{},"coverage.html":{}}}],["invalidparameterentityexception(err",{"_index":1209,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["invalidpasswordexception",{"_index":1180,"title":{"classes/InvalidPasswordException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidPasswordException.html":{},"classes/RegisterHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["invalidusernameexception",{"_index":1183,"title":{"classes/InvalidUsernameException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidUsernameException.html":{},"classes/RegisterHandler.html":{},"coverage.html":{}}}],["inversejoincolumn",{"_index":2085,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["invoice.enum.ts",{"_index":2854,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invoice_number",{"_index":1839,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["invoicenumber",{"_index":1814,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["invoices",{"_index":564,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/SubscriptionEntity.html":{}}}],["invoices.entity",{"_index":1468,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["invoicesentity",{"_index":458,"title":{"entities/InvoicesEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/InvoicesEntity.html":{},"entities/SubscriptionEntity.html":{},"coverage.html":{}}}],["invoicesentity.subscription",{"_index":2348,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["invoicesrepository",{"_index":501,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["ip",{"_index":1025,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["iqueryhandler",{"_index":1560,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["is_active",{"_index":54,"title":{},"body":{"entities/AddressEntity.html":{}}}],["is_not_transferable",{"_index":2903,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["is_read",{"_index":2020,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["is_transferable",{"_index":2902,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["isactive",{"_index":16,"title":{},"body":{"entities/AddressEntity.html":{}}}],["isdate",{"_index":1453,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["isdatestring",{"_index":2131,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["isdeleted",{"_index":1648,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["isduplicatedemail",{"_index":1139,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isduplicatedemail(email",{"_index":1153,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isduplicatedusername",{"_index":1140,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isduplicatedusername(username",{"_index":1155,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isduplicateofdeletedmail",{"_index":2401,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["isduplicateofdeletedmail(mail",{"_index":2405,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["isduplicateofdeletedusername",{"_index":2402,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["isduplicateofdeletedusername(username",{"_index":2407,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["isemail",{"_index":908,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateUserDto.html":{},"classes/MailDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{}}}],["isemail()@isnotempty",{"_index":2290,"title":{},"body":{"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{}}}],["isemail()@isnotempty()@apiproperty",{"_index":1946,"title":{},"body":{"classes/MailDto.html":{}}}],["isemailconfirmed",{"_index":2597,"title":{},"body":{"entities/UserEntity.html":{}}}],["isenum(statusinvoiceenum",{"_index":1855,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["isglobal",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":79,"title":{},"body":{"entities/AddressEntity.html":{},"classes/CreateUserDto.html":{},"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{},"classes/MailDto.html":{},"entities/NotificationEntity.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotempty()@minlength(5)@maxlength(20",{"_index":2284,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["isnumber",{"_index":1454,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["isoptional",{"_index":1247,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/ReferralCodeEntity.html":{}}}],["isownerpro",{"_index":815,"title":{},"body":{"entities/CardEntity.html":{}}}],["isread",{"_index":2012,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["isrefreshtokenmatching",{"_index":1609,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{}}}],["isregisteredwithgoogle",{"_index":2598,"title":{},"body":{"entities/UserEntity.html":{}}}],["isstring",{"_index":80,"title":{},"body":{"entities/AddressEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/ReferralCodeEntity.html":{}}}],["istestenvironmentpipe",{"_index":411,"title":{"classes/IsTestEnvironmentPipe.html":{}},"body":{"controllers/AppTestE2eController.html":{},"classes/IsTestEnvironmentPipe.html":{},"coverage.html":{}}}],["istestenvironmentpipe())@delete('/api/test/remove",{"_index":399,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["istestenvironmentpipe())@get('/api/test/clear",{"_index":389,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["istestenvironmentpipe())@get('/api/test/get",{"_index":401,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["istestenvironmentpipe())@post('/api/test/create",{"_index":394,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["isurl",{"_index":909,"title":{},"body":{"entities/CardEntity.html":{}}}],["isvalidemail",{"_index":1141,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isvalidemail(email",{"_index":1157,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isvalidpassword",{"_index":1142,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["isvalidpassword(password",{"_index":1159,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["isvalidusername",{"_index":1143,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isvalidusername(username",{"_index":1161,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["jest",{"_index":2942,"title":{},"body":{"index.html":{}}}],["join",{"_index":1309,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["join(__dirname",{"_index":1329,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["join_new_group",{"_index":2882,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["joincolumn",{"_index":998,"title":{},"body":{"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/ProfileEntity.html":{}}}],["joined",{"_index":1018,"title":{},"body":{"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{}}}],["joined_conversation",{"_index":566,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/JoinedConversation.html":{}}}],["joinedconversation",{"_index":460,"title":{"entities/JoinedConversation.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/JoinedConversation.html":{},"entities/ProfileEntity.html":{},"coverage.html":{}}}],["joinedconversation.conversation",{"_index":1010,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["joinedconversation.profile",{"_index":2079,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["joinedconversationrepository",{"_index":502,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["joinedconversations",{"_index":2067,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["joinedprofiles",{"_index":1000,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["jointable",{"_index":896,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/ProfileEntity.html":{}}}],["json",{"_index":1041,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["json.stringify(info.message",{"_index":2995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt",{"_index":1901,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"todo.html":{}}}],["jwt_access_token_expiration_time",{"_index":3009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtauthenticationguard",{"_index":1885,"title":{"injectables/JwtAuthenticationGuard.html":{}},"body":{"injectables/JwtAuthenticationGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":1903,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":726,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":742,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtrefreshguard",{"_index":646,"title":{"injectables/JwtRefreshGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtrefreshtokenstrategy",{"_index":716,"title":{"injectables/JwtRefreshTokenStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtservice",{"_index":757,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":717,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwttoken",{"_index":2599,"title":{},"body":{"entities/UserEntity.html":{}}}],["key",{"_index":1970,"title":{},"body":{"entities/MediaEntity.html":{},"miscellaneous/variables.html":{}}}],["la",{"_index":1859,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["landing",{"_index":93,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/AppModule.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{}}}],["lastname",{"_index":816,"title":{},"body":{"entities/CardEntity.html":{}}}],["latitude",{"_index":17,"title":{},"body":{"entities/AddressEntity.html":{}}}],["length",{"_index":30,"title":{},"body":{"entities/AddressEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"entities/GroupEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{}}}],["length(5",{"_index":1249,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/GroupEntity.html":{},"classes/UpdateUserDto.html":{}}}],["length(6",{"_index":2134,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["letter",{"_index":1804,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["libraries",{"_index":2935,"title":{},"body":{"index.html":{}}}],["license",{"_index":2954,"title":{"license.html":{}},"body":{"properties.html":{}}}],["line",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["link",{"_index":2013,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["list",{"_index":1386,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["list.response",{"_index":1635,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["list.response.ts",{"_index":2638,"title":{},"body":{"classes/UserListResponse.html":{},"coverage.html":{}}}],["list.response.ts:4",{"_index":2641,"title":{},"body":{"classes/UserListResponse.html":{}}}],["listrolesdto",{"_index":1914,"title":{"classes/ListRolesDto.html":{}},"body":{"classes/ListRolesDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["literal",{"_index":762,"title":{},"body":{"injectables/AuthService.html":{}}}],["local",{"_index":1928,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":724,"title":{},"body":{"modules/AuthModule.html":{}}}],["local.strategy.ts",{"_index":1922,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["local.strategy.ts:15",{"_index":1927,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["local.strategy.ts:8",{"_index":1924,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["localauthenticationguard",{"_index":641,"title":{"injectables/LocalAuthenticationGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthenticationGuard.html":{},"coverage.html":{}}}],["localisation",{"_index":1193,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["localstrategy",{"_index":718,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["log",{"_index":241,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/CreateLogCommandHandler.html":{},"modules/UserModule.html":{},"changelog.html":{}}}],["log.command",{"_index":190,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateLogCommandHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["log.command.ts",{"_index":1022,"title":{},"body":{"classes/CreateLogCommand.html":{},"coverage.html":{}}}],["log.command.ts:11",{"_index":1035,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:14",{"_index":1049,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:17",{"_index":1039,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:20",{"_index":1038,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:23",{"_index":1050,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:26",{"_index":1055,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:29",{"_index":1045,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:32",{"_index":1042,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:35",{"_index":1057,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:38",{"_index":1054,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:41",{"_index":1053,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:44",{"_index":1044,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:47",{"_index":1051,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:5",{"_index":1033,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:50",{"_index":1052,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:53",{"_index":1056,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:56",{"_index":1047,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.dto",{"_index":246,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["log.dto.ts",{"_index":1100,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"coverage.html":{}}}],["log.dto.ts:1",{"_index":1121,"title":{},"body":{"classes/CreateMethodLogDto.html":{}}}],["log.dto.ts:11",{"_index":1102,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:14",{"_index":1109,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:17",{"_index":1104,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:20",{"_index":1103,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:23",{"_index":1110,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:26",{"_index":1116,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:29",{"_index":1107,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:32",{"_index":1105,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:35",{"_index":1111,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:38",{"_index":1118,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:41",{"_index":1115,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:44",{"_index":1114,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:47",{"_index":1106,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:5",{"_index":1101,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{}}}],["log.dto.ts:50",{"_index":1112,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:53",{"_index":1113,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:56",{"_index":1117,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:59",{"_index":1108,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:6",{"_index":1123,"title":{},"body":{"classes/CreateMethodLogDto.html":{}}}],["log.dto.ts:7",{"_index":1122,"title":{},"body":{"classes/CreateMethodLogDto.html":{}}}],["log.enum",{"_index":1082,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["log.enum.ts",{"_index":2856,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log.method",{"_index":251,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log.module",{"_index":172,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["log.module.ts",{"_index":232,"title":{},"body":{"modules/ApiLogModule.html":{}}}],["log.service",{"_index":191,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{}}}],["log.service.ts",{"_index":234,"title":{},"body":{"injectables/ApiLogService.html":{},"coverage.html":{}}}],["log.service.ts:10",{"_index":240,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log.service.ts:18",{"_index":244,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log.service.ts:8",{"_index":237,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log/api",{"_index":171,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["log/cqrs/command/create",{"_index":1021,"title":{},"body":{"classes/CreateLogCommand.html":{},"coverage.html":{}}}],["log/cqrs/handler/command/create",{"_index":189,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateLogCommandHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["log/domain/dto/create",{"_index":1099,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"coverage.html":{}}}],["log/domain/enum/api",{"_index":1483,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["log/domain/enum/logging",{"_index":1482,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{},"coverage.html":{}}}],["log/domain/enum/status",{"_index":2897,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log/domain/enum/verbose",{"_index":1527,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["logged",{"_index":1942,"title":{},"body":{"classes/LoginOfUserEventHandler.html":{}}}],["logger",{"_index":1310,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/RegisterEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger('registereventhandler",{"_index":2144,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["logger.config",{"_index":1312,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/RegisterEventHandler.html":{}}}],["logger.config.ts",{"_index":2803,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger.error('an",{"_index":1363,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["logger.error('node_env",{"_index":1362,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["logger.info('new",{"_index":2148,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["logger.info('node_env",{"_index":1316,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["logger_console",{"_index":2143,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["logging",{"_index":1333,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["logging.middleware",{"_index":349,"title":{},"body":{"modules/AppModule.html":{}}}],["logging.middleware.ts",{"_index":1519,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"coverage.html":{}}}],["logging.middleware.ts:10",{"_index":2215,"title":{},"body":{"injectables/ResponseLoggingMiddleware.html":{}}}],["logging.middleware.ts:11",{"_index":1521,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{}}}],["logging.middleware.ts:12",{"_index":2199,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["logging.middleware.ts:16",{"_index":1524,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{}}}],["logging.middleware.ts:17",{"_index":2216,"title":{},"body":{"injectables/ResponseLoggingMiddleware.html":{}}}],["logging.middleware.ts:18",{"_index":2200,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["loggingtype",{"_index":1026,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["loggingtypeenum",{"_index":1048,"title":{"classes/LoggingTypeEnum.html":{}},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{},"coverage.html":{}}}],["loggingtypeenum.error",{"_index":1489,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{}}}],["loggingtypeenum.request",{"_index":2206,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["login",{"_index":755,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/UserLoginDto.html":{},"changelog.html":{}}}],["login(username",{"_index":768,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.dto.ts",{"_index":2644,"title":{},"body":{"classes/UserLoginDto.html":{},"coverage.html":{}}}],["login.dto.ts:10",{"_index":2647,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["login.dto.ts:12",{"_index":2648,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["login.dto.ts:3",{"_index":2646,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["login.query",{"_index":737,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/GetUserLoginQueryHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["login.query.ts",{"_index":1612,"title":{},"body":{"classes/GetUserLoginQuery.html":{},"coverage.html":{}}}],["login.query.ts:1",{"_index":1613,"title":{},"body":{"classes/GetUserLoginQuery.html":{}}}],["login.query.ts:2",{"_index":1614,"title":{},"body":{"classes/GetUserLoginQuery.html":{}}}],["login.response",{"_index":653,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login.response.ts",{"_index":2651,"title":{},"body":{"classes/UserLoginResponse.html":{},"coverage.html":{}}}],["login.response.ts:11",{"_index":2655,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:12",{"_index":2660,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:13",{"_index":2654,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:14",{"_index":2653,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:15",{"_index":2659,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:16",{"_index":2658,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:17",{"_index":2657,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:18",{"_index":2656,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:4",{"_index":2652,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["loginofuserevent",{"_index":1619,"title":{"classes/LoginOfUserEvent.html":{}},"body":{"classes/GetUserLoginQueryHandler.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"coverage.html":{}}}],["loginofuserevent(userusername.id",{"_index":1625,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{}}}],["loginofusereventhandler",{"_index":1938,"title":{"classes/LoginOfUserEventHandler.html":{}},"body":{"classes/LoginOfUserEventHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["logout",{"_index":605,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(@req",{"_index":693,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(request",{"_index":615,"title":{},"body":{"controllers/AuthController.html":{}}}],["logs",{"_index":3001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["longitude",{"_index":18,"title":{},"body":{"entities/AddressEntity.html":{}}}],["lowercase",{"_index":1805,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["lucas",{"_index":2931,"title":{},"body":{"index.html":{}}}],["mail",{"_index":112,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"controllers/ApiMailController.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/GenerateUserDto.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"todo.html":{}}}],["mail')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":105,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["mail')@useguards(undefined",{"_index":2529,"title":{},"body":{"controllers/UserController.html":{}}}],["mail'})@apiokresponse({type",{"_index":107,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["mail.command",{"_index":181,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/SendMailCommandHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["mail.command.ts",{"_index":1369,"title":{},"body":{"classes/DeleteMailCommand.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"coverage.html":{}}}],["mail.command.ts:1",{"_index":1370,"title":{},"body":{"classes/DeleteMailCommand.html":{},"classes/SendMailCommand.html":{}}}],["mail.command.ts:10",{"_index":2248,"title":{},"body":{"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{}}}],["mail.command.ts:6",{"_index":1371,"title":{},"body":{"classes/DeleteMailCommand.html":{},"classes/SendMailCommand.html":{}}}],["mail.command.ts:8",{"_index":2249,"title":{},"body":{"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{}}}],["mail.controller",{"_index":278,"title":{},"body":{"modules/ApiMailModule.html":{}}}],["mail.controller.ts",{"_index":255,"title":{},"body":{"controllers/ApiMailController.html":{},"coverage.html":{}}}],["mail.controller.ts:16",{"_index":260,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["mail.event",{"_index":184,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"coverage.html":{}}}],["mail.event.ts",{"_index":1396,"title":{},"body":{"classes/DeleteMailEvent.html":{},"classes/SendMailEvent.html":{},"coverage.html":{}}}],["mail.event.ts:1",{"_index":2258,"title":{},"body":{"classes/SendMailEvent.html":{}}}],["mail.event.ts:11",{"_index":2262,"title":{},"body":{"classes/SendMailEvent.html":{}}}],["mail.event.ts:13",{"_index":2260,"title":{},"body":{"classes/SendMailEvent.html":{}}}],["mail.event.ts:3",{"_index":1399,"title":{},"body":{"classes/DeleteMailEvent.html":{}}}],["mail.event.ts:5",{"_index":1400,"title":{},"body":{"classes/DeleteMailEvent.html":{}}}],["mail.event.ts:6",{"_index":1402,"title":{},"body":{"classes/DeleteMailEvent.html":{},"classes/SendMailEvent.html":{}}}],["mail.event.ts:7",{"_index":1401,"title":{},"body":{"classes/DeleteMailEvent.html":{},"classes/SendMailEvent.html":{}}}],["mail.event.ts:9",{"_index":2259,"title":{},"body":{"classes/SendMailEvent.html":{}}}],["mail.exception",{"_index":1170,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["mail.exception.ts",{"_index":1459,"title":{},"body":{"classes/DuplicateMailException.html":{},"classes/InvalidMailException.html":{},"coverage.html":{}}}],["mail.exception.ts:3",{"_index":1461,"title":{},"body":{"classes/DuplicateMailException.html":{},"classes/InvalidMailException.html":{}}}],["mail.module",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["mail.module.ts",{"_index":273,"title":{},"body":{"modules/ApiMailModule.html":{}}}],["mail.query",{"_index":187,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"classes/GetAllMailQueryHandler.html":{},"coverage.html":{}}}],["mail.query.ts",{"_index":1558,"title":{},"body":{"classes/GetAllMailQuery.html":{},"coverage.html":{}}}],["mail.service",{"_index":263,"title":{},"body":{"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{}}}],["mail.service.ts",{"_index":282,"title":{},"body":{"injectables/ApiMailService.html":{},"coverage.html":{}}}],["mail.service.ts:10",{"_index":284,"title":{},"body":{"injectables/ApiMailService.html":{}}}],["mail.service.ts:7",{"_index":283,"title":{},"body":{"injectables/ApiMailService.html":{}}}],["mail/api",{"_index":254,"title":{},"body":{"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["mail/cqrs/command/send",{"_index":2247,"title":{},"body":{"classes/SendMailCommand.html":{},"coverage.html":{}}}],["mail/cqrs/event/send",{"_index":2257,"title":{},"body":{"classes/SendMailEvent.html":{},"coverage.html":{}}}],["mail/cqrs/handler/command/send",{"_index":2250,"title":{},"body":{"classes/SendMailCommandHandler.html":{},"coverage.html":{}}}],["mail/cqrs/handler/event/send",{"_index":2263,"title":{},"body":{"classes/SendMailEventHandler.html":{},"coverage.html":{}}}],["mail/domain/dto/mail.dto.ts",{"_index":1943,"title":{},"body":{"classes/MailDto.html":{},"coverage.html":{}}}],["mail/domain/dto/mail.dto.ts:12",{"_index":1947,"title":{},"body":{"classes/MailDto.html":{}}}],["mail/domain/dto/mail.dto.ts:15",{"_index":1949,"title":{},"body":{"classes/MailDto.html":{}}}],["mail/domain/dto/mail.dto.ts:18",{"_index":1948,"title":{},"body":{"classes/MailDto.html":{}}}],["mail/domain/dto/mail.dto.ts:4",{"_index":1945,"title":{},"body":{"classes/MailDto.html":{}}}],["mail_api",{"_index":2868,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["maildto",{"_index":258,"title":{"classes/MailDto.html":{}},"body":{"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"classes/MailDto.html":{},"coverage.html":{}}}],["maillandingpagedto",{"_index":221,"title":{"classes/MailLandingPageDto.html":{}},"body":{"injectables/ApiLandingPageService.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/MailLandingPageDto.html":{},"coverage.html":{}}}],["mailrequiredexception",{"_index":1955,"title":{"classes/MailRequiredException.html":{}},"body":{"classes/MailRequiredException.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["mailresponse",{"_index":129,"title":{"classes/MailResponse.html":{}},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"classes/MailResponse.html":{},"coverage.html":{}}}],["mails",{"_index":142,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["mails'})@apiokresponse({type",{"_index":116,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["mailslandingpagelist",{"_index":1572,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["manytomany",{"_index":897,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["manytomany(undefined",{"_index":872,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["manytoone",{"_index":73,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["manytoone(undefined",{"_index":35,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["match",{"_index":1586,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{}}}],["matches.query",{"_index":1604,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["matches.query.ts",{"_index":1598,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"coverage.html":{}}}],["matches.query.ts:1",{"_index":1601,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{}}}],["matches.query.ts:2",{"_index":1602,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{}}}],["matching",{"_index":88,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.random().tostring().split('.')[1",{"_index":2432,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["math.random().tostring(10).split('.')[1",{"_index":2747,"title":{},"body":{"injectables/UserService.html":{}}}],["max",{"_index":795,"title":{},"body":{"injectables/AuthService.html":{}}}],["maxfiles",{"_index":3004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxlength",{"_index":910,"title":{},"body":{"entities/CardEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["maxlength(20",{"_index":2288,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["maxlength(255",{"_index":919,"title":{},"body":{"entities/CardEntity.html":{}}}],["maxsize",{"_index":3002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["me')@useguards(undefined",{"_index":2517,"title":{},"body":{"controllers/UserController.html":{}}}],["media",{"_index":568,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{}}}],["media.cardpicture",{"_index":861,"title":{},"body":{"entities/CardEntity.html":{}}}],["media.entity",{"_index":914,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{}}}],["media.groupbannerpicture",{"_index":1689,"title":{},"body":{"entities/GroupEntity.html":{}}}],["media.grouppicture",{"_index":1702,"title":{},"body":{"entities/GroupEntity.html":{}}}],["media.profileentitybanner",{"_index":960,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["media.profileentityprofilepicture",{"_index":977,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["mediaentity",{"_index":463,"title":{"entities/MediaEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{},"coverage.html":{}}}],["mediarepository",{"_index":503,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["member",{"_index":2238,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["memberof",{"_index":2309,"title":{},"body":{"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{}}}],["members",{"_index":1687,"title":{},"body":{"entities/GroupEntity.html":{}}}],["membership.entity",{"_index":457,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{}}}],["membership.entity.ts",{"_index":1706,"title":{},"body":{"entities/GroupMembershipEntity.html":{},"coverage.html":{}}}],["membership.entity.ts:17",{"_index":1713,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:23",{"_index":1715,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:32",{"_index":1708,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:37",{"_index":1712,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:44",{"_index":1709,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:47",{"_index":1716,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:50",{"_index":1710,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.enum",{"_index":1717,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.enum.ts",{"_index":2236,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{},"coverage.html":{}}}],["membership.enum.ts:2",{"_index":2240,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["membership.enum.ts:3",{"_index":2239,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["membership.enum.ts:4",{"_index":2241,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["memory",{"_index":1755,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["memoryhealthindicator",{"_index":1745,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["message",{"_index":570,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"classes/InvalidParameterEntityException.html":{},"classes/MailDto.html":{},"entities/MessageEntity.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"controllers/UserController.html":{}}}],["message.author",{"_index":863,"title":{},"body":{"entities/CardEntity.html":{}}}],["message.conversation",{"_index":1012,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["message.entity",{"_index":915,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["messageentity",{"_index":465,"title":{"entities/MessageEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/MessageEntity.html":{},"coverage.html":{}}}],["messagepatern",{"_index":705,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagepattern",{"_index":650,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagepattern({cmd",{"_index":629,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagerepository",{"_index":504,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["messages",{"_index":817,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{}}}],["metadata",{"_index":1867,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{},"dependencies.html":{}}}],["method",{"_index":249,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"coverage.html":{}}}],["methods",{"_index":99,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["middleware/error",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["middleware/request",{"_index":348,"title":{},"body":{"modules/AppModule.html":{}}}],["middleware/response",{"_index":351,"title":{},"body":{"modules/AppModule.html":{}}}],["middlewareconsumer",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["migrations",{"_index":2974,"title":{},"body":{"todo.html":{}}}],["minlength",{"_index":2106,"title":{},"body":{"entities/ReferralCodeEntity.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["minlength(5",{"_index":2287,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["miscellaneous",{"_index":2842,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":680,"title":{},"body":{"controllers/AuthController.html":{}}}],["mixin(roleguardmixin",{"_index":3019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mockedconfigservice",{"_index":2805,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockedjwtservice",{"_index":2807,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":149,"title":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"modules/EntitiesToMoveModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"modules/HealthCheckModule.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{},"changelog.html":{}}}],["module:entities",{"_index":2310,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["modules",{"_index":151,"title":{"modules.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1753,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["move.module",{"_index":344,"title":{},"body":{"modules/AppModule.html":{}}}],["move.module.ts",{"_index":1466,"title":{},"body":{"modules/EntitiesToMoveModule.html":{}}}],["name",{"_index":83,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["nestjs",{"_index":2775,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["nestjs/common",{"_index":122,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailRequiredException.html":{},"classes/RegisterEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommandHandler.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":2813,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core/errors/exceptions",{"_index":2008,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["nestjs/core/errors/exceptions/invalid",{"_index":2413,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["nestjs/cqrs",{"_index":170,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":727,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":168,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":722,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2817,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":128,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserDto.html":{},"controllers/HealthCheckController.html":{},"classes/MailDto.html":{},"entities/ReferralCodeEntity.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":1726,"title":{},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":280,"title":{},"body":{"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"modules/AuthModule.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommandHandler.html":{},"modules/EntitiesToMoveModule.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":1525,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["nestmodule",{"_index":333,"title":{},"body":{"modules/AppModule.html":{}}}],["network",{"_index":2296,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity",{"_index":475,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{}}}],["network.entity.ts",{"_index":2294,"title":{},"body":{"entities/SocialNetworkEntity.html":{},"coverage.html":{}}}],["network.entity.ts:34",{"_index":2304,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:37",{"_index":2305,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:40",{"_index":2307,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:43",{"_index":2303,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:50",{"_index":2300,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:57",{"_index":2301,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:60",{"_index":2306,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:63",{"_index":2302,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["never",{"_index":1866,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["new",{"_index":227,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new_call",{"_index":2884,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_group_message",{"_index":2883,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_message",{"_index":2881,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newpassword",{"_index":2460,"title":{},"body":{"classes/UpdateUserCredentialDto.html":{}}}],["newuser",{"_index":1203,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["next",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["nextfunction",{"_index":1523,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{}}}],["no_user_trace",{"_index":2874,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nobody",{"_index":2915,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nodejs",{"_index":2936,"title":{},"body":{"index.html":{}}}],["nodemon",{"_index":2941,"title":{},"body":{"index.html":{}}}],["none",{"_index":2912,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["not_diffusible",{"_index":2918,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notes",{"_index":818,"title":{},"body":{"entities/CardEntity.html":{}}}],["notification",{"_index":584,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/ConversationEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{},"changelog.html":{}}}],["notification.conversation",{"_index":1014,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["notification.entity",{"_index":1019,"title":{},"body":{"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{}}}],["notification.profile",{"_index":2081,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["notification.user",{"_index":2618,"title":{},"body":{"entities/UserEntity.html":{}}}],["notificationentity",{"_index":481,"title":{"entities/NotificationEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["notificationrepository",{"_index":511,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["notifications",{"_index":1001,"title":{},"body":{"entities/ConversationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["notificationtypeenum",{"_index":2026,"title":{},"body":{"entities/NotificationEntity.html":{},"miscellaneous/enumerations.html":{}}}],["notificationtypeenum.info",{"_index":2032,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["nousertraceexception",{"_index":2003,"title":{"classes/NoUserTraceException.html":{}},"body":{"classes/NoUserTraceException.html":{},"coverage.html":{}}}],["npm",{"_index":2937,"title":{},"body":{"index.html":{}}}],["null",{"_index":840,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"todo.html":{}}}],["null'})@joincolumn",{"_index":1690,"title":{},"body":{"entities/GroupEntity.html":{}}}],["null'})@jointable",{"_index":874,"title":{},"body":{"entities/CardEntity.html":{}}}],["null'})@jointable({name",{"_index":2084,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["nullable",{"_index":37,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"entities/GroupEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["number",{"_index":866,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommandHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{},"classes/RegisterHandler.html":{}}}],["number(process.env.port_api_log",{"_index":199,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{}}}],["number(process.env.port_api_mail",{"_index":202,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{}}}],["number(process.env.port_api_waiting_list",{"_index":205,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/AuthModule.html":{}}}],["numberofshares",{"_index":819,"title":{},"body":{"entities/CardEntity.html":{}}}],["object",{"_index":679,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"miscellaneous/variables.html":{}}}],["object(log.body",{"_index":252,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["object.assign(partial",{"_index":1963,"title":{},"body":{"classes/MailResponse.html":{}}}],["object.assign(this",{"_index":943,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteUserCommand.html":{},"classes/ErrorCustomEvent.html":{},"classes/GenerateUserDto.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/ListRolesDto.html":{},"classes/MailDto.html":{},"classes/RestoreUserCommand.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserRoleCommand.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["object.keys(constraints).map(key",{"_index":1796,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["occupation",{"_index":572,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ProfileEntity.html":{}}}],["occupation.cards",{"_index":873,"title":{},"body":{"entities/CardEntity.html":{}}}],["occupation.entity",{"_index":911,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{}}}],["occupation.profiles",{"_index":2083,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["occupation_id",{"_index":2101,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["occupationentity",{"_index":467,"title":{"entities/OccupationEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"coverage.html":{}}}],["occupationentity.companies",{"_index":984,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["occupationentity.companies)@jointable",{"_index":972,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["occupationrepository",{"_index":505,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["occupations",{"_index":820,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["occurred",{"_index":1364,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["ok",{"_index":299,"title":{},"body":{"controllers/AppController.html":{}}}],["old",{"_index":2246,"title":{},"body":{"classes/SamePasswordException.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"injectables/UserService.html":{}}}],["ondelete",{"_index":39,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{}}}],["one",{"_index":1802,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["onetomany",{"_index":898,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["onetomany(undefined",{"_index":836,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["onetoone",{"_index":899,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{}}}],["onetoone(undefined",{"_index":860,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{}}}],["only_by_company_admin",{"_index":2920,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["only_by_company_members",{"_index":2919,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["only_connected_users",{"_index":2914,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["only_me",{"_index":2916,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["onupdate",{"_index":2378,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["optional",{"_index":111,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/ProfileEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["options",{"_index":197,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["organisation",{"_index":2933,"title":{},"body":{"index.html":{}}}],["os",{"_index":1027,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["out",{"_index":162,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":2960,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":821,"title":{},"body":{"entities/CardEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"miscellaneous/enumerations.html":{}}}],["ownercompanies",{"_index":2068,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["ownerprofile",{"_index":951,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["package",{"_index":2810,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packages",{"_index":2773,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":98,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"changelog.html":{}}}],["page.controller",{"_index":173,"title":{},"body":{"modules/ApiLandingPageModule.html":{}}}],["page.controller.ts",{"_index":95,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"coverage.html":{}}}],["page.controller.ts:17",{"_index":117,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["page.controller.ts:26",{"_index":109,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["page.dto",{"_index":223,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["page.dto.ts",{"_index":1951,"title":{},"body":{"classes/MailLandingPageDto.html":{},"coverage.html":{}}}],["page.dto.ts:1",{"_index":1953,"title":{},"body":{"classes/MailLandingPageDto.html":{}}}],["page.dto.ts:2",{"_index":1954,"title":{},"body":{"classes/MailLandingPageDto.html":{}}}],["page.module",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["page.module.ts",{"_index":163,"title":{},"body":{"modules/ApiLandingPageModule.html":{}}}],["page.service",{"_index":124,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{}}}],["page.service.ts",{"_index":209,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"coverage.html":{}}}],["page.service.ts:12",{"_index":215,"title":{},"body":{"injectables/ApiLandingPageService.html":{}}}],["page.service.ts:20",{"_index":216,"title":{},"body":{"injectables/ApiLandingPageService.html":{}}}],["page.service.ts:9",{"_index":214,"title":{},"body":{"injectables/ApiLandingPageService.html":{}}}],["page/api",{"_index":94,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["page/cqrs/command/delete",{"_index":1368,"title":{},"body":{"classes/DeleteMailCommand.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["page/cqrs/event/delete",{"_index":1395,"title":{},"body":{"classes/DeleteMailEvent.html":{},"coverage.html":{}}}],["page/cqrs/handler/command/delete",{"_index":1372,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"coverage.html":{}}}],["page/cqrs/handler/event/delete",{"_index":1403,"title":{},"body":{"classes/DeleteMailEventHandler.html":{},"coverage.html":{}}}],["page/cqrs/handler/query/get",{"_index":1559,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"coverage.html":{}}}],["page/cqrs/query/get",{"_index":1557,"title":{},"body":{"classes/GetAllMailQuery.html":{},"coverage.html":{}}}],["page/domain/dto/mail",{"_index":1950,"title":{},"body":{"classes/MailLandingPageDto.html":{},"coverage.html":{}}}],["page/domain/response/mail.response.ts",{"_index":1960,"title":{},"body":{"classes/MailResponse.html":{},"coverage.html":{}}}],["page/domain/response/mail.response.ts:1",{"_index":1961,"title":{},"body":{"classes/MailResponse.html":{}}}],["page/domain/response/mail.response.ts:6",{"_index":1962,"title":{},"body":{"classes/MailResponse.html":{}}}],["param",{"_index":2553,"title":{},"body":{"controllers/UserController.html":{}}}],["param('id",{"_index":2582,"title":{},"body":{"controllers/UserController.html":{}}}],["parameter",{"_index":1173,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/NoUserTraceException.html":{},"classes/RegisterHandler.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["parameters",{"_index":110,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["parseint(process.env.typeorm_port_dev",{"_index":1356,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["parseint(process.env.typeorm_port_pprod",{"_index":1338,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["parseint(process.env.typeorm_port_prod",{"_index":1321,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["parseint(process.env.typeorm_port_test",{"_index":1347,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["partial",{"_index":942,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteUserCommand.html":{},"classes/ErrorCustomEvent.html":{},"classes/GenerateUserDto.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/ListRolesDto.html":{},"classes/MailDto.html":{},"classes/MailResponse.html":{},"classes/RestoreUserCommand.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserRoleCommand.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["passport",{"_index":1900,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":721,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1897,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1902,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passreqtocallback",{"_index":1908,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["password",{"_index":592,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfiguration.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/InvalidPasswordException.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/SamePasswordException.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["password')@useguards(undefined",{"_index":2548,"title":{},"body":{"controllers/UserController.html":{}}}],["password.exception",{"_index":1181,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"injectables/UserService.html":{}}}],["password.exception.ts",{"_index":1798,"title":{},"body":{"classes/InvalidPasswordException.html":{},"classes/SamePasswordException.html":{},"coverage.html":{}}}],["password.exception.ts:3",{"_index":1799,"title":{},"body":{"classes/InvalidPasswordException.html":{},"classes/SamePasswordException.html":{}}}],["passwordfield",{"_index":1930,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["path",{"_index":794,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/ErrorExceptionFilter.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["payload",{"_index":788,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["payload.interface",{"_index":774,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["payload.interface.ts",{"_index":2389,"title":{},"body":{"interfaces/TokenPayload.html":{},"coverage.html":{}}}],["payload.userid",{"_index":804,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["paymententity",{"_index":2336,"title":{},"body":{"entities/StripEventEntity.html":{}}}],["pending",{"_index":2890,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["personalcards",{"_index":2069,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["pg",{"_index":2831,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":952,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["phones",{"_index":822,"title":{},"body":{"entities/CardEntity.html":{}}}],["picture",{"_index":1688,"title":{},"body":{"entities/GroupEntity.html":{}}}],["pipe",{"_index":1569,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["pipetransform",{"_index":1863,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["plaintextpassword",{"_index":769,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["plan",{"_index":574,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/PlanEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["plan.entity",{"_index":1469,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["planentity",{"_index":469,"title":{"entities/PlanEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/PlanEntity.html":{},"entities/SubscriptionEntity.html":{},"coverage.html":{}}}],["planentity.subscriptions",{"_index":2350,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["planrepository",{"_index":506,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["platform",{"_index":1028,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["port",{"_index":198,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/DatabaseConfiguration.html":{},"modules/UserModule.html":{}}}],["post",{"_index":261,"title":{},"body":{"controllers/ApiMailController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["post('/')@httpcode(200)@useguards(undefined",{"_index":259,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["post('/admin/create",{"_index":2563,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/admin/create')@useguards(undefined",{"_index":2513,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/admin/criteria",{"_index":2577,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/admin/generate",{"_index":2528,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/admin/restore",{"_index":2569,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/api/test/create",{"_index":421,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["post('/login",{"_index":669,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/logout",{"_index":692,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register",{"_index":658,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register')@useguards(undefined",{"_index":626,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":1317,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["postgreserrorcode",{"_index":2848,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["postgresql",{"_index":2938,"title":{},"body":{"index.html":{}}}],["pour",{"_index":1858,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["pprod",{"_index":1335,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["prefix",{"_index":96,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/UserController.html":{}}}],["prettier",{"_index":2944,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":2611,"title":{},"body":{"entities/UserEntity.html":{}}}],["price",{"_index":2052,"title":{},"body":{"entities/PlanEntity.html":{}}}],["primarygeneratedcolumn",{"_index":74,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":51,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["private",{"_index":224,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiMailService.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"injectables/UserService.html":{}}}],["process",{"_index":741,"title":{},"body":{"modules/AuthModule.html":{},"classes/CreateLogCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/UserService.html":{}}}],["process.env.api_name",{"_index":1090,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["process.env.api_version",{"_index":1092,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["process.env.jwt_access_token_expiration_time",{"_index":791,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.jwt_access_token_secret",{"_index":790,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.jwt_expiration_time",{"_index":747,"title":{},"body":{"modules/AuthModule.html":{}}}],["process.env.jwt_refresh_token_expiration_time",{"_index":798,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.jwt_refresh_token_secret",{"_index":797,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["process.env.jwt_secret",{"_index":744,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["process.env.node_env",{"_index":1314,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["process.env.typeorm_database_dev",{"_index":1359,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_database_pprod",{"_index":1341,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_database_prod",{"_index":1325,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_database_test",{"_index":1350,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_dev",{"_index":1354,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_pprod",{"_index":1336,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_prod",{"_index":1319,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_test",{"_index":1345,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_dev",{"_index":1360,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_pprod",{"_index":1344,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_prod",{"_index":1334,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_test",{"_index":1352,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_dev",{"_index":1358,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_pprod",{"_index":1340,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_prod",{"_index":1324,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_test",{"_index":1349,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_dev",{"_index":1355,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_pprod",{"_index":1337,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_prod",{"_index":1320,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_test",{"_index":1346,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_dev",{"_index":1361,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_pprod",{"_index":1343,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_prod",{"_index":1332,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_test",{"_index":1351,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_dev",{"_index":1357,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_pprod",{"_index":1339,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_prod",{"_index":1323,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_test",{"_index":1348,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.verbose",{"_index":1528,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["process.env.verbose_error",{"_index":1485,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["process.env.verbose_log",{"_index":1087,"title":{},"body":{"classes/CreateLogCommandHandler.html":{}}}],["prod",{"_index":1315,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["profile",{"_index":576,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/JoinedConversation.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["profile.companies",{"_index":933,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["profile.entity",{"_index":900,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{}}}],["profile.personalcards",{"_index":876,"title":{},"body":{"entities/CardEntity.html":{}}}],["profile.savedcard",{"_index":879,"title":{},"body":{"entities/CardEntity.html":{}}}],["profile.user",{"_index":2621,"title":{},"body":{"entities/UserEntity.html":{}}}],["profile_id",{"_index":2099,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["profileentity",{"_index":471,"title":{"entities/ProfileEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["profileentity.bannerpicture",{"_index":1987,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profileentity.joinedconversations",{"_index":1883,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["profileentity.joinedconversations)@joincolumn",{"_index":1879,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["profileentity.notifications",{"_index":2023,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["profileentity.occupations",{"_index":2045,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["profileentity.ownercompanies",{"_index":974,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["profileentity.profilepicture",{"_index":1989,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profileentitybanner",{"_index":1971,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profileentityprofilepicture",{"_index":1972,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profilepicture",{"_index":953,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["profilerepository",{"_index":507,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["profiles",{"_index":2036,"title":{},"body":{"entities/OccupationEntity.html":{},"entities/UserEntity.html":{}}}],["profileswhosavedcard",{"_index":823,"title":{},"body":{"entities/CardEntity.html":{}}}],["project",{"_index":2776,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promise",{"_index":114,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/HealthCheckResponse.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"classes/ListRolesDto.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleEvent.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"properties.html":{}}}],["property",{"_index":2311,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["provided",{"_index":710,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/NoUserTraceException.html":{}}}],["providers",{"_index":164,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{}}}],["pt",{"_index":2746,"title":{},"body":{"injectables/UserService.html":{}}}],["public",{"_index":750,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/ErrorCustomEvent.html":{},"classes/GenerateUserDto.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/HealthCheckResponse.html":{},"classes/ListRolesDto.html":{},"classes/LoginOfUserEvent.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleEvent.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"miscellaneous/enumerations.html":{}}}],["put",{"_index":2554,"title":{},"body":{"controllers/UserController.html":{}}}],["put('/admin/:id",{"_index":2581,"title":{},"body":{"controllers/UserController.html":{}}}],["put('/admin/:id')@useguards(undefined",{"_index":2542,"title":{},"body":{"controllers/UserController.html":{}}}],["put('/admin/:id/role",{"_index":2584,"title":{},"body":{"controllers/UserController.html":{}}}],["put('/public/update",{"_index":2545,"title":{},"body":{"controllers/UserController.html":{}}}],["query",{"_index":1562,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"modules/UserModule.html":{}}}],["query.email",{"_index":1584,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{}}}],["query.getuserwithcriteriadto.createdfrom",{"_index":1676,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.createdto",{"_index":1678,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.deletedfrom",{"_index":1682,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.deletedto",{"_index":1683,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.isdeleted",{"_index":1674,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.updatedfrom",{"_index":1679,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.updatedto",{"_index":1680,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.userid",{"_index":1608,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserQueryHandler.html":{}}}],["query.username",{"_index":1596,"title":{},"body":{"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{}}}],["query/get",{"_index":1564,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query/health",{"_index":1748,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["querybuilder",{"_index":1672,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["querybuilder.andwhere('user.createdat",{"_index":1677,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["querybuilder.andwhere('user.deletedat",{"_index":1684,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["querybuilder.andwhere('user.updatedat",{"_index":1681,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["querybuilder.setfindoptions",{"_index":1675,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["querybus",{"_index":213,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiMailService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/UserService.html":{}}}],["queryhandler",{"_index":1563,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["queryhandler(getallmailquery",{"_index":1565,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["queryhandler(getuserbyemailquery",{"_index":1582,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{}}}],["queryhandler(getuserbyusernamequery",{"_index":1595,"title":{},"body":{"classes/GetUserByUsernameQueryHandler.html":{}}}],["queryhandler(getuserifrefreshtokenmatchesquery",{"_index":1606,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{}}}],["queryhandler(getuserloginquery",{"_index":1621,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{}}}],["queryhandler(getuserquery",{"_index":1636,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["queryhandler(getuserwithcriteriaquery",{"_index":1671,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["queryhandler(healthcheckquery",{"_index":1750,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["random",{"_index":1221,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["readme.md",{"_index":2767,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":139,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/HealthCheckResponse.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["record",{"_index":1791,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"miscellaneous/typealiases.html":{}}}],["refactor",{"_index":2756,"title":{},"body":{"changelog.html":{}}}],["referal",{"_index":1471,"title":{},"body":{"modules/EntitiesToMoveModule.html":{}}}],["referral",{"_index":2766,"title":{},"body":{"changelog.html":{}}}],["referral_code",{"_index":586,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["referralcode",{"_index":1152,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/CreateUserResponse.html":{},"classes/RegisterHandler.html":{},"entities/UserEntity.html":{}}}],["referralcode.owner",{"_index":2624,"title":{},"body":{"entities/UserEntity.html":{}}}],["referralcode.usedby",{"_index":2630,"title":{},"body":{"entities/UserEntity.html":{}}}],["referralcodeentity",{"_index":483,"title":{"entities/ReferralCodeEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ReferralCodeEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["referralcoderepository",{"_index":512,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["referralcodes",{"_index":2600,"title":{},"body":{"entities/UserEntity.html":{}}}],["reflect",{"_index":2833,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":606,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["refresh(@req",{"_index":703,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh(request",{"_index":618,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh=${token",{"_index":799,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":1599,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"injectables/UserService.html":{}}}],["refreshtokencookie",{"_index":673,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokencookie.cookie",{"_index":684,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokencookie.token",{"_index":686,"title":{},"body":{"controllers/AuthController.html":{}}}],["refunded",{"_index":2894,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["regexp('^(?=.*[a",{"_index":1186,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["regexp('^(?=.*\\\\d)(?=.*[a",{"_index":2449,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["regexvalidatepassword",{"_index":1135,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["register",{"_index":1194,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["registercommand",{"_index":775,"title":{"classes/RegisterCommand.html":{}},"body":{"injectables/AuthService.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"coverage.html":{}}}],["registercommand(signupdto.username",{"_index":782,"title":{},"body":{"injectables/AuthService.html":{}}}],["registered",{"_index":2149,"title":{},"body":{"classes/RegisterEventHandler.html":{},"entities/UserEntity.html":{}}}],["registerevent",{"_index":2138,"title":{"classes/RegisterEvent.html":{}},"body":{"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"coverage.html":{}}}],["registerevent(inserteduser.id",{"_index":2173,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["registereventhandler",{"_index":738,"title":{"classes/RegisterEventHandler.html":{}},"body":{"modules/AuthModule.html":{},"classes/RegisterEventHandler.html":{},"coverage.html":{}}}],["registerhandler",{"_index":730,"title":{"classes/RegisterHandler.html":{}},"body":{"modules/AuthModule.html":{},"classes/RegisterHandler.html":{},"coverage.html":{}}}],["rejected",{"_index":2896,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rejectunauthorized",{"_index":1328,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["relations",{"_index":921,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["remove",{"_index":2189,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(@req",{"_index":2591,"title":{},"body":{"controllers/UserController.html":{}}}],["remove(id",{"_index":2711,"title":{},"body":{"injectables/UserService.html":{}}}],["remove(requestuser",{"_index":2534,"title":{},"body":{"controllers/UserController.html":{}}}],["removed",{"_index":2197,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{}}}],["removerefreshtoken",{"_index":2693,"title":{},"body":{"injectables/UserService.html":{}}}],["removerefreshtoken(userid",{"_index":2713,"title":{},"body":{"injectables/UserService.html":{}}}],["removerefreshtokencommand",{"_index":2174,"title":{"classes/RemoveRefreshTokenCommand.html":{}},"body":{"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["removerefreshtokencommand(userid",{"_index":2732,"title":{},"body":{"injectables/UserService.html":{}}}],["removerefreshtokencommandhandler",{"_index":2179,"title":{"classes/RemoveRefreshTokenCommandHandler.html":{}},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["removerefreshtokenevent",{"_index":2185,"title":{"classes/RemoveRefreshTokenEvent.html":{}},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"coverage.html":{}}}],["removerefreshtokeneventhandler",{"_index":2192,"title":{"classes/RemoveRefreshTokenEventHandler.html":{}},"body":{"classes/RemoveRefreshTokenEventHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["removeuser",{"_index":490,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["removeuser(userid",{"_index":521,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["repository",{"_index":492,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["req",{"_index":639,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"controllers/UserController.html":{}}}],["req.baseurl",{"_index":1536,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.body",{"_index":1540,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["req.headers",{"_index":1538,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.headers['screen",{"_index":2203,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.headers['user",{"_index":2207,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["req.ip",{"_index":1550,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.method",{"_index":1535,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req?.headers['user",{"_index":2208,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["request",{"_index":614,"title":{},"body":{"controllers/AuthController.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/UnauthorizedRequestException.html":{},"miscellaneous/variables.html":{}}}],["request.exception.ts",{"_index":2392,"title":{},"body":{"classes/UnauthorizedRequestException.html":{},"coverage.html":{}}}],["request.exception.ts:3",{"_index":2393,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["request.res",{"_index":677,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.res.setheader('set",{"_index":681,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.url",{"_index":1517,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["request.user",{"_index":701,"title":{},"body":{"controllers/AuthController.html":{}}}],["request?.headers?.authorization?.split",{"_index":1905,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["requestloggingmiddleware",{"_index":347,"title":{"injectables/RequestLoggingMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/RequestLoggingMiddleware.html":{},"coverage.html":{}}}],["requestuser",{"_index":611,"title":{"interfaces/RequestUser.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"interfaces/RequestUser.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["required",{"_index":1959,"title":{},"body":{"classes/MailRequiredException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RestoreUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["required.exception",{"_index":2728,"title":{},"body":{"injectables/UserService.html":{}}}],["required.exception.ts",{"_index":1957,"title":{},"body":{"classes/MailRequiredException.html":{},"coverage.html":{}}}],["required.exception.ts:3",{"_index":1958,"title":{},"body":{"classes/MailRequiredException.html":{}}}],["res",{"_index":640,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["res.getheaders",{"_index":1544,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["res.locals.responsebody",{"_index":1546,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["res.statuscode",{"_index":1542,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["reset",{"_index":161,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":315,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"todo.html":{}}}],["response.send(user",{"_index":690,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.sendstatus(204",{"_index":697,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.setheader('set",{"_index":695,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.status(httpstatus).json",{"_index":1514,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["responsebody",{"_index":1029,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["responseheaders",{"_index":1030,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["responseloggingmiddleware",{"_index":350,"title":{"injectables/ResponseLoggingMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/ResponseLoggingMiddleware.html":{},"coverage.html":{}}}],["rest",{"_index":2932,"title":{},"body":{"index.html":{}}}],["restore",{"_index":2230,"title":{},"body":{"classes/RestoreUserEvent.html":{}}}],["restored",{"_index":2234,"title":{},"body":{"classes/RestoreUserEventHandler.html":{}}}],["restoreuser",{"_index":2508,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["restoreuser(@body",{"_index":2570,"title":{},"body":{"controllers/UserController.html":{}}}],["restoreuser(userid",{"_index":2537,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["restoreusercommand",{"_index":2217,"title":{"classes/RestoreUserCommand.html":{}},"body":{"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["restoreusercommandhandler",{"_index":2219,"title":{"classes/RestoreUserCommandHandler.html":{}},"body":{"classes/RestoreUserCommandHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["restoreuserevent",{"_index":2222,"title":{"classes/RestoreUserEvent.html":{}},"body":{"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"coverage.html":{}}}],["restoreuserevent(command.id",{"_index":2228,"title":{},"body":{"classes/RestoreUserCommandHandler.html":{}}}],["restoreusereventhandler",{"_index":2231,"title":{"classes/RestoreUserEventHandler.html":{}},"body":{"classes/RestoreUserEventHandler.html":{},"coverage.html":{}}}],["results",{"_index":87,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":144,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterHandler.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":113,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["role",{"_index":1649,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{},"entities/GroupMembershipEntity.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["role.command",{"_index":2484,"title":{},"body":{"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["role.command.ts",{"_index":2480,"title":{},"body":{"classes/UpdateUserRoleCommand.html":{},"coverage.html":{}}}],["role.command.ts:4",{"_index":2482,"title":{},"body":{"classes/UpdateUserRoleCommand.html":{}}}],["role.command.ts:5",{"_index":2481,"title":{},"body":{"classes/UpdateUserRoleCommand.html":{}}}],["role.enum",{"_index":135,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/GenerateUserDto.html":{},"classes/ListRolesDto.html":{},"classes/UpdateUserRoleCommand.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["role.enum.ts",{"_index":2862,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["role.event",{"_index":2486,"title":{},"body":{"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"coverage.html":{}}}],["role.event.ts",{"_index":2491,"title":{},"body":{"classes/UpdateUserRoleEvent.html":{},"coverage.html":{}}}],["role.event.ts:4",{"_index":2494,"title":{},"body":{"classes/UpdateUserRoleEvent.html":{}}}],["role.event.ts:5",{"_index":2493,"title":{},"body":{"classes/UpdateUserRoleEvent.html":{}}}],["role.event.ts:6",{"_index":2495,"title":{},"body":{"classes/UpdateUserRoleEvent.html":{}}}],["rolecompanyemployeeenum",{"_index":935,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"miscellaneous/enumerations.html":{}}}],["rolecompanyemployeeenum.employee",{"_index":944,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["rolegroupmembershipenum",{"_index":1714,"title":{"classes/RoleGroupMembershipEnum.html":{}},"body":{"entities/GroupMembershipEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"coverage.html":{}}}],["rolegroupmembershipenum.member",{"_index":1718,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["roleguard",{"_index":131,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roleguardmixin",{"_index":3012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles",{"_index":595,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/GenerateUserDto.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/ListRolesDto.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["roles.dto",{"_index":2559,"title":{},"body":{"controllers/UserController.html":{}}}],["roles.dto.ts",{"_index":1916,"title":{},"body":{"classes/ListRolesDto.html":{},"coverage.html":{}}}],["roles.dto.ts:3",{"_index":1917,"title":{},"body":{"classes/ListRolesDto.html":{}}}],["roles.dto.ts:8",{"_index":1918,"title":{},"body":{"classes/ListRolesDto.html":{}}}],["roles.roles",{"_index":2587,"title":{},"body":{"controllers/UserController.html":{}}}],["roles.some(role",{"_index":3017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["route",{"_index":1031,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["routes",{"_index":2951,"title":{},"body":{"index.html":{}}}],["rss",{"_index":1760,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["run",{"_index":2947,"title":{},"body":{"index.html":{}}}],["runtimeexception",{"_index":2006,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["rxjs",{"_index":1378,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"dependencies.html":{}}}],["same",{"_index":2245,"title":{},"body":{"classes/SamePasswordException.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"injectables/UserService.html":{}}}],["samepasswordexception",{"_index":2242,"title":{"classes/SamePasswordException.html":{}},"body":{"classes/SamePasswordException.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["saved",{"_index":2093,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["savedcard",{"_index":2070,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["saveduser",{"_index":1210,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.id",{"_index":1212,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.mail",{"_index":1214,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.referralcode",{"_index":1217,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.roles",{"_index":1215,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.username",{"_index":1213,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["schema",{"_index":2953,"title":{},"body":{"index.html":{}}}],["screensize",{"_index":1032,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["secret",{"_index":743,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":1907,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["see",{"_index":905,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["select",{"_index":1585,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"entities/UserEntity.html":{}}}],["send",{"_index":2261,"title":{},"body":{"classes/SendMailEvent.html":{},"todo.html":{}}}],["sendmail",{"_index":256,"title":{},"body":{"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{}}}],["sendmail(@body",{"_index":267,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["sendmail(maildto",{"_index":257,"title":{},"body":{"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{}}}],["sendmailcommand",{"_index":285,"title":{"classes/SendMailCommand.html":{}},"body":{"injectables/ApiMailService.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"coverage.html":{}}}],["sendmailcommandhandler",{"_index":274,"title":{"classes/SendMailCommandHandler.html":{}},"body":{"modules/ApiMailModule.html":{},"classes/SendMailCommandHandler.html":{},"coverage.html":{}}}],["sendmailevent",{"_index":2251,"title":{"classes/SendMailEvent.html":{}},"body":{"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"coverage.html":{}}}],["sendmaileventhandler",{"_index":276,"title":{"classes/SendMailEventHandler.html":{}},"body":{"modules/ApiMailModule.html":{},"classes/SendMailEventHandler.html":{},"coverage.html":{}}}],["sent",{"_index":2265,"title":{},"body":{"classes/SendMailEventHandler.html":{}}}],["serialize",{"_index":2968,"title":{},"body":{"todo.html":{}}}],["serializing",{"_index":2970,"title":{},"body":{"todo.html":{}}}],["service",{"_index":1472,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{}}}],["set",{"_index":839,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEvent.html":{}}}],["setcurrentrefreshtoken",{"_index":2694,"title":{},"body":{"injectables/UserService.html":{}}}],["setcurrentrefreshtoken(token",{"_index":2716,"title":{},"body":{"injectables/UserService.html":{}}}],["setcurrentrefreshtokencommand",{"_index":2267,"title":{"classes/SetCurrentRefreshTokenCommand.html":{}},"body":{"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["setcurrentrefreshtokencommand(token",{"_index":2733,"title":{},"body":{"injectables/UserService.html":{}}}],["setcurrentrefreshtokencommandhandler",{"_index":2270,"title":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["setcurrentrefreshtokenevent",{"_index":2275,"title":{"classes/SetCurrentRefreshTokenEvent.html":{}},"body":{"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"coverage.html":{}}}],["setcurrentrefreshtokeneventhandler",{"_index":2277,"title":{"classes/SetCurrentRefreshTokenEventHandler.html":{}},"body":{"classes/SetCurrentRefreshTokenEventHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["share",{"_index":903,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["sign",{"_index":3011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signin",{"_index":607,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(@req",{"_index":670,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(request",{"_index":621,"title":{},"body":{"controllers/AuthController.html":{}}}],["signindto",{"_index":2281,"title":{"classes/SignInDto.html":{}},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["signoptions",{"_index":745,"title":{},"body":{"modules/AuthModule.html":{}}}],["signup",{"_index":608,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(@body",{"_index":659,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(signupdto",{"_index":624,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signupdto",{"_index":625,"title":{"classes/SignUpDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignUpDto.html":{},"coverage.html":{}}}],["signupdto.mail",{"_index":783,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupdto.password",{"_index":784,"title":{},"body":{"injectables/AuthService.html":{}}}],["siret",{"_index":954,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["size",{"_index":2204,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["size'].tostring",{"_index":2205,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["social",{"_index":917,"title":{},"body":{"entities/CardEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SocialNetworkEntity.html":{}}}],["social_network",{"_index":578,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/SocialNetworkEntity.html":{},"miscellaneous/enumerations.html":{}}}],["socialname",{"_index":824,"title":{},"body":{"entities/CardEntity.html":{}}}],["socialnetwork",{"_index":825,"title":{},"body":{"entities/CardEntity.html":{}}}],["socialnetwork.cards",{"_index":882,"title":{},"body":{"entities/CardEntity.html":{}}}],["socialnetworkentity",{"_index":473,"title":{"entities/SocialNetworkEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SocialNetworkEntity.html":{},"coverage.html":{}}}],["socialnetworkrepository",{"_index":508,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["socketid",{"_index":1873,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["soft",{"_index":2332,"title":{},"body":{"classes/SoftDeleteUserEventHandler.html":{}}}],["softdeleteusercommand",{"_index":2315,"title":{"classes/SoftDeleteUserCommand.html":{}},"body":{"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["softdeleteusercommand(id",{"_index":2738,"title":{},"body":{"injectables/UserService.html":{}}}],["softdeleteusercommand(userid",{"_index":2745,"title":{},"body":{"injectables/UserService.html":{}}}],["softdeleteusercommandhandler",{"_index":2318,"title":{"classes/SoftDeleteUserCommandHandler.html":{}},"body":{"classes/SoftDeleteUserCommandHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["softdeleteuserevent",{"_index":2321,"title":{"classes/SoftDeleteUserEvent.html":{}},"body":{"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"coverage.html":{}}}],["softdeleteuserevent(command.userid",{"_index":2327,"title":{},"body":{"classes/SoftDeleteUserCommandHandler.html":{}}}],["softdeleteusereventhandler",{"_index":2329,"title":{"classes/SoftDeleteUserEventHandler.html":{}},"body":{"classes/SoftDeleteUserEventHandler.html":{},"coverage.html":{}}}],["source",{"_index":4,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["space",{"_index":1770,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["src/.../api",{"_index":2844,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../config.service.mock.ts",{"_index":2982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../errorenum.ts",{"_index":2846,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../invalid",{"_index":2979,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../jwt.service.mock.ts",{"_index":2983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":2922,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../notification",{"_index":2847,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../postgres",{"_index":2849,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role",{"_index":2851,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role.guard.ts",{"_index":2984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../status",{"_index":2853,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../transferable",{"_index":2858,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../type",{"_index":2860,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user",{"_index":2861,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../verbose",{"_index":2863,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../who",{"_index":2864,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../winston",{"_index":2981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api/api",{"_index":92,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/LoggingTypeEnum.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/api/auth/auth.controller.ts",{"_index":602,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/api/auth/auth.controller.ts:24",{"_index":627,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:41",{"_index":623,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:60",{"_index":617,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:69",{"_index":613,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:75",{"_index":620,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:89",{"_index":632,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.module.ts",{"_index":719,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/api/auth/auth.service.ts",{"_index":749,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/api/auth/auth.service.ts:14",{"_index":758,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:17",{"_index":771,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:23",{"_index":770,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:31",{"_index":764,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:43",{"_index":761,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:56",{"_index":759,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:60",{"_index":766,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/cqrs/command/register.command.ts",{"_index":2135,"title":{},"body":{"classes/RegisterCommand.html":{},"coverage.html":{}}}],["src/api/auth/cqrs/command/register.command.ts:1",{"_index":2136,"title":{},"body":{"classes/RegisterCommand.html":{}}}],["src/api/auth/cqrs/command/register.command.ts:2",{"_index":2137,"title":{},"body":{"classes/RegisterCommand.html":{}}}],["src/api/auth/cqrs/event",{"_index":2142,"title":{},"body":{"classes/RegisterEventHandler.html":{},"coverage.html":{}}}],["src/api/auth/cqrs/event/register.event.ts",{"_index":2139,"title":{},"body":{"classes/RegisterEvent.html":{},"coverage.html":{}}}],["src/api/auth/cqrs/event/register.event.ts:1",{"_index":2140,"title":{},"body":{"classes/RegisterEvent.html":{}}}],["src/api/auth/cqrs/event/register.event.ts:2",{"_index":2141,"title":{},"body":{"classes/RegisterEvent.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts",{"_index":2151,"title":{},"body":{"classes/RegisterHandler.html":{},"coverage.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:103",{"_index":2161,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:107",{"_index":2159,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:113",{"_index":2154,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:123",{"_index":2155,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:131",{"_index":2156,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:19",{"_index":2152,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:29",{"_index":2153,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:87",{"_index":2158,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:93",{"_index":2157,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:99",{"_index":2160,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/database/postgres",{"_index":2885,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/auth/dto/sign",{"_index":2282,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"coverage.html":{}}}],["src/api/auth/guards/auth.guard.ts",{"_index":1919,"title":{},"body":{"injectables/LocalAuthenticationGuard.html":{},"coverage.html":{}}}],["src/api/auth/guards/jwt",{"_index":1886,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"coverage.html":{}}}],["src/api/auth/guards/role.guard.ts",{"_index":2792,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/api/auth/interface/request",{"_index":2212,"title":{},"body":{"interfaces/RequestUser.html":{},"coverage.html":{}}}],["src/api/auth/interface/token",{"_index":2388,"title":{},"body":{"interfaces/TokenPayload.html":{},"coverage.html":{}}}],["src/api/auth/strategy/jwt",{"_index":1891,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"coverage.html":{}}}],["src/api/auth/strategy/jwt.strategy.ts",{"_index":1910,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/api/auth/strategy/jwt.strategy.ts:11",{"_index":1911,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/api/auth/strategy/jwt.strategy.ts:26",{"_index":1913,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/api/auth/strategy/passport",{"_index":1921,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/api/entities",{"_index":6,"title":{},"body":{"entities/AddressEntity.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/api/health",{"_index":1290,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"coverage.html":{}}}],["src/api/user/cqrs/command/create",{"_index":1125,"title":{},"body":{"classes/CreateUserCommand.html":{},"coverage.html":{}}}],["src/api/user/cqrs/command/delete",{"_index":1407,"title":{},"body":{"classes/DeleteUserCommand.html":{},"coverage.html":{}}}],["src/api/user/cqrs/command/remove",{"_index":2175,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{},"coverage.html":{}}}],["src/api/user/cqrs/command/restore",{"_index":2218,"title":{},"body":{"classes/RestoreUserCommand.html":{},"coverage.html":{}}}],["src/api/user/cqrs/command/set",{"_index":2268,"title":{},"body":{"classes/SetCurrentRefreshTokenCommand.html":{},"coverage.html":{}}}],["src/api/user/cqrs/command/soft",{"_index":2316,"title":{},"body":{"classes/SoftDeleteUserCommand.html":{},"coverage.html":{}}}],["src/api/user/cqrs/command/update",{"_index":2396,"title":{},"body":{"classes/UpdateUserCommand.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserRoleCommand.html":{},"coverage.html":{}}}],["src/api/user/cqrs/event/create",{"_index":1251,"title":{},"body":{"classes/CreateUserEvent.html":{},"coverage.html":{}}}],["src/api/user/cqrs/event/delete",{"_index":1419,"title":{},"body":{"classes/DeleteUserEvent.html":{},"coverage.html":{}}}],["src/api/user/cqrs/event/login",{"_index":1937,"title":{},"body":{"classes/LoginOfUserEvent.html":{},"coverage.html":{}}}],["src/api/user/cqrs/event/remove",{"_index":2186,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"coverage.html":{}}}],["src/api/user/cqrs/event/restore",{"_index":2229,"title":{},"body":{"classes/RestoreUserEvent.html":{},"coverage.html":{}}}],["src/api/user/cqrs/event/set",{"_index":2276,"title":{},"body":{"classes/SetCurrentRefreshTokenEvent.html":{},"coverage.html":{}}}],["src/api/user/cqrs/event/soft",{"_index":2328,"title":{},"body":{"classes/SoftDeleteUserEvent.html":{},"coverage.html":{}}}],["src/api/user/cqrs/event/update",{"_index":2464,"title":{},"body":{"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleEvent.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/command/create",{"_index":1132,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/command/delete",{"_index":1410,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/command/remove",{"_index":2180,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/command/restore",{"_index":2220,"title":{},"body":{"classes/RestoreUserCommandHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/command/set",{"_index":2271,"title":{},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/command/soft",{"_index":2319,"title":{},"body":{"classes/SoftDeleteUserCommandHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/command/update",{"_index":2400,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/event/create",{"_index":1260,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/event/delete",{"_index":1423,"title":{},"body":{"classes/DeleteUserEventHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/event/login",{"_index":1939,"title":{},"body":{"classes/LoginOfUserEventHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/event/remove",{"_index":2193,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/event/restore",{"_index":2232,"title":{},"body":{"classes/RestoreUserEventHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/event/set",{"_index":2278,"title":{},"body":{"classes/SetCurrentRefreshTokenEventHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/event/soft",{"_index":2330,"title":{},"body":{"classes/SoftDeleteUserEventHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/event/update",{"_index":2471,"title":{},"body":{"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/query/get",{"_index":1580,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/query/get",{"_index":1574,"title":{},"body":{"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/GetUserWithCriteriaQuery.html":{},"coverage.html":{}}}],["src/api/user/domain/dto/create",{"_index":414,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/api/user/domain/dto/generate",{"_index":1554,"title":{},"body":{"classes/GenerateUserDto.html":{},"coverage.html":{}}}],["src/api/user/domain/dto/get",{"_index":1642,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{},"coverage.html":{}}}],["src/api/user/domain/dto/list",{"_index":1915,"title":{},"body":{"classes/ListRolesDto.html":{},"coverage.html":{}}}],["src/api/user/domain/dto/update",{"_index":2458,"title":{},"body":{"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/api/user/domain/dto/user",{"_index":417,"title":{},"body":{"controllers/AppTestE2eController.html":{},"interfaces/UserIdDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["src/api/user/domain/entities/user.entity",{"_index":416,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{}}}],["src/api/user/domain/entities/user.entity.ts",{"_index":2596,"title":{},"body":{"entities/UserEntity.html":{},"coverage.html":{}}}],["src/api/user/domain/entities/user.entity.ts:100",{"_index":2619,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:105",{"_index":2603,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:111",{"_index":2604,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:114",{"_index":2629,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:117",{"_index":2607,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:33",{"_index":2608,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:36",{"_index":2617,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:40",{"_index":2633,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:48",{"_index":2620,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:56",{"_index":2609,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:63",{"_index":2606,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:66",{"_index":2616,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:69",{"_index":2623,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:76",{"_index":2613,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:79",{"_index":2626,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:86",{"_index":2622,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:89",{"_index":2628,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:92",{"_index":2625,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:95",{"_index":2631,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/enum/user",{"_index":2907,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/user/domain/response/create",{"_index":1278,"title":{},"body":{"classes/CreateUserResponse.html":{},"coverage.html":{}}}],["src/api/user/domain/response/user",{"_index":2637,"title":{},"body":{"classes/UserListResponse.html":{},"classes/UserLoginResponse.html":{},"coverage.html":{}}}],["src/api/user/domain/response/user.response.ts",{"_index":2683,"title":{},"body":{"classes/UserResponse.html":{},"coverage.html":{}}}],["src/api/user/domain/response/user.response.ts:10",{"_index":2685,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:11",{"_index":2687,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:12",{"_index":2688,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:13",{"_index":2686,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:3",{"_index":2684,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/user.module.ts",{"_index":2664,"title":{},"body":{"modules/UserModule.html":{}}}],["src/api/user/user.service.ts",{"_index":2689,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/api/user/user.service.ts:111",{"_index":2715,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:120",{"_index":2704,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:124",{"_index":2708,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:128",{"_index":2722,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:136",{"_index":2720,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:150",{"_index":2699,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:155",{"_index":2702,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:160",{"_index":2705,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:33",{"_index":2696,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:36",{"_index":2697,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:40",{"_index":2710,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:44",{"_index":2714,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:48",{"_index":2717,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:52",{"_index":2700,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:56",{"_index":2703,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:64",{"_index":2718,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:77",{"_index":2712,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:86",{"_index":2706,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/web/user.controller.ts",{"_index":2501,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/api/user/web/user.controller.ts:113",{"_index":2526,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:130",{"_index":2533,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:146",{"_index":2543,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:165",{"_index":2552,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:180",{"_index":2546,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:198",{"_index":2549,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:217",{"_index":2536,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:233",{"_index":2518,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:37",{"_index":2514,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:52",{"_index":2530,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:68",{"_index":2540,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:82",{"_index":2520,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:97",{"_index":2523,"title":{},"body":{"controllers/UserController.html":{}}}],["src/app.controller.ts",{"_index":288,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:31",{"_index":297,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module",{"_index":438,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["src/app.module.ts",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:46",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":376,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":377,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":2800,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middleware/error",{"_index":1518,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"coverage.html":{}}}],["src/middleware/request",{"_index":2198,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"coverage.html":{}}}],["src/middleware/response",{"_index":2214,"title":{},"body":{"injectables/ResponseLoggingMiddleware.html":{},"coverage.html":{}}}],["src/util/config/database.configuration.ts",{"_index":1304,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"coverage.html":{}}}],["src/util/config/database.configuration.ts:31",{"_index":1306,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["src/util/config/winston",{"_index":2802,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/util/exception/custom",{"_index":1458,"title":{},"body":{"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/MailRequiredException.html":{},"classes/NoUserTraceException.html":{},"classes/SamePasswordException.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/util/exception/error",{"_index":1473,"title":{},"body":{"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"coverage.html":{}}}],["src/util/exception/errorenum.ts",{"_index":2869,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/util/filter/error",{"_index":1499,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"coverage.html":{}}}],["src/util/global/extend",{"_index":2370,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{},"coverage.html":{}}}],["src/util/mocks/config.service.mock.ts",{"_index":2804,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/util/mocks/jwt.service.mock.ts",{"_index":2806,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/util/pipe/is",{"_index":412,"title":{},"body":{"controllers/AppTestE2eController.html":{},"classes/IsTestEnvironmentPipe.html":{},"coverage.html":{}}}],["ssl",{"_index":1326,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["start_date",{"_index":1446,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["startdate",{"_index":1432,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["started",{"_index":2749,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["starttest",{"_index":2948,"title":{},"body":{"index.html":{}}}],["state",{"_index":19,"title":{},"body":{"entities/AddressEntity.html":{}}}],["statements",{"_index":2781,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1933,"title":{},"body":{"classes/LoggingTypeEnum.html":{},"classes/RoleGroupMembershipEnum.html":{}}}],["status",{"_index":316,"title":{},"body":{"controllers/AppController.html":{},"entities/CardEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"controllers/HealthCheckController.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"entities/SubscriptionEntity.html":{},"miscellaneous/enumerations.html":{}}}],["statuscode",{"_index":1515,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["statusinvoiceenum",{"_index":1853,"title":{},"body":{"entities/InvoicesEntity.html":{},"miscellaneous/enumerations.html":{}}}],["statusinvoiceenum.pending",{"_index":1854,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["statuslogenum",{"_index":2855,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statussubscriptionenum",{"_index":2367,"title":{},"body":{"entities/SubscriptionEntity.html":{},"miscellaneous/enumerations.html":{}}}],["statussubscriptionenum.active",{"_index":2368,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["storage",{"_index":1766,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["strategy",{"_index":1899,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strategy/jwt",{"_index":732,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/jwt.strategy",{"_index":734,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/passport",{"_index":723,"title":{},"body":{"modules/AuthModule.html":{}}}],["street",{"_index":20,"title":{},"body":{"entities/AddressEntity.html":{}}}],["string",{"_index":26,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserEvent.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GenerateUserDto.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserWithCriteriaDto.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserEvent.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserEvent.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleEvent.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["strip",{"_index":1470,"title":{},"body":{"modules/EntitiesToMoveModule.html":{}}}],["strip_event",{"_index":580,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/StripEventEntity.html":{}}}],["stripcustomerid",{"_index":2339,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["stripe",{"_index":2357,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["stripevententity",{"_index":476,"title":{"entities/StripEventEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/StripEventEntity.html":{},"coverage.html":{}}}],["stripeventrepository",{"_index":509,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["subscription",{"_index":582,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/InvoicesEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["subscription.entity",{"_index":1455,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{},"entities/ReferralCodeEntity.html":{}}}],["subscription.enum.ts",{"_index":2857,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["subscription.user",{"_index":2627,"title":{},"body":{"entities/UserEntity.html":{}}}],["subscriptionentity",{"_index":479,"title":{"entities/SubscriptionEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["subscriptionentity.discountcodes",{"_index":1457,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["subscriptionentity.discountcodes)@jointable",{"_index":1448,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["subscriptionentity.invoices",{"_index":1861,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["subscriptionentity.invoices)@validatenested",{"_index":1841,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["subscriptionentity.plan",{"_index":2063,"title":{},"body":{"entities/PlanEntity.html":{}}}],["subscriptionrepository",{"_index":510,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["subscriptions",{"_index":1433,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/PlanEntity.html":{},"entities/UserEntity.html":{}}}],["success",{"_index":314,"title":{},"body":{"controllers/AppController.html":{}}}],["summary",{"_index":141,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["super",{"_index":1792,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["super('invalid",{"_index":1783,"title":{},"body":{"classes/InvalidIdException.html":{},"classes/InvalidUsernameException.html":{}}}],["super('mail",{"_index":1462,"title":{},"body":{"classes/DuplicateMailException.html":{},"classes/InvalidMailException.html":{},"classes/MailRequiredException.html":{}}}],["super('new",{"_index":2244,"title":{},"body":{"classes/SamePasswordException.html":{}}}],["super('unauthorized",{"_index":2394,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["super('user",{"_index":2682,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["super('username",{"_index":1465,"title":{},"body":{"classes/DuplicateUsernameException.html":{}}}],["super(`invalid",{"_index":2009,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["super.canactivate(context",{"_index":3015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["super_admin",{"_index":2908,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["supertest",{"_index":2943,"title":{},"body":{"index.html":{}}}],["supplémentaires",{"_index":1857,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["support",{"_index":2956,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2957,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":2836,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":3007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":1331,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["table",{"_index":2809,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2808,"title":{},"body":{"coverage.html":{}}}],["tax_rate",{"_index":1843,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["taxrate",{"_index":1815,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["tcp",{"_index":2763,"title":{},"body":{"changelog.html":{}}}],["terminusmodule",{"_index":1735,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["test",{"_index":381,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/IsTestEnvironmentPipe.html":{},"changelog.html":{},"coverage.html":{}}}],["test/test",{"_index":379,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"coverage.html":{}}}],["testapi",{"_index":2949,"title":{},"body":{"index.html":{}}}],["text",{"_index":1043,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["text/html",{"_index":312,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["then((mailslandingpagelist",{"_index":1571,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["thibaud",{"_index":2926,"title":{},"body":{"index.html":{}}}],["things",{"_index":2758,"title":{},"body":{"changelog.html":{}}}],["this.addressrepository.query('delete",{"_index":587,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.api_name",{"_index":1089,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["this.api_type",{"_index":1094,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["this.api_version",{"_index":1091,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["this.apilandingpageservice.deletemail(mail",{"_index":148,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["this.apilandingpageservice.getall",{"_index":145,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["this.apiloggerservice.createlog(createlogdto",{"_index":1497,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["this.apilogservice.createlogformethode",{"_index":1272,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["this.apimailservice.sendmail(maildto",{"_index":268,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["this.appservice.cleardatabasetest",{"_index":420,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.appservice.createusertest(createuserdto",{"_index":423,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.appservice.getallusers",{"_index":429,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.appservice.gethello",{"_index":318,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.getuser(userid",{"_index":431,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.appservice.removeuser(useriddto.userid",{"_index":427,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.authenticationservice.login(login",{"_index":1931,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.authservice.getcookieforlogout",{"_index":696,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getcookiewithjwtrefreshtoken(user.id",{"_index":674,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getcookiewithjwttoken(request.user.id",{"_index":704,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getcookiewithjwttoken(user.id",{"_index":672,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getuserfromauthtoken(data",{"_index":707,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(signupdto",{"_index":661,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.cardrepository.query('delete",{"_index":548,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.client.emit('create",{"_index":1098,"title":{},"body":{"classes/CreateLogCommandHandler.html":{}}}],["this.client.emit('send",{"_index":2255,"title":{},"body":{"classes/SendMailCommandHandler.html":{}}}],["this.client.send",{"_index":1381,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["this.commandbus.execute",{"_index":226,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/UserService.html":{}}}],["this.commandbus.execute(new",{"_index":781,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.companyemployeerepository.query('delete",{"_index":551,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.companyrepository.query('delete",{"_index":550,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.connectedcardrepository.query('delete",{"_index":553,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.conversationrepository.query('delete",{"_index":555,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.createdat",{"_index":2384,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["this.customhealthcheckservice.checkhealth",{"_index":1731,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["this.deletedat",{"_index":2387,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["this.discountcoderepository.query('delete",{"_index":557,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.diskhealthindicator.checkstorage('disk",{"_index":1771,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.eventbus.publish",{"_index":1192,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["this.eventbus.publish(new",{"_index":1218,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["this.generatecode(number(process.env.length_referral_code",{"_index":1227,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["this.generatepassword",{"_index":2741,"title":{},"body":{"injectables/UserService.html":{}}}],["this.generateuniquereferralcode",{"_index":1205,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["this.getuserbyreferralcode(code",{"_index":1229,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["this.groupmembershiprepository.query('delete",{"_index":561,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.grouprepository.query('delete",{"_index":559,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.healthcheckservice.check",{"_index":1751,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.invoicesrepository.query('delete",{"_index":563,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.isduplicatedemail(command.createuserdto.mail",{"_index":1198,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["this.isduplicatedemail(command.mail",{"_index":2165,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.isduplicatedemail(command.user.mail",{"_index":2421,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["this.isduplicatedusername(command.createuserdto.username",{"_index":1191,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["this.isduplicatedusername(command.user.username",{"_index":2419,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["this.isduplicatedusername(command.username",{"_index":2164,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.isduplicateofdeletedmail(command.user.mail",{"_index":2423,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["this.isduplicateofdeletedusername(command.user.username",{"_index":2422,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["this.isvalidemail(command.createuserdto.mail",{"_index":1201,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["this.isvalidemail(command.mail",{"_index":2168,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.isvalidpassword(command.createuserdto.password",{"_index":1199,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["this.isvalidpassword(command.password",{"_index":2166,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.isvalidpassword(command.updateusercredentialdto.newpassword",{"_index":2455,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["this.isvalidusername(command.createuserdto.username",{"_index":1202,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["this.isvalidusername(command.username",{"_index":2170,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.joinedconversationrepository.query('delete",{"_index":565,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.jwtservice.sign(payload",{"_index":789,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(authenticationtoken",{"_index":803,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger_console.log('new",{"_index":2150,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["this.login",{"_index":2649,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["this.mediarepository.query('delete",{"_index":567,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.memoryhealthindicator.checkheap('memory",{"_index":1756,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.memoryhealthindicator.checkrss('memory",{"_index":1762,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.messagerepository.query('delete",{"_index":569,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.notificationrepository.query('delete",{"_index":583,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.occupationrepository.query('delete",{"_index":571,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.password",{"_index":2650,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["this.planrepository.query('delete",{"_index":573,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.profilerepository.query('delete",{"_index":575,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.querybus.execute(new",{"_index":228,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/UserService.html":{}}}],["this.referralcoderepository.query('delete",{"_index":585,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.regexvalidatepassword",{"_index":1185,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["this.regexvalidatepassword.test(password",{"_index":1234,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["this.socialnetworkrepository.query('delete",{"_index":577,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.stripeventrepository.query('delete",{"_index":579,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.subscriptionrepository.query('delete",{"_index":581,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.typeormhealthindicator.pingcheck('database",{"_index":1752,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.updatedat",{"_index":2386,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["this.userlist",{"_index":2642,"title":{},"body":{"classes/UserListResponse.html":{}}}],["this.userrepository",{"_index":2324,"title":{},"body":{"classes/SoftDeleteUserCommandHandler.html":{}}}],["this.userrepository.createquerybuilder('user",{"_index":1673,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["this.userrepository.find",{"_index":599,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.userrepository.find().then(userlist",{"_index":1637,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["this.userrepository.find().then(users",{"_index":1230,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["this.userrepository.findone",{"_index":598,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["this.userrepository.findoneorfail",{"_index":1583,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["this.userrepository.query('delete",{"_index":547,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.userrepository.restore(command.id",{"_index":2227,"title":{},"body":{"classes/RestoreUserCommandHandler.html":{}}}],["this.userrepository.save",{"_index":588,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.userrepository.save(newuser",{"_index":1211,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["this.userrepository.softdelete",{"_index":597,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/SoftDeleteUserCommandHandler.html":{}}}],["this.userrepository.softdelete(command.userid",{"_index":1417,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{}}}],["this.userrepository.update(command.userid",{"_index":2184,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["this.userrepository.update(verifyduplicatemailwithdeleted.id",{"_index":2430,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["this.userservice.createuser(createuserdto",{"_index":2565,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.deleteme(requestuser.user.id",{"_index":2595,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":2573,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findme(user.id",{"_index":2580,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id",{"_index":2576,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findwithcriteria(getuserwithcriteriadto",{"_index":2578,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.generateuserfrommail(generateuserdto",{"_index":2568,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getuserifrefreshtokenmatches(refreshtoken",{"_index":1909,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["this.userservice.remove(id",{"_index":2592,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.removerefreshtoken(request.user.id",{"_index":694,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.restoreuser(userid.userid",{"_index":2571,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.setcurrentrefreshtoken(refreshtokencookie.token",{"_index":675,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.update(requestuser.user.id",{"_index":2588,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(userid",{"_index":2583,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updatepassword(requestuser.user.id",{"_index":2589,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updateroles(id",{"_index":2586,"title":{},"body":{"controllers/UserController.html":{}}}],["this.verbose",{"_index":1086,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["this.verifypassword(command.updateusercredentialdto.password",{"_index":2456,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["this.verifypassword(query.plaintextpassword",{"_index":1623,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{}}}],["thresholdpercent",{"_index":1772,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["throw",{"_index":664,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/RegisterHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["timestamp",{"_index":46,"title":{},"body":{"entities/AddressEntity.html":{},"classes/ErrorExceptionFilter.html":{},"entities/NotificationEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["timestampentityextendentity",{"_index":2369,"title":{"classes/TimestampEntityExtendEntity.html":{}},"body":{"classes/TimestampEntityExtendEntity.html":{},"coverage.html":{}}}],["timestamps",{"_index":926,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["title",{"_index":1944,"title":{},"body":{"classes/MailDto.html":{},"entities/NotificationEntity.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{}}}],["todo",{"_index":2967,"title":{"todo.html":{}},"body":{}}],["token",{"_index":631,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["token.command",{"_index":2181,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["token.command.ts",{"_index":2176,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"coverage.html":{}}}],["token.command.ts:1",{"_index":2177,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommand.html":{}}}],["token.command.ts:2",{"_index":2178,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommand.html":{}}}],["token.event",{"_index":2194,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["token.event.ts",{"_index":2187,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"coverage.html":{}}}],["token.event.ts:2",{"_index":2190,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{}}}],["token.event.ts:3",{"_index":2188,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{}}}],["token.event.ts:4",{"_index":2191,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{}}}],["token.guard",{"_index":648,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.guard.ts",{"_index":1890,"title":{},"body":{"injectables/JwtRefreshGuard.html":{},"coverage.html":{}}}],["token.strategy",{"_index":733,"title":{},"body":{"modules/AuthModule.html":{}}}],["token.strategy.ts",{"_index":1892,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"coverage.html":{}}}],["token.strategy.ts:12",{"_index":1894,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["token.strategy.ts:25",{"_index":1896,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["tokenpayload",{"_index":772,"title":{"interfaces/TokenPayload.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"interfaces/TokenPayload.html":{},"coverage.html":{}}}],["total_amount",{"_index":1846,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["total_tax",{"_index":1848,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["totalamount",{"_index":1816,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["totaltax",{"_index":1817,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["trace",{"_index":2010,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["trace.exception.ts",{"_index":2005,"title":{},"body":{"classes/NoUserTraceException.html":{},"coverage.html":{}}}],["trace.exception.ts:3",{"_index":2007,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["transferablestatuscardenum",{"_index":826,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["transferablestatuscardenum.is_transferable",{"_index":920,"title":{},"body":{"entities/CardEntity.html":{}}}],["transform",{"_index":1864,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["transform(value",{"_index":1865,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["transformer",{"_index":2634,"title":{},"body":{"entities/UserEntity.html":{},"dependencies.html":{}}}],["transport",{"_index":167,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["transport.tcp",{"_index":196,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["transports",{"_index":2996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trial_end_date",{"_index":2359,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["trial_start_date",{"_index":2362,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["trialenddate",{"_index":2340,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["trialstartdate",{"_index":2341,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["true",{"_index":38,"title":{},"body":{"entities/AddressEntity.html":{},"modules/AppModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"injectables/DatabaseConfiguration.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RestoreUserCommandHandler.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"entities/UserEntity.html":{}}}],["true})@isdate",{"_index":2360,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["true})@isnumber",{"_index":1836,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["true})@isoptional()@isdatestring",{"_index":2113,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["true})@isstring()@length(6",{"_index":2108,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["true})@joincolumn",{"_index":992,"title":{},"body":{"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{}}}],["true})@maxlength(255",{"_index":834,"title":{},"body":{"entities/CardEntity.html":{}}}],["try",{"_index":660,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["trying",{"_index":1365,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["type",{"_index":24,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":1059,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/NotificationEntity.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["type.enum.ts",{"_index":1932,"title":{},"body":{"classes/LoggingTypeEnum.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["type.enum.ts:2",{"_index":1935,"title":{},"body":{"classes/LoggingTypeEnum.html":{}}}],["type.enum.ts:3",{"_index":1936,"title":{},"body":{"classes/LoggingTypeEnum.html":{}}}],["type.enum.ts:4",{"_index":1934,"title":{},"body":{"classes/LoggingTypeEnum.html":{}}}],["typealiases",{"_index":2977,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeofcardenum",{"_index":827,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["typeofcardenum.social_network",{"_index":922,"title":{},"body":{"entities/CardEntity.html":{}}}],["typeorm",{"_index":76,"title":{},"body":{"entities/AddressEntity.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"injectables/JwtStrategy.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"entities/UserEntity.html":{},"dependencies.html":{},"todo.html":{}}}],["typeormhealthindicator",{"_index":1744,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["typeormmodule",{"_index":279,"title":{},"body":{"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature",{"_index":486,"title":{},"body":{"modules/AppTestE2eModule.html":{},"modules/EntitiesToMoveModule.html":{}}}],["typeormmodule.forfeature([userentity",{"_index":281,"title":{},"body":{"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":359,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":1307,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["typeormoptionsfactory",{"_index":1308,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["types",{"_index":2202,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["types,@typescript",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["types/passport",{"_index":2821,"title":{},"body":{"dependencies.html":{}}}],["types/useragent",{"_index":2824,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":369,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ua",{"_index":1529,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ua.device.tostring",{"_index":1534,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ua.os.tostring",{"_index":1532,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ui",{"_index":2837,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedrequestexception",{"_index":2390,"title":{"classes/UnauthorizedRequestException.html":{}},"body":{"classes/UnauthorizedRequestException.html":{},"coverage.html":{}}}],["undefined",{"_index":296,"title":{},"body":{"controllers/AppController.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"classes/DeleteMailCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SendMailCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"entities/UserEntity.html":{}}}],["undefined})@isemail",{"_index":848,"title":{},"body":{"entities/CardEntity.html":{}}}],["undefined})@isurl",{"_index":888,"title":{},"body":{"entities/CardEntity.html":{}}}],["undefined})@useguards(undefined",{"_index":108,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["unique",{"_index":1700,"title":{},"body":{"entities/GroupEntity.html":{},"entities/OccupationEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["uniqueviolation",{"_index":2886,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unknown",{"_index":1506,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["unlicensed",{"_index":2966,"title":{},"body":{"properties.html":{}}}],["unreachable",{"_index":1391,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["unused",{"_index":1567,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["up.dto",{"_index":635,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["up.dto.ts",{"_index":2289,"title":{},"body":{"classes/SignUpDto.html":{},"coverage.html":{}}}],["up.dto.ts:14",{"_index":2292,"title":{},"body":{"classes/SignUpDto.html":{}}}],["up.dto.ts:5",{"_index":2293,"title":{},"body":{"classes/SignUpDto.html":{}}}],["up.dto.ts:9",{"_index":2291,"title":{},"body":{"classes/SignUpDto.html":{}}}],["update",{"_index":2313,"title":{},"body":{"entities/SocialNetworkEntity.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleEvent.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["update(userid",{"_index":2541,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updated",{"_index":2473,"title":{},"body":{"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["updated_at",{"_index":62,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["updatedat",{"_index":21,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{}}}],["updatedatecolumn",{"_index":75,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["updatedatecolumn({name",{"_index":61,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{}}}],["updatedfrom",{"_index":1650,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["updatedto",{"_index":1651,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["updateme",{"_index":2509,"title":{},"body":{"controllers/UserController.html":{}}}],["updateme(requestuser",{"_index":2544,"title":{},"body":{"controllers/UserController.html":{}}}],["updatepassword",{"_index":2510,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatepassword(requestuser",{"_index":2547,"title":{},"body":{"controllers/UserController.html":{}}}],["updatepassword(userid",{"_index":2719,"title":{},"body":{"injectables/UserService.html":{}}}],["updaterole",{"_index":2511,"title":{},"body":{"controllers/UserController.html":{}}}],["updaterole(@param('id",{"_index":2585,"title":{},"body":{"controllers/UserController.html":{}}}],["updaterole(id",{"_index":2550,"title":{},"body":{"controllers/UserController.html":{}}}],["updateroles",{"_index":2695,"title":{},"body":{"injectables/UserService.html":{}}}],["updateroles(userid",{"_index":2721,"title":{},"body":{"injectables/UserService.html":{}}}],["updatetimestamp",{"_index":2375,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["updateusercommand",{"_index":2395,"title":{"classes/UpdateUserCommand.html":{}},"body":{"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateusercommand(userid",{"_index":2735,"title":{},"body":{"injectables/UserService.html":{}}}],["updateusercommandhandler",{"_index":2399,"title":{"classes/UpdateUserCommandHandler.html":{}},"body":{"classes/UpdateUserCommandHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["updateusercredentialcommand",{"_index":2435,"title":{"classes/UpdateUserCredentialCommand.html":{}},"body":{"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateusercredentialcommandhandler",{"_index":2441,"title":{"classes/UpdateUserCredentialCommandHandler.html":{}},"body":{"classes/UpdateUserCredentialCommandHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["updateusercredentialdto",{"_index":2437,"title":{"classes/UpdateUserCredentialDto.html":{}},"body":{"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateusercredentialevent",{"_index":2446,"title":{"classes/UpdateUserCredentialEvent.html":{}},"body":{"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"coverage.html":{}}}],["updateusercredentialevent(command.userid",{"_index":2457,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["updateusercredentialeventhandler",{"_index":2470,"title":{"classes/UpdateUserCredentialEventHandler.html":{}},"body":{"classes/UpdateUserCredentialEventHandler.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":2397,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserCommand.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateuserevent",{"_index":2415,"title":{"classes/UpdateUserEvent.html":{}},"body":{"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"coverage.html":{}}}],["updateuserevent(command.userid",{"_index":2427,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["updateuserevent(verifyduplicatemailwithdeleted.id",{"_index":2433,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["updateusereventhandler",{"_index":2477,"title":{"classes/UpdateUserEventHandler.html":{}},"body":{"classes/UpdateUserEventHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["updateuserrolecommand",{"_index":2479,"title":{"classes/UpdateUserRoleCommand.html":{}},"body":{"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateuserrolecommandhandler",{"_index":2483,"title":{"classes/UpdateUserRoleCommandHandler.html":{}},"body":{"classes/UpdateUserRoleCommandHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["updateuserroleevent",{"_index":2485,"title":{"classes/UpdateUserRoleEvent.html":{}},"body":{"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"coverage.html":{}}}],["updateuserroleevent(command",{"_index":2489,"title":{},"body":{"classes/UpdateUserRoleCommandHandler.html":{}}}],["updateuserroleeventhandler",{"_index":2496,"title":{"classes/UpdateUserRoleEventHandler.html":{}},"body":{"classes/UpdateUserRoleEventHandler.html":{},"coverage.html":{}}}],["uppercase",{"_index":1803,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["url",{"_index":2298,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["urls",{"_index":828,"title":{},"body":{"entities/CardEntity.html":{}}}],["usage_limit",{"_index":1451,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["usagelimit",{"_index":1434,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["use",{"_index":1520,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["use(req",{"_index":1522,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["useclass",{"_index":360,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":1764,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{},"entities/UserEntity.html":{}}}],["usedby",{"_index":2103,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["usedreferralcodes",{"_index":2601,"title":{},"body":{"entities/UserEntity.html":{}}}],["useguards",{"_index":121,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtrefreshguard",{"_index":691,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtrefreshguard)@get('/actual",{"_index":612,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtrefreshguard)@get('/refresh",{"_index":619,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthenticationguard",{"_index":668,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(roleguard([userroleenum.admin",{"_index":143,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["usepipes",{"_index":407,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["usepipes(new",{"_index":388,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["user",{"_index":22,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"interfaces/RequestUser.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user')@useguards(undefined",{"_index":2539,"title":{},"body":{"controllers/UserController.html":{}}}],["user.command",{"_index":1133,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.command.ts",{"_index":1126,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/DeleteUserCommand.html":{},"classes/RestoreUserCommand.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/UpdateUserCommand.html":{},"coverage.html":{}}}],["user.command.ts:1",{"_index":2317,"title":{},"body":{"classes/SoftDeleteUserCommand.html":{}}}],["user.command.ts:2",{"_index":1408,"title":{},"body":{"classes/DeleteUserCommand.html":{},"classes/RestoreUserCommand.html":{},"classes/SoftDeleteUserCommand.html":{}}}],["user.command.ts:3",{"_index":1128,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/UpdateUserCommand.html":{}}}],["user.command.ts:4",{"_index":1129,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/UpdateUserCommand.html":{}}}],["user.currenthashedrefreshtoken",{"_index":685,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.dto",{"_index":415,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserEvent.html":{},"classes/UpdateUserCommand.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":1237,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GenerateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":2476,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:12",{"_index":1246,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:16",{"_index":1242,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:20",{"_index":1238,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:4",{"_index":1556,"title":{},"body":{"classes/GenerateUserDto.html":{}}}],["user.dto.ts:5",{"_index":1555,"title":{},"body":{"classes/GenerateUserDto.html":{}}}],["user.dto.ts:6",{"_index":2474,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:8",{"_index":1240,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.event",{"_index":1261,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEventHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["user.event.ts",{"_index":1252,"title":{},"body":{"classes/CreateUserEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/LoginOfUserEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateUserEvent.html":{},"coverage.html":{}}}],["user.event.ts:2",{"_index":1421,"title":{},"body":{"classes/DeleteUserEvent.html":{},"classes/LoginOfUserEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["user.event.ts:3",{"_index":1420,"title":{},"body":{"classes/DeleteUserEvent.html":{},"classes/LoginOfUserEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["user.event.ts:4",{"_index":1258,"title":{},"body":{"classes/CreateUserEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/LoginOfUserEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["user.event.ts:5",{"_index":1254,"title":{},"body":{"classes/CreateUserEvent.html":{}}}],["user.event.ts:6",{"_index":1255,"title":{},"body":{"classes/CreateUserEvent.html":{}}}],["user.id",{"_index":676,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.interface",{"_index":644,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"controllers/UserController.html":{}}}],["user.interface.ts",{"_index":2213,"title":{},"body":{"interfaces/RequestUser.html":{},"coverage.html":{}}}],["user.jwttoken",{"_index":687,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.mail",{"_index":1233,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["user.password",{"_index":689,"title":{},"body":{"controllers/AuthController.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["user.profiles",{"_index":2096,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["user.query",{"_index":779,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUserQueryHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.query.ts",{"_index":1627,"title":{},"body":{"classes/GetUserQuery.html":{},"coverage.html":{}}}],["user.query.ts:1",{"_index":1628,"title":{},"body":{"classes/GetUserQuery.html":{}}}],["user.query.ts:2",{"_index":1629,"title":{},"body":{"classes/GetUserQuery.html":{}}}],["user.referralcodes",{"_index":2122,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["user.response",{"_index":1177,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/UserController.html":{},"classes/UserListResponse.html":{},"injectables/UserService.html":{}}}],["user.response.ts",{"_index":1279,"title":{},"body":{"classes/CreateUserResponse.html":{},"coverage.html":{}}}],["user.response.ts:11",{"_index":1283,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:12",{"_index":1287,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:13",{"_index":1284,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:14",{"_index":1282,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:15",{"_index":1286,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:17",{"_index":1285,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:4",{"_index":1280,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.service",{"_index":2555,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.usedreferralcodes",{"_index":2129,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["user.username",{"_index":1232,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["user/cqrs/handler/query/get",{"_index":736,"title":{},"body":{"modules/AuthModule.html":{}}}],["user/cqrs/query/get",{"_index":778,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/domain/entities/user.entity",{"_index":78,"title":{},"body":{"entities/AddressEntity.html":{},"modules/ApiMailModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"interfaces/RequestUser.html":{},"entities/SubscriptionEntity.html":{}}}],["user/domain/enum/user",{"_index":134,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{}}}],["user/domain/response/user",{"_index":652,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user/domain/response/user.response",{"_index":655,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user/user.module",{"_index":192,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{}}}],["user/user.service",{"_index":193,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["user?.currenthashedrefreshtoken",{"_index":1611,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{}}}],["user?.roles.includes(role",{"_index":3018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_not_found",{"_index":2876,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["useragent",{"_index":1526,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"dependencies.html":{}}}],["useragent.parse(req.headers['user",{"_index":1530,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["usercontroller",{"_index":2500,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userentity",{"_index":64,"title":{"entities/UserEntity.html":{}},"body":{"entities/AddressEntity.html":{},"modules/ApiMailModule.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"interfaces/RequestUser.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userentity.addresses",{"_index":65,"title":{},"body":{"entities/AddressEntity.html":{}}}],["userentity.notifications",{"_index":2029,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["userentity.subscriptions",{"_index":2365,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["userentity})@manytoone(undefined",{"_index":2121,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["userentity})@onetoone(undefined",{"_index":2128,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["userid",{"_index":406,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"classes/CreateUserEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserEvent.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserQuery.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserEvent.html":{},"interfaces/TokenPayload.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleCommand.html":{},"controllers/UserController.html":{},"interfaces/UserIdDto.html":{},"injectables/UserService.html":{}}}],["useriddto",{"_index":397,"title":{"interfaces/UserIdDto.html":{}},"body":{"controllers/AppTestE2eController.html":{},"controllers/UserController.html":{},"interfaces/UserIdDto.html":{},"coverage.html":{}}}],["userlist",{"_index":2639,"title":{},"body":{"classes/UserListResponse.html":{}}}],["userlist.foreach(user",{"_index":1638,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["userlistresponse",{"_index":1633,"title":{"classes/UserListResponse.html":{}},"body":{"classes/GetUserQueryHandler.html":{},"classes/UserListResponse.html":{},"coverage.html":{}}}],["userlistresponse.userlist",{"_index":1640,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["userlistresponse.userlist.push(new",{"_index":1639,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["userlogindto",{"_index":2643,"title":{"classes/UserLoginDto.html":{}},"body":{"classes/UserLoginDto.html":{},"coverage.html":{}}}],["userloginresponse",{"_index":651,"title":{"classes/UserLoginResponse.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UserLoginResponse.html":{},"coverage.html":{}}}],["usermodule",{"_index":157,"title":{"modules/UserModule.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":589,"title":{},"body":{"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"injectables/DatabaseConfiguration.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/InvalidUsernameException.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["username.exception",{"_index":1168,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["username.exception.ts",{"_index":1463,"title":{},"body":{"classes/DuplicateUsernameException.html":{},"classes/InvalidUsernameException.html":{},"coverage.html":{}}}],["username.exception.ts:3",{"_index":1464,"title":{},"body":{"classes/DuplicateUsernameException.html":{},"classes/InvalidUsernameException.html":{}}}],["username.length",{"_index":1235,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["username.query",{"_index":1594,"title":{},"body":{"classes/GetUserByUsernameQueryHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["username.query.ts",{"_index":1589,"title":{},"body":{"classes/GetUserByUsernameQuery.html":{},"coverage.html":{}}}],["username.query.ts:1",{"_index":1591,"title":{},"body":{"classes/GetUserByUsernameQuery.html":{}}}],["username.query.ts:2",{"_index":1592,"title":{},"body":{"classes/GetUserByUsernameQuery.html":{}}}],["usernamefield",{"_index":1929,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["usernameprofile",{"_index":2071,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["usernotfoundexception",{"_index":2678,"title":{"classes/UserNotFoundException.html":{}},"body":{"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userrepository",{"_index":515,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["userresponse",{"_index":654,"title":{"classes/UserResponse.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GetUserQueryHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{},"classes/UserListResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userroleenum",{"_index":133,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/GenerateUserDto.html":{},"classes/ListRolesDto.html":{},"classes/UpdateUserRoleCommand.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["userroleenum.public",{"_index":1216,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{}}}],["users",{"_index":402,"title":{},"body":{"controllers/AppTestE2eController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{}}}],["users.some(user",{"_index":1231,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["usersenderid",{"_index":2875,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userservice",{"_index":159,"title":{"injectables/UserService.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["userusername",{"_index":1622,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{}}}],["userusername.password",{"_index":1624,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{}}}],["util/config/database.configuration",{"_index":336,"title":{},"body":{"modules/AppModule.html":{}}}],["util/config/winston",{"_index":2145,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["util/exception/custom",{"_index":1165,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["util/exception/error",{"_index":175,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["v_0.0.4",{"_index":2952,"title":{},"body":{"index.html":{}}}],["v_card",{"_index":2906,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["valid",{"_index":1784,"title":{},"body":{"classes/InvalidMailException.html":{}}}],["validate",{"_index":630,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"changelog.html":{}}}],["validate(command.user",{"_index":2424,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["validate(login",{"_index":1926,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(newuser",{"_index":1207,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["validate(payload",{"_index":1912,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(request",{"_index":1895,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["validated",{"_index":2891,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["validatenested",{"_index":1851,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["validatetoken",{"_index":609,"title":{},"body":{"controllers/AuthController.html":{}}}],["validatetoken(data",{"_index":628,"title":{},"body":{"controllers/AuthController.html":{}}}],["validationerror",{"_index":1787,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["validator",{"_index":82,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/MailDto.html":{},"entities/NotificationEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":1256,"title":{},"body":{"classes/CreateUserEvent.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleEvent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":29,"title":{},"body":{"entities/AddressEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{}}}],["variable",{"_index":2793,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2980,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":1568,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["verbose",{"_index":1066,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["verboselogenum",{"_index":1075,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["verboselogenum.debug",{"_index":1096,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["verboselogenum.none",{"_index":1088,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["verification",{"_index":2762,"title":{},"body":{"changelog.html":{}}}],["verifyduplicatemailwithdeleted",{"_index":2428,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["verifyduplicatemailwithdeleted.deletedat",{"_index":2429,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["verifyduplicatemailwithdeleted.mail",{"_index":2431,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["verifyduplicatemailwithdeleted.username",{"_index":2434,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["verifypassword",{"_index":1615,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["verifypassword(plaintextpassword",{"_index":1616,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["version",{"_index":1093,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"properties.html":{}}}],["void",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserEventHandler.html":{}}}],["waiting",{"_index":1385,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["wallet",{"_index":2923,"title":{},"body":{"index.html":{}}}],["wallet_share",{"_index":2905,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wallet_share_api",{"_index":2867,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["walletshare",{"_index":1723,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["walletshareorg",{"_index":2934,"title":{},"body":{"index.html":{}}}],["warning",{"_index":2880,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["web/user.controller",{"_index":2665,"title":{},"body":{"modules/UserModule.html":{}}}],["website",{"_index":955,"title":{},"body":{"entities/CompanyEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocancommunicatewithenum",{"_index":892,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocancommunicatewithenum.all",{"_index":925,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocanseecardinformationenum",{"_index":890,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocanseecardinformationenum.all",{"_index":924,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocanseecardinformationenums",{"_index":829,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocansendmessagesenums",{"_index":830,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocansharecardenum",{"_index":894,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocansharecardenum.diffusible",{"_index":923,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocansharecardenums",{"_index":831,"title":{},"body":{"entities/CardEntity.html":{}}}],["winston",{"_index":1311,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"dependencies.html":{}}}],["winston.createlogger",{"_index":2985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.combine",{"_index":2987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.printf",{"_index":2991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.timestamp",{"_index":2988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.transports.file",{"_index":2997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["with.enum",{"_index":913,"title":{},"body":{"entities/CardEntity.html":{}}}],["with.enum.ts",{"_index":2865,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["withdeleted",{"_index":600,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["world",{"_index":294,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["ws",{"_index":2994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":1281,"title":{},"body":{"classes/CreateUserResponse.html":{},"classes/GetUserQuery.html":{},"classes/UserListResponse.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["z\\\\d@$!%*#?&]{6",{"_index":1189,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["z])(?=.*[a",{"_index":2450,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["z])(?=.*\\\\d)(?=.*[@$!%*#?&])[a",{"_index":1188,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["z]).{4",{"_index":2451,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["za",{"_index":1187,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["zip_code",{"_index":67,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CompanyEntity.html":{}}}],["zipcode",{"_index":23,"title":{},"body":{"entities/AddressEntity.html":{}}}],["zoom",{"_index":160,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"entities/AddressEntity.html":{"url":"entities/AddressEntity.html","title":"entity - AddressEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AddressEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/address.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                city\n                            \n                            \n                                company\n                            \n                            \n                                country\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                state\n                            \n                            \n                                street\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                            \n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'city', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, companyEntity => companyEntity.addresses, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'country', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: 'deleted_at', type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'is_active', type: 'boolean', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'latitude', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'longitude', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'state', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'street', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, userEntity => userEntity.addresses, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zipCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'zip_code', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:42\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport CompanyEntity from './company.entity';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\n@Entity({ name: 'address' })\nexport class AddressEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'street', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  street: string;\n\n  @Column({ name: 'city', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  city: string;\n\n  @Column({ name: 'state', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  state: string;\n\n  @Column({ name: 'country', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  country: string;\n\n  @Column({ name: 'zip_code', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  zipCode: string;\n\n  @Column({ name: 'latitude', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  latitude: string;\n\n  @Column({ name: 'longitude', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  longitude: string;\n\n  @Column({ name: 'is_active', type: 'boolean', default: true })\n  isActive: boolean;\n\n  @CreateDateColumn({ name: 'created_at', type: 'timestamp' })\n  createdAt: Date;\n\n  @UpdateDateColumn({ name: 'updated_at', type: 'timestamp' })\n  updatedAt: Date;\n\n  @DeleteDateColumn({ name: 'deleted_at', type: 'timestamp', nullable: true })\n  deletedAt: Date;\n\n  @ManyToOne(() => UserEntity, userEntity => userEntity.addresses, { nullable: true, onDelete: 'CASCADE' })\n  user: UserEntity;\n\n  @ManyToOne(() => CompanyEntity, companyEntity => companyEntity.addresses, { nullable: true, onDelete: 'CASCADE' })\n  company: CompanyEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ApiLandingPageController.html":{"url":"controllers/ApiLandingPageController.html","title":"controller - ApiLandingPageController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ApiLandingPageController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/api-landing-page.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api-landing-page\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteMail\n                            \n                            \n                                    Async\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMail(mail: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/delete-mail')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Delete mail'})@ApiOkResponse({type: undefined})@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/api-landing-page/api-landing-page.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/getAll')@ApiOperation({summary: 'Get all mails'})@ApiOkResponse({type: undefined})@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/api-landing-page/api-landing-page.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpCode, HttpStatus, UseGuards } from '@nestjs/common';\nimport { ApiLandingPageService } from './api-landing-page.service';\nimport { ApiOkResponse, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { MailResponse } from './domain/response/mail.response';\nimport { RoleGuard } from '../auth/guards/role.guard';\nimport { UserRoleEnum } from '../user/domain/enum/user-role.enum';\n\n@Controller('api-landing-page')\n@ApiTags('api-landing-page')\nexport class ApiLandingPageController {\n  constructor(private readonly apiLandingPageService: ApiLandingPageService) {}\n\n  @Get('/getAll')\n  @ApiOperation({ summary: 'Get all mails' })\n  @ApiOkResponse({ type: [MailResponse] })\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async getAll(): Promise {\n    return this.apiLandingPageService.getAll();\n  }\n\n  @Delete('/delete-mail')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({ summary: 'Delete mail' })\n  @ApiOkResponse({ type: [MailResponse] })\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async deleteMail(@Body() mail: string): Promise {\n    return this.apiLandingPageService.deleteMail(mail);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiLandingPageModule.html":{"url":"modules/ApiLandingPageModule.html","title":"module - ApiLandingPageModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiLandingPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiLandingPageModule\n\n\n\ncluster_ApiLandingPageModule_imports\n\n\n\ncluster_ApiLandingPageModule_providers\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nApiLandingPageModule\n\nApiLandingPageModule\n\nApiLandingPageModule -->\n\nApiLogModule->ApiLandingPageModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nApiLandingPageModule -->\n\nUserModule->ApiLandingPageModule\n\n\n\n\n\nApiLandingPageService\n\nApiLandingPageService\n\nApiLandingPageModule -->\n\nApiLandingPageService->ApiLandingPageModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nApiLandingPageModule -->\n\nApiLogService->ApiLandingPageModule\n\n\n\n\n\nUserService\n\nUserService\n\nApiLandingPageModule -->\n\nUserService->ApiLandingPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/api-landing-page/api-landing-page.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLandingPageService\n                        \n                        \n                            ApiLogService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ApiLandingPageController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { ApiLandingPageController } from './api-landing-page.controller';\nimport { ErrorCustomEventHandler } from '../../util/exception/error-handler/error-custom.event-handler';\nimport { DeleteMailCommandHandler } from './cqrs/handler/command/delete-mail.command-handler';\nimport { DeleteMailEventHandler } from './cqrs/handler/event/delete-mail.event-handler';\nimport { GetAllMailQueryHandler } from './cqrs/handler/query/get-all-mail.query-handler';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\nimport { ApiLandingPageService } from './api-landing-page.service';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport { UserModule } from '../user/user.module';\nimport { UserService } from '../user/user.service';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_LOG) || 3101 } },\n      { name: 'API_MAIL', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_MAIL) || 3102 } },\n      {\n        name: 'API_WAITING_LIST',\n        transport: Transport.TCP,\n        options: { port: Number(process.env.PORT_API_WAITING_LIST) || 3103 },\n      },\n    ]),\n    CqrsModule,\n    ApiLogModule,\n    UserModule,\n  ],\n  controllers: [ApiLandingPageController],\n  providers: [\n    ApiLandingPageService,\n    ApiLogService,\n    UserService,\n    ErrorCustomEventHandler,\n    CreateLogCommandHandler,\n    DeleteMailCommandHandler,\n    DeleteMailEventHandler,\n    GetAllMailQueryHandler,\n  ],\n})\nexport class ApiLandingPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiLandingPageService.html":{"url":"injectables/ApiLandingPageService.html","title":"injectable - ApiLandingPageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiLandingPageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/api-landing-page.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteMail\n                            \n                            \n                                    Async\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/api-landing-page.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMail(mail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-landing-page/api-landing-page.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-landing-page/api-landing-page.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { DeleteMailCommand } from './cqrs/command/delete-mail.command';\nimport { MailResponse } from './domain/response/mail.response';\nimport { GetAllMailQuery } from './cqrs/query/get-all-mail.query';\nimport { MailLandingPageDto } from './domain/dto/mail-landing-page.dto';\n\n@Injectable()\nexport class ApiLandingPageService {\n  constructor(private readonly commandBus: CommandBus, private readonly queryBus: QueryBus) {}\n\n  async deleteMail(mail: string): Promise {\n    await this.commandBus.execute(\n      new DeleteMailCommand({\n        mail: mail,\n      }),\n    );\n  }\n\n  async getAll(): Promise {\n    return await this.queryBus.execute(new GetAllMailQuery());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiLogModule.html":{"url":"modules/ApiLogModule.html","title":"module - ApiLogModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiLogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiLogModule\n\n\n\ncluster_ApiLogModule_providers\n\n\n\ncluster_ApiLogModule_imports\n\n\n\n\nApiLogModule\n\nApiLogModule\n\nApiLogModule -->\n\nApiLogModule->ApiLogModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nApiLogModule -->\n\nApiLogService->ApiLogModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/api-log/api-log.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ApiLogService } from './api-log.service';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { ErrorCustomEventHandler } from '../../util/exception/error-handler/error-custom.event-handler';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { CreateLogCommandHandler } from './cqrs/handler/command/create-log.command-handler';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_LOG) || 3101 } },\n    ]),\n    CqrsModule,\n    ApiLogModule,\n  ],\n  controllers: [],\n  providers: [ApiLogService, ErrorCustomEventHandler, CreateLogCommandHandler],\n})\nexport class ApiLogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiLogService.html":{"url":"injectables/ApiLogService.html","title":"injectable - ApiLogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiLogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/api-log.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createLog\n                            \n                            \n                                    Async\n                                createLogForMethode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/api-log.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createLog\n                        \n                    \n                \n            \n            \n                \n                    \n                    createLog(log: CreateLogDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-log/api-log.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    log\n                                    \n                                                CreateLogDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createLogForMethode\n                        \n                    \n                \n            \n            \n                \n                    \n                    createLogForMethode(log: CreateMethodLogDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-log/api-log.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    log\n                                    \n                                                CreateMethodLogDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateLogDto } from './domain/dto/create-log.dto';\nimport { CommandBus } from '@nestjs/cqrs';\nimport { CreateLogCommand } from './cqrs/command/create-log.command';\nimport { CreateMethodLogDto } from './domain/dto/create-method-log.dto';\n\n@Injectable()\nexport class ApiLogService {\n  constructor(private readonly commandBus: CommandBus) {}\n  async createLog(log: CreateLogDto): Promise {\n    await this.commandBus.execute(\n      new CreateLogCommand({\n        ...log,\n      }),\n    );\n  }\n\n  async createLogForMethode(log: CreateMethodLogDto): Promise {\n    const createLogDto: CreateLogDto = new CreateLogDto({\n      method: log.method,\n      module: log.module,\n      body: Object(log.body),\n    });\n    await this.commandBus.execute(\n      new CreateLogCommand({\n        ...createLogDto,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ApiMailController.html":{"url":"controllers/ApiMailController.html","title":"controller - ApiMailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ApiMailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/api-mail.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api-mail\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMail(mailDto: MailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')@HttpCode(200)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/api-mail/api-mail.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mailDto\n                                    \n                                                MailDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, Post, UseGuards } from '@nestjs/common';\nimport { ApiMailService } from './api-mail.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport { RoleGuard } from '../auth/guards/role.guard';\nimport { UserRoleEnum } from '../user/domain/enum/user-role.enum';\nimport { MailDto } from './domain/dto/mail.dto';\n\n@Controller('api-mail')\n@ApiTags('Mail')\nexport class ApiMailController {\n  constructor(private readonly apiMailService: ApiMailService) {}\n\n  @Post('/')\n  @HttpCode(200)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async sendMail(@Body() mailDto: MailDto): Promise {\n    await this.apiMailService.sendMail(mailDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiMailModule.html":{"url":"modules/ApiMailModule.html","title":"module - ApiMailModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiMailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiMailModule\n\n\n\ncluster_ApiMailModule_providers\n\n\n\ncluster_ApiMailModule_imports\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nApiMailModule\n\nApiMailModule\n\nApiMailModule -->\n\nApiLogModule->ApiMailModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nApiMailModule -->\n\nUserModule->ApiMailModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nApiMailModule -->\n\nApiLogService->ApiMailModule\n\n\n\n\n\nApiMailService\n\nApiMailService\n\nApiMailModule -->\n\nApiMailService->ApiMailModule\n\n\n\n\n\nUserService\n\nUserService\n\nApiMailModule -->\n\nUserService->ApiMailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/api-mail/api-mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            ApiMailService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ApiMailController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { SendMailCommandHandler } from './cqrs/handler/command/send-mail.command';\nimport { SendMailEventHandler } from './cqrs/handler/event/send-mail.event-handler';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport { ErrorCustomEventHandler } from '../../util/exception/error-handler/error-custom.event-handler';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\nimport { ApiMailController } from './api-mail.controller';\nimport { ApiMailService } from './api-mail.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { UserModule } from '../user/user.module';\nimport { UserService } from '../user/user.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserEntity]),\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_LOG) || 3101 } },\n      { name: 'API_MAIL', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_MAIL) || 3102 } },\n    ]),\n    CqrsModule,\n    ApiLogModule,\n    UserModule,\n  ],\n  controllers: [ApiMailController],\n  providers: [\n    ApiLogService,\n    ApiMailService,\n    UserService,\n    ErrorCustomEventHandler,\n    SendMailCommandHandler,\n    SendMailEventHandler,\n    CreateLogCommandHandler,\n  ],\n})\nexport class ApiMailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiMailService.html":{"url":"injectables/ApiMailService.html","title":"injectable - ApiMailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiMailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/api-mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/api-mail.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMail(mailDto: MailDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-mail/api-mail.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mailDto\n                                    \n                                                MailDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { SendMailCommand } from './cqrs/command/send-mail.command';\nimport { MailDto } from './domain/dto/mail.dto';\n\n@Injectable()\nexport class ApiMailService {\n  constructor(private readonly commandBus: CommandBus, private readonly queryBus: QueryBus) {}\n\n  async sendMail(mailDto: MailDto): Promise {\n    await this.commandBus.execute(\n      new SendMailCommand({\n        ...mailDto,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HttpCode(200)@ApiResponse({status: 200, description: 'Hello World!', content: undefined})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:31\n                \n            \n\n\n            \n                \n                       HTTP/1.1 200 OK\n   Hello World!\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\n\n@Controller()\n@ApiTags('HelloWorld')\nexport class AppController {\n  /**\n   * @ignore\n   */\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * @api {get} / Hello World\n   * @apiName GetHello\n   * @apiGroup HelloWorld\n   * @apiVersion 0.0.1\n   * @apiDescription Hello World!\n   * @apiSuccess {String} text/html Hello World!\n   * @apiSuccessExample {text/html} Success-Response:\n   *    HTTP/1.1 200 OK\n   *    Hello World!\n   */\n  @Get()\n  @HttpCode(200)\n  @ApiResponse({\n    status: 200,\n    description: 'Hello World!',\n    content: { 'text/html': { example: 'Hello World!' } },\n  })\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nApiLandingPageModule\n\nApiLandingPageModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiLandingPageModule->AppModule\n\n\n\n\n\nApiLogModule\n\nApiLogModule\n\nAppModule -->\n\nApiLogModule->AppModule\n\n\n\n\n\nApiMailModule\n\nApiMailModule\n\nAppModule -->\n\nApiMailModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nEntitiesToMoveModule\n\nEntitiesToMoveModule\n\nAppModule -->\n\nEntitiesToMoveModule->AppModule\n\n\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nAppModule -->\n\nHealthCheckModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nAppModule -->\n\nApiLogService->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLandingPageModule\n                        \n                        \n                            ApiLogModule\n                        \n                        \n                            ApiMailModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            EntitiesToMoveModule\n                        \n                        \n                            HealthCheckModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { DatabaseConfiguration } from './util/config/database.configuration';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigModule } from '@nestjs/config';\nimport HealthCheckModule from './api/health-check/health-check.module';\nimport { EntitiesToMoveModule } from './api/entities-to-create/entities-to-move.module';\nimport { UserModule } from './api/user/user.module';\nimport { ApiLogModule } from './api/api-log/api-log.module';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { RequestLoggingMiddleware } from './middleware/request-logging.middleware';\nimport { ResponseLoggingMiddleware } from './middleware/response-logging.middleware';\nimport { ErrorLoggingMiddleware } from './middleware/error-logging.middleware';\nimport { ApiLogService } from './api/api-log/api-log.service';\nimport { AuthModule } from './api/auth/auth.module';\nimport { ApiMailModule } from './api/api-mail/api-mail.module';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { ApiLandingPageModule } from './api/api-landing-page/api-landing-page.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ isGlobal: true }),\n    TypeOrmModule.forRootAsync({\n      useClass: DatabaseConfiguration,\n    }),\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: 3201 } },\n      { name: 'API_MAIL', transport: Transport.TCP, options: { port: 3202 } },\n    ]),\n    // ________ Module ________\n    HealthCheckModule,\n    UserModule,\n    ApiLogModule,\n    AuthModule,\n    EntitiesToMoveModule,\n    ApiMailModule,\n    CqrsModule,\n    ApiLandingPageModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService, ApiLogService],\n})\nexport class AppModule implements NestModule {\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types,@typescript-eslint/explicit-function-return-type\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(RequestLoggingMiddleware, ResponseLoggingMiddleware, ErrorLoggingMiddleware).forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppTestE2eController.html":{"url":"controllers/AppTestE2eController.html","title":"controller - AppTestE2eController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppTestE2eController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/test-environment/app-test-e2e.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearDatabaseTest\n                            \n                            \n                                createUserTest\n                            \n                            \n                                deleteUserTest\n                            \n                            \n                                getAllUsersTest\n                            \n                            \n                                getUserTest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearDatabaseTest\n                        \n                    \n                \n            \n            \n                \nclearDatabaseTest()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new IsTestEnvironmentPipe())@Get('/api/test/clear-database-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUserTest\n                        \n                    \n                \n            \n            \n                \ncreateUserTest(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new IsTestEnvironmentPipe())@Post('/api/test/create-user-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUserTest\n                        \n                    \n                \n            \n            \n                \ndeleteUserTest(userIdDto: UserIdDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@UsePipes(new IsTestEnvironmentPipe())@Delete('/api/test/remove-user-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userIdDto\n                                    \n                                                UserIdDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUsersTest\n                        \n                    \n                \n            \n            \n                \ngetAllUsersTest()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new IsTestEnvironmentPipe())@Get('/api/test/get-all-users-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserTest\n                        \n                    \n                \n            \n            \n                \ngetUserTest(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new IsTestEnvironmentPipe())@Get('/api/test/get-user-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpCode, Post, UsePipes } from '@nestjs/common';\nimport { AppTestE2eService } from './app-test-e2e.service';\nimport { IsTestEnvironmentPipe } from '../../src/util/pipe/is-test-environment.pipe';\nimport { CreateUserDto } from '../../src/api/user/domain/dto/create-user.dto';\nimport { UserEntity } from '../../src/api/user/domain/entities/user.entity';\nimport { UserIdDto } from '../../src/api/user/domain/dto/user-id.dto';\n\n@Controller()\nexport class AppTestE2eController {\n  constructor(private readonly appService: AppTestE2eService) {}\n\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Get('/api/test/clear-database-test')\n  clearDatabaseTest(): Promise {\n    return this.appService.clearDatabaseTest();\n  }\n\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Post('/api/test/create-user-test')\n  createUserTest(@Body() createUserDto: CreateUserDto): Promise {\n    return this.appService.createUserTest(createUserDto);\n  }\n\n  @HttpCode(204)\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Delete('/api/test/remove-user-test')\n  deleteUserTest(@Body() userIdDto: UserIdDto): Promise {\n    return this.appService.removeUser(userIdDto.userId);\n  }\n\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Get('/api/test/get-all-users-test')\n  getAllUsersTest(): Promise {\n    return this.appService.getAllUsers();\n  }\n\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Get('/api/test/get-user-test')\n  getUserTest(@Body() userId: string): Promise {\n    return this.appService.getUser(userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppTestE2eModule.html":{"url":"modules/AppTestE2eModule.html","title":"module - AppTestE2eModule","body":"\n                   \n\n\n\n\n    Modules\n    AppTestE2eModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppTestE2eModule\n\n\n\ncluster_AppTestE2eModule_imports\n\n\n\ncluster_AppTestE2eModule_providers\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nAppTestE2eModule\n\nAppTestE2eModule\n\nAppTestE2eModule -->\n\nAppModule->AppTestE2eModule\n\n\n\n\n\nAppTestE2eService\n\nAppTestE2eService\n\nAppTestE2eModule -->\n\nAppTestE2eService->AppTestE2eModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            test/test-environment/app-test-e2e.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppTestE2eService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppTestE2eController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppTestE2eController } from './app-test-e2e.controller';\nimport { AppTestE2eService } from './app-test-e2e.service';\nimport { AppModule } from '../../src/app.module';\nimport { CardEntity } from '../../src/api/entities-to-create/card.entity';\nimport CompanyEntity from '../../src/api/entities-to-create/company.entity';\nimport { CompanyEmployeeEntity } from '../../src/api/entities-to-create/company-employee.entity';\nimport { ConnectedCardEntity } from '../../src/api/entities-to-create/connected-card.entity';\nimport { ConversationEntity } from '../../src/api/entities-to-create/conversation.entity';\nimport { DiscountCodeEntity } from '../../src/api/entities-to-create/discount-code.entity';\nimport { GroupEntity } from '../../src/api/entities-to-create/group.entity';\nimport { GroupMembershipEntity } from '../../src/api/entities-to-create/group-membership.entity';\nimport { InvoicesEntity } from '../../src/api/entities-to-create/invoices.entity';\nimport { JoinedConversation } from '../../src/api/entities-to-create/joined-conversation.entity';\nimport { MediaEntity } from '../../src/api/entities-to-create/media.entity';\nimport { MessageEntity } from '../../src/api/entities-to-create/message.entity';\nimport { OccupationEntity } from '../../src/api/entities-to-create/occupation.entity';\nimport { PlanEntity } from '../../src/api/entities-to-create/plan.entity';\nimport { ProfileEntity } from '../../src/api/entities-to-create/profile.entity';\nimport { SocialNetworkEntity } from '../../src/api/entities-to-create/social-network.entity';\nimport StripEventEntity from '../../src/api/entities-to-create/strip-event.entity';\nimport { SubscriptionEntity } from '../../src/api/entities-to-create/subscription.entity';\nimport { UserEntity } from '../../src/api/user/domain/entities/user.entity';\nimport { NotificationEntity } from '../../src/api/entities-to-create/notification.entity';\nimport { ReferralCodeEntity } from '../../src/api/entities-to-create/referal-code.entity';\nimport { AddressEntity } from '../../src/api/entities-to-create/address.entity';\n\n@Module({\n  imports: [\n    AppModule,\n    TypeOrmModule.forFeature([\n      CardEntity,\n      CompanyEntity,\n      CompanyEmployeeEntity,\n      ConnectedCardEntity,\n      ConversationEntity,\n      DiscountCodeEntity,\n      GroupEntity,\n      GroupMembershipEntity,\n      InvoicesEntity,\n      JoinedConversation,\n      MediaEntity,\n      MessageEntity,\n      OccupationEntity,\n      PlanEntity,\n      ProfileEntity,\n      SocialNetworkEntity,\n      StripEventEntity,\n      SubscriptionEntity,\n      UserEntity,\n      NotificationEntity,\n      ReferralCodeEntity,\n      AddressEntity,\n    ]),\n  ],\n  controllers: [AppTestE2eController],\n  providers: [AppTestE2eService],\n})\nexport class AppTestE2eModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppTestE2eService.html":{"url":"injectables/AppTestE2eService.html","title":"injectable - AppTestE2eService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppTestE2eService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/test-environment/app-test-e2e.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearDatabaseTest\n                            \n                            \n                                    Async\n                                createUserTest\n                            \n                            \n                                    Async\n                                getAllUsers\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                removeUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, cardRepository: Repository, companyRepository: Repository, companyEmployeeRepository: Repository, connectedCardRepository: Repository, conversationRepository: Repository, discountCodeRepository: Repository, groupRepository: Repository, groupMembershipRepository: Repository, invoicesRepository: Repository, joinedConversationRepository: Repository, mediaRepository: Repository, messageRepository: Repository, occupationRepository: Repository, planRepository: Repository, profileRepository: Repository, socialNetworkRepository: Repository, stripEventRepository: Repository, subscriptionRepository: Repository, notificationRepository: Repository, referralCodeRepository: Repository, addressRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in test/test-environment/app-test-e2e.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cardRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        companyRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        companyEmployeeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connectedCardRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conversationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        discountCodeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        groupRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        groupMembershipRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        invoicesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        joinedConversationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mediaRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        planRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        socialNetworkRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stripEventRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        subscriptionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        referralCodeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addressRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        clearDatabaseTest\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearDatabaseTest()\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUserTest\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUserTest(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUsers()\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUser(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AddressEntity } from '../../src/api/entities-to-create/address.entity';\nimport StripEventEntity from '../../src/api/entities-to-create/strip-event.entity';\nimport { ReferralCodeEntity } from '../../src/api/entities-to-create/referal-code.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { JoinedConversation } from '../../src/api/entities-to-create/joined-conversation.entity';\nimport { SocialNetworkEntity } from '../../src/api/entities-to-create/social-network.entity';\nimport { SubscriptionEntity } from '../../src/api/entities-to-create/subscription.entity';\nimport { GroupMembershipEntity } from '../../src/api/entities-to-create/group-membership.entity';\nimport { CardEntity } from '../../src/api/entities-to-create/card.entity';\nimport { UserEntity } from '../../src/api/user/domain/entities/user.entity';\nimport { ProfileEntity } from '../../src/api/entities-to-create/profile.entity';\nimport { DiscountCodeEntity } from '../../src/api/entities-to-create/discount-code.entity';\nimport { MessageEntity } from '../../src/api/entities-to-create/message.entity';\nimport { GroupEntity } from '../../src/api/entities-to-create/group.entity';\nimport CompanyEntity from '../../src/api/entities-to-create/company.entity';\nimport { CompanyEmployeeEntity } from '../../src/api/entities-to-create/company-employee.entity';\nimport { PlanEntity } from '../../src/api/entities-to-create/plan.entity';\nimport { ConversationEntity } from '../../src/api/entities-to-create/conversation.entity';\nimport { InvoicesEntity } from '../../src/api/entities-to-create/invoices.entity';\nimport { NotificationEntity } from '../../src/api/entities-to-create/notification.entity';\nimport { ConnectedCardEntity } from '../../src/api/entities-to-create/connected-card.entity';\nimport { MediaEntity } from '../../src/api/entities-to-create/media.entity';\nimport { OccupationEntity } from '../../src/api/entities-to-create/occupation.entity';\nimport { Repository } from 'typeorm';\nimport { CreateUserDto } from '../../src/api/user/domain/dto/create-user.dto';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class AppTestE2eService {\n  constructor(\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n    @InjectRepository(CardEntity)\n    private readonly cardRepository: Repository,\n    @InjectRepository(CompanyEntity)\n    private readonly companyRepository: Repository,\n    @InjectRepository(CompanyEmployeeEntity)\n    private readonly companyEmployeeRepository: Repository,\n    @InjectRepository(ConnectedCardEntity)\n    private readonly connectedCardRepository: Repository,\n    @InjectRepository(ConversationEntity)\n    private readonly conversationRepository: Repository,\n    @InjectRepository(DiscountCodeEntity)\n    private readonly discountCodeRepository: Repository,\n    @InjectRepository(GroupEntity)\n    private readonly groupRepository: Repository,\n    @InjectRepository(GroupMembershipEntity)\n    private readonly groupMembershipRepository: Repository,\n    @InjectRepository(InvoicesEntity)\n    private readonly invoicesRepository: Repository,\n    @InjectRepository(JoinedConversation)\n    private readonly joinedConversationRepository: Repository,\n    @InjectRepository(MediaEntity)\n    private readonly mediaRepository: Repository,\n    @InjectRepository(MessageEntity)\n    private readonly messageRepository: Repository,\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    @InjectRepository(PlanEntity)\n    private readonly planRepository: Repository,\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    @InjectRepository(SocialNetworkEntity)\n    private readonly socialNetworkRepository: Repository,\n    @InjectRepository(StripEventEntity)\n    private readonly stripEventRepository: Repository,\n    @InjectRepository(SubscriptionEntity)\n    private readonly subscriptionRepository: Repository,\n    @InjectRepository(NotificationEntity)\n    private readonly notificationRepository: Repository,\n    @InjectRepository(ReferralCodeEntity)\n    private readonly referralCodeRepository: Repository,\n    @InjectRepository(AddressEntity)\n    private readonly addressRepository: Repository,\n  ) {}\n\n  async clearDatabaseTest(): Promise {\n    await this.userRepository.query('DELETE FROM \"user\";');\n    await this.cardRepository.query('DELETE FROM \"card\";');\n    await this.companyRepository.query('DELETE FROM \"company\";');\n    await this.companyEmployeeRepository.query('DELETE FROM \"company_employee\";');\n    await this.connectedCardRepository.query('DELETE FROM \"connected_card\";');\n    await this.conversationRepository.query('DELETE FROM \"conversation\";');\n    await this.discountCodeRepository.query('DELETE FROM \"discount_codes\";');\n    await this.groupRepository.query('DELETE FROM \"group\";');\n    await this.groupMembershipRepository.query('DELETE FROM \"group_membership\";');\n    await this.invoicesRepository.query('DELETE FROM \"invoices\";');\n    await this.joinedConversationRepository.query('DELETE FROM \"joined_conversation\";');\n    await this.mediaRepository.query('DELETE FROM \"media\";');\n    await this.messageRepository.query('DELETE FROM \"message\";');\n    await this.occupationRepository.query('DELETE FROM \"occupation\";');\n    await this.planRepository.query('DELETE FROM \"plan\";');\n    await this.profileRepository.query('DELETE FROM \"profile\";');\n    await this.socialNetworkRepository.query('DELETE FROM \"social_network\";');\n    await this.stripEventRepository.query('DELETE FROM \"strip_event\";');\n    await this.subscriptionRepository.query('DELETE FROM \"subscription\";');\n    await this.notificationRepository.query('DELETE FROM \"notification\";');\n    await this.referralCodeRepository.query('DELETE FROM \"referral_code\";');\n    await this.addressRepository.query('DELETE FROM \"address\";');\n\n    return;\n  }\n\n  async createUserTest(createUserDto: CreateUserDto): Promise {\n    return await this.userRepository.save({\n      username: createUserDto.username,\n      mail: createUserDto.mail,\n      password: bcrypt.hashSync(createUserDto.password, 10),\n      roles: createUserDto.roles,\n    });\n  }\n\n  async removeUser(userId: string): Promise {\n    await this.userRepository.softDelete({ id: userId });\n  }\n\n  async getUser(userId: string): Promise {\n    return await this.userRepository.findOne({\n      where: {\n        id: userId,\n      },\n    });\n  }\n\n  async getAllUsers(): Promise {\n    return await this.userRepository.find({\n      withDeleted: true,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                    Async\n                                logOut\n                            \n                            \n                                refresh\n                            \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                    Async\n                                signUp\n                            \n                            \n                                    Async\n                                validateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate(request: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtRefreshGuard)@Get('/actual')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        logOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    logOut(request: RequestUser, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@UseGuards(JwtRefreshGuard)@Post('/logout')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh(request: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtRefreshGuard)@Get('/refresh')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(request: RequestUser, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(200)@UseGuards(LocalAuthenticationGuard)@Post('/login')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(signUpDto: SignUpDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/register')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signUpDto\n                                    \n                                                SignUpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateToken(data: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'validate-token'})\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { SignUpDto } from './dto/sign-up.dto';\nimport { AuthService } from './auth.service';\nimport { Body, Controller, Get, HttpCode, HttpException, HttpStatus, Post, Req, Res, UseGuards } from '@nestjs/common';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { LocalAuthenticationGuard } from './guards/auth.guard';\nimport { RequestUser } from './interface/request-user.interface';\nimport { Response } from 'express';\nimport JwtRefreshGuard from './guards/jwt-refresh-token.guard';\nimport { UserService } from '../user/user.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport { RoleGuard } from './guards/role.guard';\nimport { UserRoleEnum } from '../user/domain/enum/user-role.enum';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { UserLoginResponse } from '../user/domain/response/user-login.response';\nimport { UserResponse } from '../user/domain/response/user.response';\n\n@Controller('/auth')\n@ApiTags('auth')\nexport class AuthController {\n  constructor(private readonly userService: UserService, private readonly authService: AuthService) {}\n\n  @Post('/register')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async signUp(@Body() signUpDto: SignUpDto): Promise {\n    try {\n      return await this.authService.signup(signUpDto);\n    } catch (error) {\n      throw new HttpException(\n        {\n          type: error.message.split(':')[0],\n          error: error.message.split(':')[1],\n        },\n        400,\n      );\n    }\n  }\n\n  @HttpCode(200)\n  @UseGuards(LocalAuthenticationGuard)\n  @Post('/login')\n  async signIn(@Req() request: RequestUser, @Res() response: Response): Promise {\n    const { user } = request;\n    const accessTokenCookie = this.authService.getCookieWithJwtToken(user.id);\n    const refreshTokenCookie = this.authService.getCookieWithJwtRefreshToken(user.id);\n    await this.userService.setCurrentRefreshToken(refreshTokenCookie.token, user.id);\n    if (!request.res) {\n      throw new Error('Response object missing');\n    }\n\n    request.res.setHeader('Set-Cookie', [accessTokenCookie.auth, refreshTokenCookie.cookie]);\n    user.currentHashedRefreshToken = refreshTokenCookie.token;\n    user.jwtToken = accessTokenCookie.token;\n    user.password = '';\n    return response.send(user);\n  }\n\n  @HttpCode(204)\n  @UseGuards(JwtRefreshGuard)\n  @Post('/logout')\n  async logOut(@Req() request: RequestUser, @Res() response: Response): Promise {\n    await this.userService.removeRefreshToken(request.user.id);\n    response.setHeader('Set-Cookie', this.authService.getCookieForLogOut());\n    return response.sendStatus(204);\n  }\n\n  //getCurrentUser\n  @UseGuards(JwtRefreshGuard)\n  @Get('/actual')\n  authenticate(@Req() request: RequestUser): UserEntity {\n    return request.user;\n  }\n\n  @UseGuards(JwtRefreshGuard)\n  @Get('/refresh')\n  refresh(@Req() request: RequestUser): UserEntity {\n    const accessTokenCookie = this.authService.getCookieWithJwtToken(request.user.id);\n\n    if (!request.res) {\n      throw new Error('Response object missing');\n    }\n\n    request.res.setHeader('Set-Cookie', accessTokenCookie.token);\n    return request.user;\n  }\n\n  // MessagePatern\n\n  @MessagePattern({ cmd: 'validate-token' })\n  async validateToken(data: string): Promise {\n    try {\n      return await this.authService.getUserFromAuthToken(data);\n    } catch (e) {\n      throw new HttpException('Wrong token provided', HttpStatus.BAD_REQUEST);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nApiLogModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nApiLogService\n\nApiLogService\n\nAuthModule -->\n\nApiLogService->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtRefreshTokenStrategy\n\nJwtRefreshTokenStrategy\n\nAuthModule -->\n\nJwtRefreshTokenStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nUserService\n\nUserService\n\nAuthModule -->\n\nUserService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            AuthService\n                        \n                        \n                            JwtRefreshTokenStrategy\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { AuthService } from './auth.service';\nimport { LocalStrategy } from './strategy/passport-local.strategy';\nimport { AuthController } from './auth.controller';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { config } from 'dotenv';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { RegisterHandler } from './cqrs/handler/command/register.handler';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { JwtRefreshTokenStrategy } from './strategy/jwt-refresh-token.strategy';\nimport { UserService } from '../user/user.service';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { GetUserLoginQueryHandler } from '../user/cqrs/handler/query/get-user-login.query-handler';\nimport { RegisterEventHandler } from './cqrs/event-handler/register.event-handler';\nimport { ErrorCustomEventHandler } from '../../util/exception/error-handler/error-custom.event-handler';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport * as process from 'process';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\n\nconfig();\n\n@Module({\n  imports: [\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: {\n        expiresIn: process.env.JWT_EXPIRATION_TIME,\n      },\n    }),\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_LOG) || 3101 } },\n      { name: 'API_MAIL', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_MAIL) || 3102 } },\n      {\n        name: 'API_LANDING_PAGE',\n        transport: Transport.TCP,\n        options: { port: Number(process.env.PORT_API_WAITING_LIST) || 3103 },\n      },\n    ]),\n    PassportModule,\n    TypeOrmModule.forFeature([UserEntity]),\n    CqrsModule,\n    ApiLogModule,\n  ],\n  providers: [\n    AuthService,\n    UserService,\n    ApiLogService,\n    LocalStrategy,\n    JwtStrategy,\n    JwtRefreshTokenStrategy,\n    RegisterHandler,\n    GetUserLoginQueryHandler,\n    RegisterEventHandler,\n    ErrorCustomEventHandler,\n    CreateLogCommandHandler,\n  ],\n  controllers: [AuthController],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCookieForLogOut\n                            \n                            \n                                    Public\n                                getCookieWithJwtRefreshToken\n                            \n                            \n                                    Public\n                                getCookieWithJwtToken\n                            \n                            \n                                    Async\n                                getUserFromAuthToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCookieForLogOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCookieForLogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCookieWithJwtRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCookieWithJwtRefreshToken(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCookieWithJwtToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCookieWithJwtToken(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserFromAuthToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserFromAuthToken(authenticationToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authenticationToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(username: string, plainTextPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    plainTextPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(signUpDto: SignUpDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signUpDto\n                                    \n                                                SignUpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { TokenPayload } from './interface/token-payload.interface';\nimport { SignUpDto } from './dto/sign-up.dto';\nimport { RegisterCommand } from './cqrs/command/register.command';\nimport { UserLoginResponse } from '../user/domain/response/user-login.response';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { GetUserQuery } from '../user/cqrs/query/get-user.query';\nimport { GetUserLoginQuery } from '../user/cqrs/query/get-user-login.query';\nimport { UserResponse } from '../user/domain/response/user.response';\n\n@Injectable()\nexport class AuthService {\n  constructor(private jwtService: JwtService, private commandBus: CommandBus, private queryBus: QueryBus) {}\n\n  async signup(signUpDto: SignUpDto): Promise {\n    return new UserResponse({\n      ...(await this.commandBus.execute(new RegisterCommand(signUpDto.username, signUpDto.mail, signUpDto.password))),\n    });\n  }\n\n  async login(username: string, plainTextPassword: string): Promise {\n    try {\n      return await this.queryBus.execute(new GetUserLoginQuery(username, plainTextPassword));\n    } catch (error) {\n      throw new HttpException('Wrong credentials provided', HttpStatus.UNAUTHORIZED);\n    }\n  }\n\n  public getCookieWithJwtToken(userId: string): { token: string; auth: string } {\n    const payload: TokenPayload = { userId };\n    const token = this.jwtService.sign(payload, {\n      secret: process.env.JWT_ACCESS_TOKEN_SECRET,\n      expiresIn: `${process.env.JWT_ACCESS_TOKEN_EXPIRATION_TIME}`,\n    });\n    return {\n      token: token,\n      auth: `Authentication=${token}; HttpOnly; Path=/; Max-Age=${process.env.JWT_ACCESS_TOKEN_EXPIRATION_TIME}`,\n    };\n  }\n\n  public getCookieWithJwtRefreshToken(userId: string): { cookie: string; token: string } {\n    const payload: TokenPayload = { userId };\n    const token = this.jwtService.sign(payload, {\n      secret: process.env.JWT_REFRESH_TOKEN_SECRET,\n      expiresIn: `${process.env.JWT_REFRESH_TOKEN_EXPIRATION_TIME}`,\n    });\n    const cookie = `Refresh=${token}; HttpOnly; Path=/; Max-Age=${process.env.JWT_REFRESH_TOKEN_EXPIRATION_TIME}`;\n    return {\n      cookie,\n      token,\n    };\n  }\n\n  public getCookieForLogOut(): string[] {\n    return ['Authentication=; HttpOnly; Path=/; Max-Age=0', 'Refresh=; HttpOnly; Path=/; Max-Age=0'];\n  }\n\n  async getUserFromAuthToken(authenticationToken: string): Promise {\n    const payload: TokenPayload = this.jwtService.verify(authenticationToken, {\n      secret: process.env.JWT_REFRESH_TOKEN_SECRET,\n    });\n    if (payload.userId) {\n      return this.queryBus.execute(new GetUserQuery(payload.userId));\n    }\n    throw new Error('Invalid token');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CardEntity.html":{"url":"entities/CardEntity.html","title":"entity - CardEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CardEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/card.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                birthday\n                            \n                            \n                                    Optional\n                                companyName\n                            \n                            \n                                connectedCardOne\n                            \n                            \n                                connectedCardTwo\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                emails\n                            \n                            \n                                    Optional\n                                firstname\n                            \n                            \n                                groupMemberships\n                            \n                            \n                                id\n                            \n                            \n                                isOwnerPro\n                            \n                            \n                                    Optional\n                                lastname\n                            \n                            \n                                media\n                            \n                            \n                                    Optional\n                                messages\n                            \n                            \n                                    Optional\n                                notes\n                            \n                            \n                                numberOfShares\n                            \n                            \n                                    Optional\n                                occupation\n                            \n                            \n                                occupations\n                            \n                            \n                                owner\n                            \n                            \n                                phones\n                            \n                            \n                                profilesWhoSavedCard\n                            \n                            \n                                    Optional\n                                socialName\n                            \n                            \n                                socialNetwork\n                            \n                            \n                                transferableStatusCardEnum\n                            \n                            \n                                typeOfCardEnum\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                urls\n                            \n                            \n                                whoCanSeeCardInformationEnums\n                            \n                            \n                                whoCanSendMessagesEnums\n                            \n                            \n                                whoCanShareCardEnums\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectedCardOne\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConnectedCardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, connectedCard => connectedCard.cardEntityOne, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectedCardTwo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConnectedCardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, connectedCard => connectedCard.cardEntityTwo, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:155\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:161\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emails\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})@IsEmail({}, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupMemberships\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupMembershipEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, groupMembership => groupMembership.card, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOwnerPro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        media\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.CardPicture, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, message => message.author, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberOfShares\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'integer', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        occupation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OccupationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, occupation => occupation.cards, {onDelete: 'SET NULL'})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profile => profile.personalCards)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profilesWhoSavedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, profile => profile.savedCard)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        socialName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        socialNetwork\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SocialNetworkEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, socialNetwork => socialNetwork.cards, {onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transferableStatusCardEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransferableStatusCardEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeOfCardEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TypeOfCardEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: TypeOfCardEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:158\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        urls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})@IsUrl({}, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whoCanSeeCardInformationEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanSeeCardInformationEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:145\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whoCanSendMessagesEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanCommunicateWithEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:148\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whoCanShareCardEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanShareCardEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:142\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ProfileEntity } from './profile.entity';\nimport { ConnectedCardEntity } from './connected-card.entity';\nimport { WhoCanShareCardEnum } from './enum/who-can-share-card.enum';\nimport { WhoCanSeeCardInformationEnum } from './enum/who-can-see-card-information.enum';\nimport { TypeOfCardEnum } from './enum/type-of-card.enum';\nimport { IsEmail, IsUrl, MaxLength } from 'class-validator';\nimport { OccupationEntity } from './occupation.entity';\nimport { WhoCanCommunicateWithEnum } from './enum/who-can-communicate-with.enum';\nimport { MediaEntity } from './media.entity';\nimport { GroupMembershipEntity } from './group-membership.entity';\nimport { MessageEntity } from './message.entity';\nimport { TransferableStatusCardEnum } from './enum/transferable-status-card.enum';\nimport { SocialNetworkEntity } from './social-network.entity';\n\n@Entity({ name: 'card' })\nexport class CardEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  socialName?: string;\n\n  @Column({ default: false })\n  isOwnerPro: boolean;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  firstname?: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  lastname?: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  companyName?: string;\n\n  @Column('text', { array: true, default: [] })\n  phones: string[];\n\n  @Column('text', { array: true, default: [] })\n  @IsEmail({}, { each: true })\n  emails: string[];\n\n  @Column('text', { array: true, default: [] })\n  @IsUrl({}, { each: true })\n  urls?: string[];\n\n  @Column({ nullable: true })\n  birthday?: Date;\n\n  @Column('text', { nullable: true })\n  notes?: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  occupation?: string;\n\n  @Column({ type: 'integer', default: 0 })\n  numberOfShares: number;\n\n  @Column('text', { array: true, default: [TransferableStatusCardEnum.IS_TRANSFERABLE] })\n  transferableStatusCardEnum: TransferableStatusCardEnum[];\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => ProfileEntity, profile => profile.personalCards)\n  owner: ProfileEntity[];\n\n  @OneToMany(() => ConnectedCardEntity, connectedCard => connectedCard.cardEntityOne, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  connectedCardOne: ConnectedCardEntity[];\n\n  @OneToMany(() => ConnectedCardEntity, connectedCard => connectedCard.cardEntityTwo, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  connectedCardTwo: ConnectedCardEntity[];\n\n  @ManyToMany(() => ProfileEntity, profile => profile.savedCard)\n  profilesWhoSavedCard: ProfileEntity[];\n\n  @ManyToMany(() => OccupationEntity, occupation => occupation.cards, {\n    onDelete: 'SET NULL',\n  })\n  @JoinTable()\n  occupations: OccupationEntity[];\n\n  @OneToMany(() => GroupMembershipEntity, groupMembership => groupMembership.card, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  groupMemberships: GroupMembershipEntity[];\n\n  @OneToOne(() => MediaEntity, media => media.CardPicture, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  media: MediaEntity;\n\n  @OneToMany(() => MessageEntity, message => message.author, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  messages?: MessageEntity[];\n\n  @ManyToOne(() => SocialNetworkEntity, socialNetwork => socialNetwork.cards, {\n    onDelete: 'SET NULL',\n  })\n  socialNetwork: SocialNetworkEntity;\n\n  // ______________________________________________________\n  // Enum\n  // ______________________________________________________\n\n  @Column({ type: 'enum', enum: TypeOfCardEnum, default: TypeOfCardEnum.SOCIAL_NETWORK })\n  typeOfCardEnum: TypeOfCardEnum;\n\n  @Column('text', { array: true, default: [WhoCanShareCardEnum.DIFFUSIBLE] })\n  whoCanShareCardEnums: WhoCanShareCardEnum[];\n\n  @Column('text', { array: true, default: [WhoCanSeeCardInformationEnum.ALL] })\n  whoCanSeeCardInformationEnums: WhoCanSeeCardInformationEnum[];\n\n  @Column('text', { array: true, default: [WhoCanCommunicateWithEnum.ALL] })\n  whoCanSendMessagesEnums: WhoCanCommunicateWithEnum[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CompanyEmployeeEntity.html":{"url":"entities/CompanyEmployeeEntity.html","title":"entity - CompanyEmployeeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CompanyEmployeeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/company-employee.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                company\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                profile\n                            \n                            \n                                roles\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, company => company.employees)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profile => profile.companies)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleCompanyEmployeeEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:50\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport CompanyEntity from './company.entity';\nimport { ProfileEntity } from './profile.entity';\nimport { RoleCompanyEmployeeEnum } from './enum/role-company-employee.enum';\n\n@Entity('company_employee')\nexport class CompanyEmployeeEntity {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column('text', { array: true, default: [RoleCompanyEmployeeEnum.EMPLOYEE] })\n  roles: RoleCompanyEmployeeEnum[];\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => CompanyEntity, company => company.employees)\n  company: CompanyEntity;\n\n  @ManyToOne(() => ProfileEntity, profile => profile.companies)\n  profile: ProfileEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CompanyEntity.html":{"url":"entities/CompanyEntity.html","title":"entity - CompanyEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CompanyEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/company.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                address\n                            \n                            \n                                addresses\n                            \n                            \n                                    Optional\n                                banner_url\n                            \n                            \n                                    Optional\n                                bannerPicture\n                            \n                            \n                                    Optional\n                                city\n                            \n                            \n                                    Optional\n                                country\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                employees\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                occupations\n                            \n                            \n                                ownerProfile\n                            \n                            \n                                    Optional\n                                phone\n                            \n                            \n                                    Optional\n                                profilePicture\n                            \n                            \n                                    Optional\n                                siret\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                website\n                            \n                            \n                                    Optional\n                                zip_code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addresses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, address => address.company, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        banner_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        bannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityBanner, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        employees\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEmployeeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, companyEmployeeEntity => companyEmployeeEntity.company)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OccupationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, occupationEntity => occupationEntity.companies)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ownerProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profileEntity => profileEntity.ownerCompanies)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityProfilePicture, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        siret\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        website\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        zip_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:54\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { OccupationEntity } from './occupation.entity';\nimport { CompanyEmployeeEntity } from './company-employee.entity';\nimport { ProfileEntity } from './profile.entity';\nimport { MediaEntity } from './media.entity';\nimport { AddressEntity } from './address.entity';\n\n@Entity({ name: 'company' })\nexport default class CompanyEntity {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: true })\n  name?: string;\n\n  @Column({ nullable: true })\n  siret?: string;\n\n  @Column({ nullable: true })\n  banner_url?: string;\n\n  @Column({ nullable: true })\n  description?: string;\n\n  @Column({ nullable: true })\n  website?: string;\n\n  @Column({ nullable: true })\n  address?: string;\n\n  @Column({ nullable: true })\n  zip_code?: string;\n\n  @Column({ nullable: true })\n  city?: string;\n\n  @Column({ nullable: true })\n  country?: string;\n\n  @Column({ nullable: true })\n  phone?: string;\n\n  @Column({ nullable: true })\n  email?: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToMany(() => CompanyEmployeeEntity, companyEmployeeEntity => companyEmployeeEntity.company)\n  employees: CompanyEmployeeEntity[];\n\n  @ManyToMany(() => OccupationEntity, occupationEntity => occupationEntity.companies)\n  @JoinTable()\n  occupations: OccupationEntity[];\n\n  @ManyToOne(() => ProfileEntity, profileEntity => profileEntity.ownerCompanies)\n  ownerProfile: ProfileEntity;\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityProfilePicture, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  profilePicture?: MediaEntity;\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityBanner, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  bannerPicture?: MediaEntity;\n\n  @OneToMany(() => AddressEntity, address => address.company, {\n    cascade: true,\n  })\n  addresses: AddressEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ConnectedCardEntity.html":{"url":"entities/ConnectedCardEntity.html","title":"entity - ConnectedCardEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ConnectedCardEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/connected-card.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardEntityOne\n                            \n                            \n                                cardEntityTwo\n                            \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardEntityOne\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.connectedCardOne, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cardEntityTwo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.connectedCardTwo, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, conversation => conversation, {cascade: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:56\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { CardEntity } from './card.entity';\nimport { ConversationEntity } from './conversation.entity';\n\n@Entity({ name: 'connected_card' })\nexport class ConnectedCardEntity {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToOne(() => ConversationEntity, conversation => conversation, {\n    cascade: true,\n  })\n  @JoinColumn()\n  conversation: ConversationEntity;\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.connectedCardOne, {\n    onDelete: 'CASCADE',\n  })\n  cardEntityOne: CardEntity;\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.connectedCardTwo, {\n    onDelete: 'CASCADE',\n  })\n  cardEntityTwo: CardEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ConversationEntity.html":{"url":"entities/ConversationEntity.html","title":"entity - ConversationEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ConversationEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/conversation.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                connectedCard\n                            \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                group\n                            \n                            \n                                id\n                            \n                            \n                                joinedProfiles\n                            \n                            \n                                messages\n                            \n                            \n                                notifications\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        connectedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConnectedCardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, connectedCardEntity => connectedCardEntity.conversation)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, groupEntity => groupEntity.conversations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinedProfiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JoinedConversation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, joinedConversation => joinedConversation.conversation)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, message => message.conversation, {})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, notification => notification.conversation, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:55\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ConnectedCardEntity } from './connected-card.entity';\nimport { GroupEntity } from './group.entity';\nimport { JoinedConversation } from './joined-conversation.entity';\nimport { MessageEntity } from './message.entity';\nimport { NotificationEntity } from './notification.entity';\n\n@Entity({ name: 'conversation' })\nexport class ConversationEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  content: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n  @OneToOne(() => ConnectedCardEntity, connectedCardEntity => connectedCardEntity.conversation)\n  connectedCard: ConnectedCardEntity;\n\n  @OneToMany(() => GroupEntity, groupEntity => groupEntity.conversations)\n  group: GroupEntity[];\n\n  @OneToMany(() => MessageEntity, message => message.conversation, {})\n  messages: MessageEntity[];\n\n  @OneToMany(() => JoinedConversation, joinedConversation => joinedConversation.conversation)\n  joinedProfiles: JoinedConversation[];\n\n  @OneToMany(() => NotificationEntity, notification => notification.conversation, { nullable: true })\n  notifications: NotificationEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLogCommand.html":{"url":"classes/CreateLogCommand.html","title":"class - CreateLogCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLogCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/cqrs/command/create-log.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiName\n                            \n                            \n                                apiType\n                            \n                            \n                                apiVersion\n                            \n                            \n                                    Optional\n                                body\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                headers\n                            \n                            \n                                    Optional\n                                ip\n                            \n                            \n                                loggingType\n                            \n                            \n                                method\n                            \n                            \n                                    Optional\n                                os\n                            \n                            \n                                    Optional\n                                platform\n                            \n                            \n                                    Optional\n                                responseBody\n                            \n                            \n                                    Optional\n                                responseHeaders\n                            \n                            \n                                route\n                            \n                            \n                                    Optional\n                                screenSize\n                            \n                            \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: ApiTypeEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'text', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        headers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggingType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoggingTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        os\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        platform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        responseBody\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        responseHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        screenSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { LoggingTypeEnum } from '../../domain/enum/logging-type.enum';\nimport { ApiTypeEnum } from '../../domain/enum/api-type.enum';\n\nexport class CreateLogCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  @ApiProperty()\n  apiName: string;\n\n  @ApiProperty()\n  loggingType: LoggingTypeEnum;\n\n  @ApiProperty()\n  apiVersion: string;\n\n  @ApiProperty({ enum: ApiTypeEnum })\n  apiType: ApiTypeEnum;\n\n  @ApiProperty()\n  method: string;\n\n  @ApiProperty()\n  route: string;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  headers?: object;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  body?: object;\n\n  @ApiProperty({ nullable: true })\n  status?: number;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  responseHeaders?: object;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  responseBody?: object;\n\n  @ApiProperty({ type: 'text', nullable: true })\n  error?: string;\n\n  @ApiProperty({ nullable: true })\n  os?: string;\n\n  @ApiProperty({ nullable: true })\n  platform?: string;\n\n  @ApiProperty({ nullable: true })\n  screenSize?: string;\n\n  @ApiProperty({ nullable: true })\n  ip?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLogCommandHandler.html":{"url":"classes/CreateLogCommandHandler.html","title":"class - CreateLogCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLogCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/cqrs/handler/command/create-log.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                API_NAME\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_TYPE\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_VERSION\n                            \n                            \n                                    Private\n                                    Readonly\n                                verbose\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        verbose\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VerboseLogEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreateLogCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreateLogCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\nimport { CreateLogCommand } from '../../command/create-log.command';\nimport { VerboseLogEnum } from '../../../domain/enum/verbose-log.enum';\nimport { Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport * as process from 'process';\nimport { ApiTypeEnum } from '../../../domain/enum/api-type.enum';\n\n@CommandHandler(CreateLogCommand)\nexport class CreateLogCommandHandler implements ICommandHandler {\n  private readonly API_NAME: string;\n  private readonly API_VERSION: string;\n  private readonly API_TYPE: ApiTypeEnum;\n  private readonly verbose: VerboseLogEnum;\n\n  constructor(@Inject('API_LOG') private client: ClientProxy) {\n    this.verbose = (process.env.VERBOSE_LOG as VerboseLogEnum) || VerboseLogEnum.NONE;\n    this.API_NAME = process.env.API_NAME || 'NO-NAME';\n    this.API_VERSION = process.env.API_VERSION || 'NO-VERSION';\n    this.API_TYPE = ApiTypeEnum.WALLET_SHARE_API;\n  }\n\n  async execute(command: CreateLogCommand): Promise {\n    if (this.verbose === VerboseLogEnum.NONE) return;\n    if (this.verbose === VerboseLogEnum.DEBUG) console.log('CreateLogCommandHandler: ', command);\n    this.client.emit('create-log', command);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLogDto.html":{"url":"classes/CreateLogDto.html","title":"class - CreateLogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/domain/dto/create-log.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiName\n                            \n                            \n                                apiType\n                            \n                            \n                                apiVersion\n                            \n                            \n                                    Optional\n                                body\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                headers\n                            \n                            \n                                    Optional\n                                ip\n                            \n                            \n                                loggingType\n                            \n                            \n                                    Optional\n                                method\n                            \n                            \n                                    Optional\n                                module\n                            \n                            \n                                    Optional\n                                os\n                            \n                            \n                                    Optional\n                                platform\n                            \n                            \n                                    Optional\n                                responseBody\n                            \n                            \n                                    Optional\n                                responseHeaders\n                            \n                            \n                                    Optional\n                                route\n                            \n                            \n                                    Optional\n                                screenSize\n                            \n                            \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: ApiTypeEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'text', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        headers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggingType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoggingTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        os\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        platform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        responseBody\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        responseHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        screenSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { ApiTypeEnum } from '../enum/api-type.enum';\nimport { LoggingTypeEnum } from '../enum/logging-type.enum';\n\nexport class CreateLogDto {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  @ApiProperty()\n  apiName: string;\n\n  @ApiProperty()\n  loggingType: LoggingTypeEnum;\n\n  @ApiProperty()\n  apiVersion: string;\n\n  @ApiProperty({ enum: ApiTypeEnum })\n  apiType: ApiTypeEnum;\n\n  @ApiProperty()\n  method?: string;\n\n  @ApiProperty()\n  route?: string;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  headers?: object;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  body?: object;\n\n  @ApiProperty()\n  module?: string;\n\n  @ApiProperty({ nullable: true })\n  status?: number;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  responseHeaders?: object;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  responseBody?: object;\n\n  @ApiProperty({ type: 'text', nullable: true })\n  error?: string;\n\n  @ApiProperty({ nullable: true })\n  os?: string;\n\n  @ApiProperty({ nullable: true })\n  platform?: string;\n\n  @ApiProperty({ nullable: true })\n  screenSize?: string;\n\n  @ApiProperty({ nullable: true })\n  ip?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMethodLogDto.html":{"url":"classes/CreateMethodLogDto.html","title":"class - CreateMethodLogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMethodLogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/domain/dto/create-method-log.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                method\n                            \n                            \n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/domain/dto/create-method-log.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-method-log.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-method-log.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-method-log.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateMethodLogDto {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n  module: string;\n  method: string;\n  body: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCommand.html":{"url":"classes/CreateUserCommand.html","title":"class - CreateUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/create-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createUserDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createUserDto: CreateUserDto)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/create-user.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createUserDto\n                                                  \n                                                        \n                                                                        CreateUserDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createUserDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateUserDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/create-user.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserDto } from '../../domain/dto/create-user.dto';\n\nexport class CreateUserCommand {\n  constructor(public readonly createUserDto: CreateUserDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCommandHandler.html":{"url":"classes/CreateUserCommandHandler.html","title":"class - CreateUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/create-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                eventBus\n                            \n                            \n                                    Private\n                                regexValidatePassword\n                            \n                            \n                                    Public\n                                    Readonly\n                                userRepository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                generateCode\n                            \n                            \n                                    Async\n                                generateUniqueReferralCode\n                            \n                            \n                                    Async\n                                getUserByReferralCode\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedEmail\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedUsername\n                            \n                            \n                                    Private\n                                isValidEmail\n                            \n                            \n                                    Private\n                                isValidPassword\n                            \n                            \n                                    Private\n                                isValidUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        eventBus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventBus\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        regexValidatePassword\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectRepository(UserEntity)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:23\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreateUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreateUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCode(length: number)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateUniqueReferralCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUniqueReferralCode()\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserByReferralCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByReferralCode(referralCode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    referralCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { CreateUserCommand } from '../../command/create-user.command';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { validate } from 'class-validator';\nimport { DuplicateUsernameException } from '../../../../../util/exception/custom-http-exception/duplicate-username.exception';\nimport { DuplicateMailException } from '../../../../../util/exception/custom-http-exception/duplicate-mail.exception';\nimport { InvalidParameterEntityException } from '../../../../../util/exception/custom-http-exception/invalid-parameter-entity.exception';\nimport { CreateUserResponse } from '../../../domain/response/create-user.response';\nimport { UserRoleEnum } from '../../../domain/enum/user-role.enum';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { InvalidPasswordException } from '../../../../../util/exception/custom-http-exception/invalid-password.exception';\nimport { InvalidMailException } from '../../../../../util/exception/custom-http-exception/invalid-mail.exception';\nimport { InvalidUsernameException } from '../../../../../util/exception/custom-http-exception/invalid-username.exception';\n\n@CommandHandler(CreateUserCommand)\nexport class CreateUserCommandHandler implements ICommandHandler {\n  private regexValidatePassword;\n\n  constructor(\n    @InjectRepository(UserEntity)\n    public readonly userRepository: Repository,\n    public readonly eventBus: EventBus,\n  ) {\n    this.regexValidatePassword = new RegExp('^(?=.*[A-Za-z])(?=.*\\\\d)(?=.*[@$!%*#?&])[A-Za-z\\\\d@$!%*#?&]{6,}$');\n  }\n\n  async execute(command: CreateUserCommand): Promise {\n    try {\n      if (command.createUserDto.username) {\n        if (await this.isDuplicatedUsername(command.createUserDto.username)) {\n          this.eventBus.publish(\n            new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Username already exists' }),\n          );\n          throw new DuplicateUsernameException();\n        }\n      }\n\n      if (command.createUserDto.mail) {\n        if (await this.isDuplicatedEmail(command.createUserDto.mail)) {\n          this.eventBus.publish(\n            new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Email already exists' }),\n          );\n          throw new DuplicateMailException();\n        }\n      }\n\n      if (!this.isValidPassword(command.createUserDto.password)) {\n        this.eventBus.publish(\n          new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid password' }),\n        );\n        throw new InvalidPasswordException();\n      }\n\n      if (command.createUserDto.mail) {\n        if (!this.isValidEmail(command.createUserDto.mail)) {\n          this.eventBus.publish(\n            new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid mail' }),\n          );\n          throw new InvalidMailException();\n        }\n      }\n\n      if (command.createUserDto.username) {\n        if (!this.isValidUsername(command.createUserDto.username)) {\n          this.eventBus.publish(\n            new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid username' }),\n          );\n          throw new InvalidUsernameException();\n        }\n      }\n\n      const newUser: UserEntity = new UserEntity({\n        ...command.createUserDto,\n        referralCode: await this.generateUniqueReferralCode(),\n      });\n\n      const err = await validate(newUser);\n      if (err.length > 0) {\n        throw new InvalidParameterEntityException(err);\n      }\n\n      const savedUser: UserEntity = await this.userRepository.save(newUser);\n\n      return new CreateUserResponse({\n        id: savedUser.id,\n        username: savedUser.username,\n        mail: savedUser.mail,\n        roles: savedUser.roles || [UserRoleEnum.PUBLIC],\n        referralCode: savedUser.referralCode,\n      });\n    } catch (error) {\n      this.eventBus.publish(new ErrorCustomEvent({ localisation: 'user', handler: 'CreateUser', error: error }));\n      throw error;\n    }\n  }\n\n  // Generate a random alphanumeric code of a given length\n  private generateCode(length: number): string {\n    const charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let code = '';\n    for (let i = 0; i  {\n    let code = this.generateCode(Number(process.env.LENGTH_REFERRAL_CODE) || 6);\n    while (await this.getUserByReferralCode(code)) {\n      code = this.generateCode(Number(process.env.LENGTH_REFERRAL_CODE) || 6);\n    }\n    return code;\n  }\n\n  async getUserByReferralCode(referralCode: string): Promise {\n    const user = await this.userRepository.findOne({ where: { referralCode: referralCode } });\n    return !!user;\n  }\n\n  private async isDuplicatedUsername(username: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.username === username);\n    });\n  }\n\n  private async isDuplicatedEmail(email: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.mail === email);\n    });\n  }\n\n  private isValidPassword(password: string): boolean {\n    return this.regexValidatePassword.test(password);\n  }\n\n  private isValidUsername(username: string): boolean {\n    return username.length > 4 && username.length \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                mail\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                roles\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Length(5, 20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsOptional, Length } from 'class-validator';\nimport { UserRoleEnum } from '../enum/user-role.enum';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateUserDto {\n  @ApiProperty()\n  @IsEmail()\n  mail?: string;\n\n  @ApiProperty()\n  @Length(5, 20)\n  username?: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  password: string;\n\n  @ApiProperty()\n  @IsOptional()\n  roles?: UserRoleEnum[];\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserEvent.html":{"url":"classes/CreateUserEvent.html","title":"class - CreateUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/create-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createUserDto\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, createUserDto: CreateUserDto)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createUserDto\n                                                  \n                                                        \n                                                                        CreateUserDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createUserDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateUserDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'create-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserDto } from '../../domain/dto/create-user.dto';\n\nexport class CreateUserEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'create-user';\n  constructor(public readonly userId: string, public readonly createUserDto: CreateUserDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserEventHandler.html":{"url":"classes/CreateUserEventHandler.html","title":"class - CreateUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/create-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/create-user.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: CreateUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/create-user.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                CreateUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { CreateUserEvent } from '../../event/create-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(CreateUserEvent)\nexport class CreateUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: CreateUserEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' created with email: ' + event.createUserDto.mail,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserResponse.html":{"url":"classes/CreateUserResponse.html","title":"class - CreateUserResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/response/create-user.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                referralCode\n                            \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/response/create-user.response.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        referralCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRoleEnum } from '../enum/user-role.enum';\nimport { UserEntity } from '../entities/user.entity';\n\nexport class CreateUserResponse {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  public readonly id: string;\n  public readonly username: string;\n  public readonly mail: string;\n  public readonly createdAt: Date;\n  public readonly roles: UserRoleEnum[];\n\n  public readonly referralCode?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomHealthCheckService.html":{"url":"injectables/CustomHealthCheckService.html","title":"injectable - CustomHealthCheckService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomHealthCheckService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/custom-health-check.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkHealth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/health-check/custom-health-check.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkHealth()\n                \n            \n\n\n            \n                \n                    Defined in src/api/health-check/custom-health-check.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { QueryBus } from '@nestjs/cqrs';\nimport { HealthCheckQuery } from './cqrs/query/health-check.query';\nimport { HealthCheckResponse } from './domain/response/health-check.response';\n\n@Injectable()\nexport class CustomHealthCheckService {\n  constructor(private readonly queryBus: QueryBus) {}\n\n  async checkHealth(): Promise {\n    return await this.queryBus.execute(new HealthCheckQuery());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseConfiguration.html":{"url":"injectables/DatabaseConfiguration.html","title":"injectable - DatabaseConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/config/database.configuration.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTypeOrmOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createTypeOrmOptions\n                        \n                    \n                \n            \n            \n                \ncreateTypeOrmOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/util/config/database.configuration.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TypeOrmModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { TypeOrmModuleOptions, TypeOrmOptionsFactory } from '@nestjs/typeorm';\nimport { join } from 'path';\nimport { Injectable } from '@nestjs/common';\nimport * as process from 'process';\nimport { logger } from './winston-logger.config';\nimport { CardEntity } from '../../api/entities-to-create/card.entity';\nimport CompanyEntity from '../../api/entities-to-create/company.entity';\nimport { CompanyEmployeeEntity } from '../../api/entities-to-create/company-employee.entity';\nimport { ConnectedCardEntity } from '../../api/entities-to-create/connected-card.entity';\nimport { ConversationEntity } from '../../api/entities-to-create/conversation.entity';\nimport { DiscountCodeEntity } from '../../api/entities-to-create/discount-code.entity';\nimport { GroupEntity } from '../../api/entities-to-create/group.entity';\nimport { GroupMembershipEntity } from '../../api/entities-to-create/group-membership.entity';\nimport { InvoicesEntity } from '../../api/entities-to-create/invoices.entity';\nimport { JoinedConversation } from '../../api/entities-to-create/joined-conversation.entity';\nimport { MediaEntity } from '../../api/entities-to-create/media.entity';\nimport { MessageEntity } from '../../api/entities-to-create/message.entity';\nimport { OccupationEntity } from '../../api/entities-to-create/occupation.entity';\nimport { PlanEntity } from '../../api/entities-to-create/plan.entity';\nimport { ProfileEntity } from '../../api/entities-to-create/profile.entity';\nimport { SocialNetworkEntity } from '../../api/entities-to-create/social-network.entity';\nimport StripEventEntity from '../../api/entities-to-create/strip-event.entity';\nimport { SubscriptionEntity } from '../../api/entities-to-create/subscription.entity';\nimport { UserEntity } from '../../api/user/domain/entities/user.entity';\nimport { ReferralCodeEntity } from '../../api/entities-to-create/referal-code.entity';\nimport { NotificationEntity } from '../../api/entities-to-create/notification.entity';\nimport { AddressEntity } from '../../api/entities-to-create/address.entity';\n\n@Injectable()\nexport class DatabaseConfiguration implements TypeOrmOptionsFactory {\n  createTypeOrmOptions(): TypeOrmModuleOptions {\n    try {\n      if (process.env.NODE_ENV === 'prod') {\n        logger.info('NODE_ENV is prod');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_PROD,\n          port: process.env.TYPEORM_PORT_PROD ? parseInt(process.env.TYPEORM_PORT_PROD) : 5432,\n          username: process.env.TYPEORM_USERNAME_PROD,\n          password: process.env.TYPEORM_PASSWORD_PROD,\n          database: process.env.TYPEORM_DATABASE_PROD,\n          ssl: true,\n          extra: {\n            ssl: {\n              rejectUnauthorized: false,\n            },\n          },\n          entities: [join(__dirname, '**/*.entity{.ts,.js}')],\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_PROD === 'true',\n          logging: process.env.TYPEORM_LOGGING_PROD === 'true',\n        };\n      } else if (process.env.NODE_ENV === 'pprod') {\n        logger.info('NODE_ENV is pprod');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_PPROD,\n          port: process.env.TYPEORM_PORT_PPROD ? parseInt(process.env.TYPEORM_PORT_PPROD) : 5432,\n          username: process.env.TYPEORM_USERNAME_PPROD,\n          password: process.env.TYPEORM_PASSWORD_PPROD,\n          database: process.env.TYPEORM_DATABASE_PPROD,\n          ssl: true,\n          extra: {\n            ssl: {\n              rejectUnauthorized: false,\n            },\n          },\n          entities: [join(__dirname, '**', '*.entity.{ts,js}')],\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_PPROD === 'true',\n          logging: process.env.TYPEORM_LOGGING_PPROD === 'true',\n        };\n      } else if (process.env.NODE_ENV === 'test') {\n        logger.info('NODE_ENV is test');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_TEST,\n          port: process.env.TYPEORM_PORT_TEST ? parseInt(process.env.TYPEORM_PORT_TEST) : 5432,\n          username: process.env.TYPEORM_USERNAME_TEST,\n          password: process.env.TYPEORM_PASSWORD_TEST,\n          database: process.env.TYPEORM_DATABASE_TEST,\n          entities: [\n            CardEntity,\n            CompanyEntity,\n            CompanyEmployeeEntity,\n            ConnectedCardEntity,\n            ConversationEntity,\n            DiscountCodeEntity,\n            GroupEntity,\n            GroupMembershipEntity,\n            InvoicesEntity,\n            JoinedConversation,\n            MediaEntity,\n            MessageEntity,\n            OccupationEntity,\n            PlanEntity,\n            ProfileEntity,\n            SocialNetworkEntity,\n            StripEventEntity,\n            SubscriptionEntity,\n            UserEntity,\n            NotificationEntity,\n            ReferralCodeEntity,\n            AddressEntity,\n          ],\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_TEST === 'true',\n          logging: process.env.TYPEORM_LOGGING_TEST === 'true',\n        };\n      } else if (process.env.NODE_ENV === 'dev') {\n        logger.info('NODE_ENV is dev');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_DEV,\n          port: process.env.TYPEORM_PORT_DEV ? parseInt(process.env.TYPEORM_PORT_DEV) : 5432,\n          username: process.env.TYPEORM_USERNAME_DEV,\n          password: process.env.TYPEORM_PASSWORD_DEV,\n          database: process.env.TYPEORM_DATABASE_DEV,\n          logging: process.env.TYPEORM_LOGGING_DEV === 'true',\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_DEV === 'true',\n          entities: [\n            CardEntity,\n            CompanyEntity,\n            CompanyEmployeeEntity,\n            ConnectedCardEntity,\n            ConversationEntity,\n            DiscountCodeEntity,\n            GroupEntity,\n            GroupMembershipEntity,\n            InvoicesEntity,\n            JoinedConversation,\n            MediaEntity,\n            MessageEntity,\n            OccupationEntity,\n            PlanEntity,\n            ProfileEntity,\n            SocialNetworkEntity,\n            StripEventEntity,\n            SubscriptionEntity,\n            UserEntity,\n            NotificationEntity,\n            ReferralCodeEntity,\n            AddressEntity,\n          ],\n        };\n      } else {\n        logger.error('NODE_ENV is not set');\n        return {};\n      }\n    } catch (error) {\n      logger.error('An error occurred while trying to connect to the database: ', error);\n      throw new Error('NODE_ENV is not set');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMailCommand.html":{"url":"classes/DeleteMailCommand.html","title":"class - DeleteMailCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMailCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/command/delete-mail.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/cqrs/command/delete-mail.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/cqrs/command/delete-mail.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteMailCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly mail: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMailCommandHandler.html":{"url":"classes/DeleteMailCommandHandler.html","title":"class - DeleteMailCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMailCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/handler/command/delete-mail.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/cqrs/handler/command/delete-mail.command-handler.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: DeleteMailCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-landing-page/cqrs/handler/command/delete-mail.command-handler.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                DeleteMailCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { DeleteMailCommand } from '../../command/delete-mail.command';\nimport { HttpException, HttpStatus, Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { DeleteMailEvent } from '../../event/delete-mail.event';\nimport { catchError, firstValueFrom } from 'rxjs';\nimport { ErrorCustomEventHandler } from '../../../../../util/exception/error-handler/error-custom.event-handler';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@CommandHandler(DeleteMailCommand)\nexport class DeleteMailCommandHandler implements ICommandHandler {\n  constructor(@Inject('API_WAITING_LIST') private client: ClientProxy, private readonly eventBus: EventBus) {}\n\n  async execute(command: DeleteMailCommand): Promise {\n    return await firstValueFrom(\n      this.client.send({ cmd: 'delete' }, command.mail).pipe(\n        catchError(err => {\n          if (err.status !== undefined) {\n            this.eventBus.publish(\n              new ErrorCustomEvent({\n                handler: 'DeleteMailCommandHandler',\n                localisation: 'api-waiting-list',\n                error: err.message,\n              }),\n            );\n            throw new HttpException('Mail does not exist', 404);\n          }\n          this.eventBus.publish(\n            new ErrorCustomEvent({\n              handler: 'DeleteMailCommandHandler',\n              localisation: 'api-waiting-list',\n              error: 'unreachable',\n            }),\n          );\n          throw new HttpException('unreachable', HttpStatus.SERVICE_UNAVAILABLE);\n        }),\n      ),\n    ).then(() => {\n      this.eventBus.publish(new DeleteMailEvent(command));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMailEvent.html":{"url":"classes/DeleteMailEvent.html","title":"class - DeleteMailEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMailEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/event/delete-mail.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                deleteMailDto\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deleteMailDto: DeleteMailCommand, module: string, method: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/cqrs/event/delete-mail.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deleteMailDto\n                                                  \n                                                        \n                                                                        DeleteMailCommand\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        module\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        method\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        deleteMailDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeleteMailCommand\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/cqrs/event/delete-mail.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'delete-mail'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/cqrs/event/delete-mail.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'api-landing-page'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/cqrs/event/delete-mail.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DeleteMailCommand } from '../command/delete-mail.command';\n\nexport class DeleteMailEvent {\n  constructor(\n    public readonly deleteMailDto: DeleteMailCommand,\n    public readonly module: string = 'api-landing-page',\n    public readonly method: string = 'delete-mail',\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMailEventHandler.html":{"url":"classes/DeleteMailEventHandler.html","title":"class - DeleteMailEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMailEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/handler/event/delete-mail.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/cqrs/handler/event/delete-mail.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: DeleteMailEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-landing-page/cqrs/handler/event/delete-mail.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                DeleteMailEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { DeleteMailEvent } from '../../event/delete-mail.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(DeleteMailEvent)\nexport class DeleteMailEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: DeleteMailEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: 'api-landing-page',\n      method: 'delete-mail',\n      body: 'delete user with mail : ' + event.deleteMailDto.mail,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserCommand.html":{"url":"classes/DeleteUserCommand.html","title":"class - DeleteUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/delete-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/delete-user.command.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/delete-user.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteUserCommand {\n  public readonly userId: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserCommandHandler.html":{"url":"classes/DeleteUserCommandHandler.html","title":"class - DeleteUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/delete-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                eventBus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/delete-user.command-handler.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        eventBus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventBus\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/delete-user.command-handler.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: DeleteUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/delete-user.command-handler.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                DeleteUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { DeleteUserCommand } from '../../command/delete-user.command';\nimport { DeleteUserEvent } from '../../event/delete-user.event';\nimport { InvalidIdException } from '../../../../../util/exception/custom-http-exception/invalid-id.exception';\n\n@CommandHandler(DeleteUserCommand)\nexport class DeleteUserCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    public eventBus: EventBus,\n  ) {}\n\n  async execute(command: DeleteUserCommand): Promise {\n    try {\n      await this.userRepository.softDelete(command.userId);\n      this.eventBus.publish(new DeleteUserEvent(command.userId));\n    } catch (error) {\n      this.eventBus.publish(new ErrorCustomEvent({ localisation: 'user', handler: 'DeleteUserCommandHandler', error }));\n      throw new InvalidIdException();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserEvent.html":{"url":"classes/DeleteUserEvent.html","title":"class - DeleteUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/delete-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/delete-user.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'delete-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/delete-user.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/delete-user.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/delete-user.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteUserEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'delete-user';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserEventHandler.html":{"url":"classes/DeleteUserEventHandler.html","title":"class - DeleteUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/delete-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/delete-user.event-handler.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: DeleteUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/delete-user.event-handler.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                DeleteUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { DeleteUserEvent } from '../../event/delete-user.event';\nimport { Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(DeleteUserEvent)\nexport class DeleteUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  async handle(event: DeleteUserEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' deleted',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DiscountCodeEntity.html":{"url":"entities/DiscountCodeEntity.html","title":"entity - DiscountCodeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DiscountCodeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/discount-code.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                discountAmount\n                            \n                            \n                                discountPercentage\n                            \n                            \n                                endDate\n                            \n                            \n                                id\n                            \n                            \n                                startDate\n                            \n                            \n                                subscriptions\n                            \n                            \n                                updatedAt\n                            \n                            \n                                usageLimit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discount_amount', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountPercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discount_percentage', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'end_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'start_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, subscriptionEntity => subscriptionEntity.discountCodes)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usageLimit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'usage_limit', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:44\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsDate, IsNotEmpty, IsNumber } from 'class-validator';\nimport { SubscriptionEntity } from './subscription.entity';\n\n@Entity({ name: 'discount_codes' })\nexport class DiscountCodeEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'discount_percentage', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  discountPercentage: number;\n\n  @Column({ name: 'discount_amount', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  discountAmount: number;\n\n  @Column({ name: 'start_date', type: 'date' })\n  @IsDate()\n  startDate: Date;\n\n  @Column({ name: 'end_date', type: 'date' })\n  @IsDate()\n  endDate: Date;\n\n  @Column({ name: 'usage_limit', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  usageLimit: number;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToMany(() => SubscriptionEntity, subscriptionEntity => subscriptionEntity.discountCodes)\n  @JoinTable()\n  subscriptions: SubscriptionEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicateMailException.html":{"url":"classes/DuplicateMailException.html","title":"class - DuplicateMailException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicateMailException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/duplicate-mail.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/duplicate-mail.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class DuplicateMailException extends HttpException {\n  constructor() {\n    super('Mail already exists', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicateUsernameException.html":{"url":"classes/DuplicateUsernameException.html","title":"class - DuplicateUsernameException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicateUsernameException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/duplicate-username.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/duplicate-username.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class DuplicateUsernameException extends HttpException {\n  constructor() {\n    super('Username already exists', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EntitiesToMoveModule.html":{"url":"modules/EntitiesToMoveModule.html","title":"module - EntitiesToMoveModule","body":"\n                   \n\n\n\n\n    Modules\n    EntitiesToMoveModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/entities-to-create/entities-to-move.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CardEntity } from './card.entity';\nimport CompanyEntity from './company.entity';\nimport { CompanyEmployeeEntity } from './company-employee.entity';\nimport { ConnectedCardEntity } from './connected-card.entity';\nimport { ConversationEntity } from './conversation.entity';\nimport { DiscountCodeEntity } from './discount-code.entity';\nimport { GroupEntity } from './group.entity';\nimport { GroupMembershipEntity } from './group-membership.entity';\nimport { InvoicesEntity } from './invoices.entity';\nimport { JoinedConversation } from './joined-conversation.entity';\nimport { MediaEntity } from './media.entity';\nimport { MessageEntity } from './message.entity';\nimport { OccupationEntity } from './occupation.entity';\nimport { PlanEntity } from './plan.entity';\nimport { ProfileEntity } from './profile.entity';\nimport { SocialNetworkEntity } from './social-network.entity';\nimport StripEventEntity from './strip-event.entity';\nimport { SubscriptionEntity } from './subscription.entity';\nimport { ReferralCodeEntity } from './referal-code.entity';\nimport { NotificationEntity } from './notification.entity';\nimport { AddressEntity } from './address.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      // ________ Entity ________\n      CardEntity,\n      CompanyEntity,\n      CompanyEmployeeEntity,\n      ConnectedCardEntity,\n      ConversationEntity,\n      DiscountCodeEntity,\n      GroupEntity,\n      GroupMembershipEntity,\n      InvoicesEntity,\n      JoinedConversation,\n      MediaEntity,\n      MessageEntity,\n      OccupationEntity,\n      PlanEntity,\n      ProfileEntity,\n      SocialNetworkEntity,\n      StripEventEntity,\n      SubscriptionEntity,\n      ReferralCodeEntity,\n      NotificationEntity,\n      AddressEntity,\n    ]),\n  ],\n  controllers: [],\n  providers: [\n    // ________ Service ________\n  ],\n})\nexport class EntitiesToMoveModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorCustomEvent.html":{"url":"classes/ErrorCustomEvent.html","title":"class - ErrorCustomEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorCustomEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/error-handler/error-custom.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                error\n                            \n                            \n                                    Public\n                                    Readonly\n                                handler\n                            \n                            \n                                    Public\n                                    Readonly\n                                localisation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        handler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        localisation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ErrorCustomEvent {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly localisation: string;\n  public readonly handler: string;\n  public readonly error: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorCustomEventHandler.html":{"url":"classes/ErrorCustomEventHandler.html","title":"class - ErrorCustomEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorCustomEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/error-handler/error-custom.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                API_NAME\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_TYPE\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_VERSION\n                            \n                            \n                                    Private\n                                    Readonly\n                                VERBOSE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLoggerService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLoggerService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                \n                    \n                        Default value : ApiTypeEnum.WALLET_SHARE_API\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        VERBOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: ErrorCustomEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/util/exception/error-handler/error-custom.event-handler.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                ErrorCustomEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { ErrorCustomEvent } from './error-custom.event';\nimport { CreateLogDto } from '../../../api/api-log/domain/dto/create-log.dto';\nimport { LoggingTypeEnum } from '../../../api/api-log/domain/enum/logging-type.enum';\nimport { ApiLogService } from '../../../api/api-log/api-log.service';\nimport { ApiTypeEnum } from '../../../api/api-log/domain/enum/api-type.enum';\n\n@EventsHandler(ErrorCustomEvent)\nexport class ErrorCustomEventHandler implements IEventHandler {\n  private readonly API_NAME: string;\n  private readonly API_VERSION: string;\n  private readonly API_TYPE: ApiTypeEnum = ApiTypeEnum.WALLET_SHARE_API;\n\n  private readonly VERBOSE: boolean;\n  constructor(private readonly apiLoggerService: ApiLogService) {\n    this.API_NAME = process.env.API_NAME || 'NO-NAME';\n    this.API_VERSION = process.env.API_VERSION || 'NO-VERSION';\n    this.VERBOSE = process.env.VERBOSE_ERROR === 'true';\n  }\n  handle(event: ErrorCustomEvent): void {\n    const createLogDto = new CreateLogDto({});\n    createLogDto.apiName = this.API_NAME;\n    createLogDto.apiVersion = this.API_VERSION;\n    createLogDto.loggingType = LoggingTypeEnum.ERROR;\n    createLogDto.apiType = this.API_TYPE;\n    createLogDto.method = event.localisation;\n    createLogDto.route = event.handler;\n    createLogDto.error = event.error;\n\n    this.apiLoggerService.createLog(createLogDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorExceptionFilter.html":{"url":"classes/ErrorExceptionFilter.html","title":"class - ErrorExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/filter/error-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/util/filter/error-exception.filter.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus } from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch()\nexport class ErrorExceptionFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost): void {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const httpStatus = exception instanceof HttpException ? exception.getStatus() : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    response.status(httpStatus).json({\n      statusCode: httpStatus,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorLoggingMiddleware.html":{"url":"injectables/ErrorLoggingMiddleware.html","title":"injectable - ErrorLoggingMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorLoggingMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/error-logging.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                VERBOSE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLoggerService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/middleware/error-logging.middleware.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLoggerService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/error-logging.middleware.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        VERBOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VerboseLogEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/error-logging.middleware.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { NextFunction, Request, Response } from 'express';\nimport { CreateLogDto } from '../api/api-log/domain/dto/create-log.dto';\nimport { ApiLogService } from '../api/api-log/api-log.service';\nimport { LoggingTypeEnum } from '../api/api-log/domain/enum/logging-type.enum';\nimport * as useragent from 'useragent';\nimport { VerboseLogEnum } from '../api/api-log/domain/enum/verbose-log.enum';\n\n@Injectable()\nexport class ErrorLoggingMiddleware implements NestMiddleware {\n  private readonly VERBOSE: VerboseLogEnum;\n  constructor(private readonly apiLoggerService: ApiLogService) {\n    this.VERBOSE = process.env.VERBOSE as VerboseLogEnum;\n  }\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types,@typescript-eslint/explicit-function-return-type\n  async use(req: Request, res: Response, next: NextFunction) {\n    try {\n      await next();\n    } catch (error) {\n      const ua = useragent.parse(req.headers['user-agent']);\n\n      const os = ua.os.toString();\n      const device = ua.device.toString();\n\n      const createLogDto = new CreateLogDto({});\n      createLogDto.loggingType = LoggingTypeEnum.ERROR;\n      createLogDto.method = req.method;\n      createLogDto.route = req.baseUrl;\n      createLogDto.headers = req.headers || undefined;\n      createLogDto.body = this.VERBOSE ? req.body : undefined;\n      createLogDto.status = res.statusCode;\n      createLogDto.responseHeaders = res.getHeaders();\n      createLogDto.responseBody = res.locals.responseBody;\n      createLogDto.error = error.message;\n      createLogDto.os = os;\n      createLogDto.ip = req.ip;\n      createLogDto.platform = device;\n      createLogDto.screenSize = undefined;\n\n      this.apiLoggerService.createLog(createLogDto);\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GenerateUserDto.html":{"url":"classes/GenerateUserDto.html","title":"class - GenerateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GenerateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/generate-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/generate-user.dto.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/generate-user.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/generate-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRoleEnum } from '../enum/user-role.enum';\n\nexport class GenerateUserDto {\n  public readonly mail: string;\n  public readonly roles: UserRoleEnum[];\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllMailQuery.html":{"url":"classes/GetAllMailQuery.html","title":"class - GetAllMailQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllMailQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/query/get-all-mail.query.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetAllMailQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllMailQueryHandler.html":{"url":"classes/GetAllMailQueryHandler.html","title":"class - GetAllMailQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllMailQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/handler/query/get-all-mail.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/cqrs/handler/query/get-all-mail.query-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetAllMailQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-landing-page/cqrs/handler/query/get-all-mail.query-handler.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetAllMailQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetAllMailQuery } from '../../query/get-all-mail.query';\nimport { HttpException, Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { catchError, firstValueFrom } from 'rxjs';\nimport { MailLandingPageDto } from '../../../domain/dto/mail-landing-page.dto';\n\n@QueryHandler(GetAllMailQuery)\nexport class GetAllMailQueryHandler implements IQueryHandler {\n  constructor(@Inject('API_WAITING_LIST') private client: ClientProxy) {}\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async execute(query: GetAllMailQuery): Promise {\n    return await firstValueFrom(\n      this.client.send({ cmd: 'get-all' }, '').pipe(\n        catchError(() => {\n          throw new HttpException('unreachable', 401);\n        }),\n      ),\n    ).then((mailsLandingPageList: MailLandingPageDto[]) => mailsLandingPageList);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserByEmailQuery.html":{"url":"classes/GetUserByEmailQuery.html","title":"class - GetUserByEmailQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserByEmailQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-by-email.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-by-email.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-by-email.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserByEmailQuery {\n  constructor(public readonly email: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserByEmailQueryHandler.html":{"url":"classes/GetUserByEmailQueryHandler.html","title":"class - GetUserByEmailQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserByEmailQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-by-email.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-by-email.query-handler.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserByEmailQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-by-email.query-handler.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserByEmailQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UserEntity } from '../../../domain/entities/user.entity';\nimport { GetUserByEmailQuery } from '../../query/get-user-by-email.query';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\n\n@QueryHandler(GetUserByEmailQuery)\nexport class GetUserByEmailQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n  ) {}\n\n  async execute(query: GetUserByEmailQuery): Promise {\n    try {\n      return await this.userRepository.findOneOrFail({\n        where: [{ mail: query.email }],\n        select: ['id', 'mail', 'password', 'roles', 'createdAt', 'updatedAt'],\n      });\n    } catch (error) {\n      throw 'Error: no match found';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserByUsernameQuery.html":{"url":"classes/GetUserByUsernameQuery.html","title":"class - GetUserByUsernameQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserByUsernameQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-by-username.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-by-username.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-by-username.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserByUsernameQuery {\n  constructor(public readonly username: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserByUsernameQueryHandler.html":{"url":"classes/GetUserByUsernameQueryHandler.html","title":"class - GetUserByUsernameQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserByUsernameQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-by-username.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-by-username.query-handler.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserByUsernameQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-by-username.query-handler.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserByUsernameQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { GetUserByUsernameQuery } from '../../query/get-user-by-username.query';\n\n@QueryHandler(GetUserByUsernameQuery)\nexport class GetUserByUsernameQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n  ) {}\n\n  async execute(query: GetUserByUsernameQuery): Promise {\n    try {\n      return await this.userRepository.findOneOrFail({\n        where: [{ username: query.username }],\n        select: ['id', 'username', 'password', 'roles', 'createdAt', 'updatedAt'],\n      });\n    } catch (error) {\n      throw 'Error: no match found';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserIfRefreshTokenMatchesQuery.html":{"url":"classes/GetUserIfRefreshTokenMatchesQuery.html","title":"class - GetUserIfRefreshTokenMatchesQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserIfRefreshTokenMatchesQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                refreshToken\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(refreshToken: string, userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        refreshToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserIfRefreshTokenMatchesQuery {\n  constructor(public readonly refreshToken: string, public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{"url":"classes/GetUserIfRefreshTokenMatchesQueryHandler.html","title":"class - GetUserIfRefreshTokenMatchesQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserIfRefreshTokenMatchesQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-if-refresh-token-matches.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-if-refresh-token-matches.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserIfRefreshTokenMatchesQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-if-refresh-token-matches.query-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserIfRefreshTokenMatchesQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetUserIfRefreshTokenMatchesQuery } from '../../query/get-user-if-refresh-token-matches.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport * as bcrypt from 'bcrypt';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@QueryHandler(GetUserIfRefreshTokenMatchesQuery)\nexport class GetUserIfRefreshTokenMatchesQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetUserIfRefreshTokenMatchesQuery): Promise {\n    try {\n      const user = await this.userRepository.findOne({\n        select: ['id', 'username', 'mail', 'currentHashedRefreshToken', 'roles'],\n        where: {\n          id: query.userId,\n        },\n      });\n\n      const isRefreshTokenMatching = await bcrypt.compare(query.refreshToken, user?.currentHashedRefreshToken || '');\n\n      if (isRefreshTokenMatching && user) {\n        return user;\n      }\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'user',\n          handler: 'GetUserIfRefreshTokenMatchesQueryHandler',\n          error: error,\n        }),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserLoginQuery.html":{"url":"classes/GetUserLoginQuery.html","title":"class - GetUserLoginQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserLoginQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-login.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                plainTextPassword\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string, plainTextPassword: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-login.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plainTextPassword\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        plainTextPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-login.query.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-login.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserLoginQuery {\n  constructor(public readonly username: string, public readonly plainTextPassword: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserLoginQueryHandler.html":{"url":"classes/GetUserLoginQueryHandler.html","title":"class - GetUserLoginQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserLoginQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-login.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                    Async\n                                verifyPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-login.query-handler.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserLoginQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-login.query-handler.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserLoginQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        verifyPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyPassword(plainTextPassword: string, hashedPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-login.query-handler.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plainTextPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hashedPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetUserLoginQuery } from '../../query/get-user-login.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { config } from 'dotenv';\nimport { HttpException, HttpStatus } from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\nimport { LoginOfUserEvent } from '../../event/login-of-user.event';\n\nconfig();\n@QueryHandler(GetUserLoginQuery)\nexport class GetUserLoginQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetUserLoginQuery): Promise {\n    try {\n      const userUsername = await this.userRepository.findOne({\n        where: [{ username: query.username }],\n        select: ['id', 'username', 'password', 'mail', 'roles', 'createdAt', 'updatedAt', 'deletedAt'],\n      });\n\n      if (userUsername) {\n        if (!(await this.verifyPassword(query.plainTextPassword, userUsername.password))) {\n          throw new HttpException('Wrong credentials provided', HttpStatus.BAD_REQUEST);\n        }\n        this.eventBus.publish(new LoginOfUserEvent(userUsername.id));\n\n        return userUsername;\n      } else {\n        const userUsername = await this.userRepository.findOne({\n          where: [{ mail: query.username }],\n          select: ['id', 'username', 'password', 'mail', 'roles', 'createdAt', 'updatedAt', 'deletedAt'],\n        });\n        if (userUsername) {\n          if (!(await this.verifyPassword(query.plainTextPassword, userUsername.password))) {\n            throw new HttpException('Wrong credentials provided', HttpStatus.BAD_REQUEST);\n          }\n          this.eventBus.publish(new LoginOfUserEvent(userUsername.id));\n          return userUsername;\n        } else {\n          throw 'Error: no match found';\n        }\n      }\n    } catch (error) {\n      throw 'Error: no match found';\n    }\n  }\n\n  private async verifyPassword(plainTextPassword: string, hashedPassword: string): Promise {\n    return await bcrypt.compare(plainTextPassword, hashedPassword);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserQuery.html":{"url":"classes/GetUserQuery.html","title":"class - GetUserQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId?: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserQuery {\n  constructor(public readonly userId?: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserQueryHandler.html":{"url":"classes/GetUserQueryHandler.html","title":"class - GetUserQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user.query-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetUserQuery } from '../../query/get-user.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { UserResponse } from '../../../domain/response/user.response';\nimport { UserListResponse } from '../../../domain/response/user-list.response';\n\n@QueryHandler(GetUserQuery)\nexport class GetUserQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n  ) {}\n\n  async execute(query: GetUserQuery): Promise {\n    if (query.userId) {\n      return {\n        ...(await this.userRepository.findOneOrFail({\n          where: [{ id: query.userId }],\n        })),\n      };\n    }\n    const userListResponse: UserListResponse = new UserListResponse();\n    await this.userRepository.find().then(userList => {\n      userList.forEach(user => {\n        userListResponse.userList.push(new UserResponse({ ...user }));\n      });\n    });\n    return userListResponse.userList;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserWithCriteriaDto.html":{"url":"classes/GetUserWithCriteriaDto.html","title":"class - GetUserWithCriteriaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserWithCriteriaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/get-user-with-criteria.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                createdFrom\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                createdTo\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                deletedFrom\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                deletedTo\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                isDeleted\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                mail\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                role\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                updatedFrom\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                updatedTo\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        createdFrom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        createdTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        deletedFrom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        deletedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        updatedFrom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        updatedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserWithCriteriaDto {\n  public readonly createdFrom?: Date;\n  public readonly createdTo?: Date;\n\n  public readonly updatedFrom?: Date;\n  public readonly updatedTo?: Date;\n\n  public readonly deletedFrom?: Date;\n  public readonly deletedTo?: Date;\n  public readonly isDeleted?: boolean;\n\n  public readonly role?: string;\n\n  public readonly username?: string;\n  public readonly mail?: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserWithCriteriaQuery.html":{"url":"classes/GetUserWithCriteriaQuery.html","title":"class - GetUserWithCriteriaQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserWithCriteriaQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-with-criteria.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                getUserWithCriteriaDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(getUserWithCriteriaDto: GetUserWithCriteriaDto)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-with-criteria.query.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        getUserWithCriteriaDto\n                                                  \n                                                        \n                                                                        GetUserWithCriteriaDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        getUserWithCriteriaDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GetUserWithCriteriaDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-with-criteria.query.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GetUserWithCriteriaDto } from '../../domain/dto/get-user-with-criteria.dto';\n\nexport class GetUserWithCriteriaQuery {\n  constructor(public readonly getUserWithCriteriaDto: GetUserWithCriteriaDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserWithCriteriaQueryHandler.html":{"url":"classes/GetUserWithCriteriaQueryHandler.html","title":"class - GetUserWithCriteriaQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserWithCriteriaQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-with-criteria.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-with-criteria.query-handler.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserWithCriteriaQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-with-criteria.query-handler.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserWithCriteriaQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetUserWithCriteriaQuery } from '../../query/get-user-with-criteria.query';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\n@QueryHandler(GetUserWithCriteriaQuery)\nexport class GetUserWithCriteriaQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n  ) {}\n\n  async execute(query: GetUserWithCriteriaQuery): Promise {\n    const queryBuilder = this.userRepository.createQueryBuilder('user');\n\n    if (query.getUserWithCriteriaDto.isDeleted) {\n      queryBuilder.setFindOptions({ withDeleted: true });\n    }\n\n    if (query.getUserWithCriteriaDto.createdFrom) {\n      queryBuilder.andWhere('user.createdAt >= :from', { from: query.getUserWithCriteriaDto.createdFrom });\n    }\n\n    if (query.getUserWithCriteriaDto.createdTo) {\n      queryBuilder.andWhere('user.createdAt = :from', { from: query.getUserWithCriteriaDto.updatedFrom });\n    }\n\n    if (query.getUserWithCriteriaDto.updatedTo) {\n      queryBuilder.andWhere('user.updatedAt = :from', { from: query.getUserWithCriteriaDto.deletedFrom });\n    }\n\n    if (query.getUserWithCriteriaDto.deletedTo) {\n      queryBuilder.andWhere('user.deletedAt \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GroupEntity.html":{"url":"entities/GroupEntity.html","title":"entity - GroupEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GroupEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/group.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bannerPicture\n                            \n                            \n                                conversations\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                members\n                            \n                            \n                                name\n                            \n                            \n                                picture\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.groupBannerPicture, {cascade: true, nullable: true, onDelete: 'SET NULL'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, conversation => conversation.group, {nullable: false, cascade: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupMembershipEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, groupMembership => groupMembership.group, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 30)@Column({nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        picture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.groupPicture, {cascade: true, nullable: true, onDelete: 'SET NULL'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:63\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { Length } from 'class-validator';\nimport { ConversationEntity } from './conversation.entity';\nimport { MediaEntity } from './media.entity';\nimport { GroupMembershipEntity } from './group-membership.entity';\n\n@Entity({ name: 'group' })\nexport class GroupEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Length(5, 30)\n  @Column({ nullable: false, unique: true })\n  name: string;\n  @OneToMany(() => GroupMembershipEntity, groupMembership => groupMembership.group, { cascade: true })\n  members: GroupMembershipEntity[];\n\n  @OneToMany(() => ConversationEntity, conversation => conversation.group, {\n    nullable: false,\n    cascade: true,\n  })\n  @JoinColumn()\n  conversations: ConversationEntity[];\n\n  @OneToOne(() => MediaEntity, media => media.groupPicture, {\n    cascade: true,\n    nullable: true,\n    onDelete: 'SET NULL',\n  })\n  @JoinColumn()\n  picture: MediaEntity;\n\n  @OneToOne(() => MediaEntity, media => media.groupBannerPicture, {\n    cascade: true,\n    nullable: true,\n    onDelete: 'SET NULL',\n  })\n  @JoinColumn()\n  bannerPicture: MediaEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GroupMembershipEntity.html":{"url":"entities/GroupMembershipEntity.html","title":"entity - GroupMembershipEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GroupMembershipEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/group-membership.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                group\n                            \n                            \n                                id\n                            \n                            \n                                role\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        card\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.groupMemberships, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, groupEntity => groupEntity.members, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleGroupMembershipEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:47\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { CardEntity } from './card.entity';\nimport { GroupEntity } from './group.entity';\nimport { RoleGroupMembershipEnum } from './enum/role-group-membership.enum';\n\n@Entity({ name: 'group_membership' })\nexport class GroupMembershipEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @Column('text', { array: true, default: [RoleGroupMembershipEnum.MEMBER] })\n  role: RoleGroupMembershipEnum;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.groupMemberships, {\n    onDelete: 'CASCADE',\n  })\n  card: CardEntity;\n\n  @ManyToOne(() => GroupEntity, groupEntity => groupEntity.members, {\n    onDelete: 'CASCADE',\n  })\n  group: GroupEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthCheckController.html":{"url":"controllers/HealthCheckController.html","title":"controller - HealthCheckController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthCheckController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/health-check.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health-check\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        check\n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')@HttpCode(200)@HealthCheck()@ApiResponse({status: 200, description: 'Health Check for API WalletShare', content: undefined})\n                \n            \n\n            \n                \n                    Defined in src/api/health-check/health-check.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode } from '@nestjs/common';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { HealthCheck } from '@nestjs/terminus';\nimport { CustomHealthCheckService } from './custom-health-check.service';\nimport { HealthCheckResponse } from './domain/response/health-check.response';\n\n/**\n * @api {get} /health-check Health Check\n * @apiName HealthCheck\n * @apiGroup HealthCheck\n * @apiVersion 0.0.1\n * @apiDescription Health Check for API WalletShare\n */\n@Controller('health-check')\n@ApiTags('HealthCheck')\nexport class HealthCheckController {\n  constructor(private customHealthCheckService: CustomHealthCheckService) {}\n\n  @Get('/')\n  @HttpCode(200)\n  @HealthCheck()\n  @ApiResponse({\n    status: 200,\n    description: 'Health Check for API WalletShare',\n    content: { 'text/html': { example: 'Health Check for API WalletShare' } },\n  })\n  check(): Promise {\n    return this.customHealthCheckService.checkHealth();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthCheckModule.html":{"url":"modules/HealthCheckModule.html","title":"module - HealthCheckModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthCheckModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HealthCheckModule\n\n\n\ncluster_HealthCheckModule_providers\n\n\n\n\nCustomHealthCheckService\n\nCustomHealthCheckService\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nHealthCheckModule -->\n\nCustomHealthCheckService->HealthCheckModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/health-check/health-check.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CustomHealthCheckService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HealthCheckController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HealthCheckController } from './health-check.controller';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { CustomHealthCheckService } from './custom-health-check.service';\nimport { HealthCheckQueryHandler } from './cqrs/handler/query/health-check.query-handler';\n\n@Module({\n  imports: [TerminusModule, CqrsModule],\n  controllers: [HealthCheckController],\n  providers: [\n    // ________ Service ________\n    CustomHealthCheckService,\n    // ________ Handler ________\n    HealthCheckQueryHandler,\n  ],\n})\nexport default class HealthCheckModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthCheckQuery.html":{"url":"classes/HealthCheckQuery.html","title":"class - HealthCheckQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthCheckQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/cqrs/query/health-check.query.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class HealthCheckQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthCheckQueryHandler.html":{"url":"classes/HealthCheckQueryHandler.html","title":"class - HealthCheckQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthCheckQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/cqrs/handler/query/health-check.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(healthCheckService: HealthCheckService, typeOrmHealthIndicator: TypeOrmHealthIndicator, memoryHealthIndicator: MemoryHealthIndicator, diskHealthIndicator: DiskHealthIndicator, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/health-check/cqrs/handler/query/health-check.query-handler.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        healthCheckService\n                                                  \n                                                        \n                                                                    HealthCheckService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeOrmHealthIndicator\n                                                  \n                                                        \n                                                                    TypeOrmHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        memoryHealthIndicator\n                                                  \n                                                        \n                                                                    MemoryHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        diskHealthIndicator\n                                                  \n                                                        \n                                                                    DiskHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Defined in src/api/health-check/cqrs/handler/query/health-check.query-handler.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { HealthCheckQuery } from '../../query/health-check.query';\nimport { HealthCheckResponse } from '../../../domain/response/health-check.response';\nimport {\n  DiskHealthIndicator,\n  HealthCheckService,\n  HealthIndicatorResult,\n  MemoryHealthIndicator,\n  TypeOrmHealthIndicator,\n} from '@nestjs/terminus';\n\n@QueryHandler(HealthCheckQuery)\nexport class HealthCheckQueryHandler implements IQueryHandler {\n  constructor(\n    private healthCheckService: HealthCheckService,\n    private typeOrmHealthIndicator: TypeOrmHealthIndicator,\n    private memoryHealthIndicator: MemoryHealthIndicator,\n    private diskHealthIndicator: DiskHealthIndicator,\n    private eventBus: EventBus,\n  ) {}\n  async execute(): Promise {\n    return new HealthCheckResponse(\n      await this.healthCheckService.check([\n        (): Promise => this.typeOrmHealthIndicator.pingCheck('database'),\n        // the process should not use more than 300MB memory\n        (): Promise => this.memoryHealthIndicator.checkHeap('memory heap', 30000 * 1024 * 1024),\n        // The process should not have more than 300MB RSS memory allocated\n        (): Promise => this.memoryHealthIndicator.checkRSS('memory RSS', 300 * 1024 * 1024),\n        // the used disk storage should not exceed the 50% of the available space\n        (): Promise =>\n          this.diskHealthIndicator.checkStorage('disk health', {\n            thresholdPercent: 0.5,\n            path: '/',\n          }),\n      ]),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthCheckResponse.html":{"url":"classes/HealthCheckResponse.html","title":"class - HealthCheckResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthCheckResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/domain/response/health-check.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                heathCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(heathCheck: HealthCheckResult)\n                    \n                \n                        \n                            \n                                Defined in src/api/health-check/domain/response/health-check.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        heathCheck\n                                                  \n                                                        \n                                                                    HealthCheckResult\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        heathCheck\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HealthCheckResult\n\n                    \n                \n                    \n                        \n                                Defined in src/api/health-check/domain/response/health-check.response.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HealthCheckResult } from '@nestjs/terminus';\n\nexport class HealthCheckResponse {\n  constructor(public readonly heathCheck: HealthCheckResult) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidIdException.html":{"url":"classes/InvalidIdException.html","title":"class - InvalidIdException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidIdException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/invalid-id.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/invalid-id.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class InvalidIdException extends HttpException {\n  constructor() {\n    super('Invalid Id', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidMailException.html":{"url":"classes/InvalidMailException.html","title":"class - InvalidMailException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidMailException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/invalid-mail.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/invalid-mail.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class InvalidMailException extends HttpException {\n  constructor() {\n    super('Mail is not valid', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidParameterEntityException.html":{"url":"classes/InvalidParameterEntityException.html","title":"class - InvalidParameterEntityException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidParameterEntityException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/invalid-parameter-entity.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/invalid-parameter-entity.exception.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError } from 'class-validator';\nimport { HttpException, HttpStatus } from '@nestjs/common';\n\ntype ConstraintMap = Record;\n\nexport class InvalidParameterEntityException extends HttpException {\n  constructor(errors: ValidationError[]) {\n    super(\n      {\n        status: HttpStatus.BAD_REQUEST,\n        message:\n          'Invalid parameters: ' +\n          errors.map((error: ValidationError) => {\n            const constraints = error.constraints as ConstraintMap;\n            return Object.keys(constraints).map(key => {\n              return constraints[key] || '';\n            });\n          }),\n      },\n      HttpStatus.BAD_REQUEST,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidPasswordException.html":{"url":"classes/InvalidPasswordException.html","title":"class - InvalidPasswordException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidPasswordException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/invalid-password.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/invalid-password.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class InvalidPasswordException extends HttpException {\n  constructor() {\n    super(\n      'Invalid password. Password must contain at least 4 characters, at least one uppercase letter, one lowercase letter and one number',\n      HttpStatus.BAD_REQUEST,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidUsernameException.html":{"url":"classes/InvalidUsernameException.html","title":"class - InvalidUsernameException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidUsernameException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/invalid-username.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/invalid-username.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class InvalidUsernameException extends HttpException {\n  constructor() {\n    super('Invalid username exception', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/InvoicesEntity.html":{"url":"entities/InvoicesEntity.html","title":"entity - InvoicesEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  InvoicesEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/invoices.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                clientAddress\n                            \n                            \n                                clientName\n                            \n                            \n                                clientVatNumber\n                            \n                            \n                                companyAddress\n                            \n                            \n                                companyName\n                            \n                            \n                                companyVatNumber\n                            \n                            \n                                createdAt\n                            \n                            \n                                currency\n                            \n                            \n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                    Optional\n                                discountAmount\n                            \n                            \n                                id\n                            \n                            \n                                invoiceNumber\n                            \n                            \n                                subscription\n                            \n                            \n                                taxRate\n                            \n                            \n                                totalAmount\n                            \n                            \n                                totalTax\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'amount', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clientAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'client_address', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'client_name', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clientVatNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'client_vat_number', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'company_address', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'company_name', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyVatNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'company_vat_number', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'currency', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'description', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        discountAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discount_amount', type: 'decimal', nullable: true})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invoiceNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'invoice_number', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, subscriptionEntity => subscriptionEntity.invoices)@ValidateNested()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taxRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'tax_rate', type: 'decimal'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'total_amount', type: 'decimal'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalTax\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'total_tax', type: 'decimal'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:113\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsNotEmpty, IsNumber, IsString, ValidateNested } from 'class-validator';\nimport { SubscriptionEntity } from './subscription.entity';\n\n@Entity('invoices')\nexport class InvoicesEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'amount', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  amount: number;\n\n  @Column({ name: 'currency', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  currency: string;\n\n  // @Column({ type: 'enum', enum: StatusInvoiceEnum, default: StatusInvoiceEnum.PENDING })\n  // @IsEnum(StatusInvoiceEnum)\n  // status: StatusInvoiceEnum;\n\n  // Informations supplémentaires pour la France\n\n  @Column({ name: 'invoice_number', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  invoiceNumber: string;\n\n  @Column({ name: 'company_name', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  companyName: string;\n\n  @Column({ name: 'company_address', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  companyAddress: string;\n\n  @Column({ name: 'company_vat_number', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  companyVatNumber: string;\n\n  @Column({ name: 'client_name', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  clientName: string;\n\n  @Column({ name: 'client_address', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  clientAddress: string;\n\n  @Column({ name: 'client_vat_number', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  clientVatNumber: string;\n\n  @Column({ name: 'description', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  description: string;\n\n  @Column({ name: 'tax_rate', type: 'decimal' })\n  @IsNotEmpty()\n  @IsNumber()\n  taxRate: number;\n\n  @Column({ name: 'total_tax', type: 'decimal' })\n  @IsNotEmpty()\n  @IsNumber()\n  totalTax: number;\n\n  @Column({ name: 'total_amount', type: 'decimal' })\n  @IsNotEmpty()\n  @IsNumber()\n  totalAmount: number;\n\n  @Column({ name: 'discount_amount', type: 'decimal', nullable: true })\n  @IsNumber()\n  discountAmount?: number;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => SubscriptionEntity, subscriptionEntity => subscriptionEntity.invoices)\n  @ValidateNested()\n  subscription: SubscriptionEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsTestEnvironmentPipe.html":{"url":"classes/IsTestEnvironmentPipe.html","title":"class - IsTestEnvironmentPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsTestEnvironmentPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/pipe/is-test-environment.pipe.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            PipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: never, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/util/pipe/is-test-environment.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            never\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentMetadata, HttpException, HttpStatus, PipeTransform } from '@nestjs/common';\n\nexport class IsTestEnvironmentPipe implements PipeTransform {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  transform(value: never, metadata: ArgumentMetadata): never {\n    if (process.env.NODE_ENV === 'test') {\n      return value;\n    }\n    throw new HttpException('Forbidden', HttpStatus.FORBIDDEN);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/JoinedConversation.html":{"url":"entities/JoinedConversation.html","title":"entity - JoinedConversation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  JoinedConversation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/joined-conversation.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                profile\n                            \n                            \n                                socketId\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, conversation => conversation.joinedProfiles)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profileEntity => profileEntity.joinedConversations)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        socketId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:46\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ProfileEntity } from './profile.entity';\nimport { ConversationEntity } from './conversation.entity';\n\n@Entity({ name: 'joined_conversation' })\nexport class JoinedConversation {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  socketId: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => ProfileEntity, profileEntity => profileEntity.joinedConversations)\n  @JoinColumn()\n  profile: ProfileEntity;\n\n  @ManyToOne(() => ConversationEntity, conversation => conversation.joinedProfiles)\n  @JoinColumn()\n  conversation: ConversationEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthenticationGuard.html":{"url":"injectables/JwtAuthenticationGuard.html","title":"injectable - JwtAuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport default class JwtAuthenticationGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtRefreshGuard.html":{"url":"injectables/JwtRefreshGuard.html","title":"injectable - JwtRefreshGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtRefreshGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/guards/jwt-refresh-token.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport default class JwtRefreshGuard extends AuthGuard('jwt-refresh-token') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtRefreshTokenStrategy.html":{"url":"injectables/JwtRefreshTokenStrategy.html","title":"injectable - JwtRefreshTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtRefreshTokenStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/strategy/jwt-refresh-token.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/strategy/jwt-refresh-token.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(request: Request, payload: TokenPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/strategy/jwt-refresh-token.strategy.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                TokenPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { config } from 'dotenv';\nimport { UserService } from '../../user/user.service';\nimport { TokenPayload } from '../interface/token-payload.interface';\nimport { Request } from 'express';\nimport { RequestUser } from '../interface/request-user.interface';\n\nconfig();\n@Injectable()\nexport class JwtRefreshTokenStrategy extends PassportStrategy(Strategy, 'jwt-refresh-token') {\n  constructor(private readonly userService: UserService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        (request: Request): string => {\n          return request?.headers?.authorization?.split(' ')[1] || '';\n        },\n      ]),\n      secretOrKey: process.env.JWT_REFRESH_TOKEN_SECRET,\n      passReqToCallback: true,\n    });\n  }\n\n  async validate(request: Request, payload: TokenPayload): Promise {\n    const refreshToken = request?.headers?.authorization?.split(' ')[1];\n    return await this.userService.getUserIfRefreshTokenMatches(refreshToken || '', payload.userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/strategy/jwt.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: TokenPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/strategy/jwt.strategy.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                TokenPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { TokenPayload } from '../interface/token-payload.interface';\nimport { Request } from 'express';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../user/domain/entities/user.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        (request: Request): string => {\n          return request?.headers?.authorization?.split(' ')[1] || '';\n        },\n      ]),\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: TokenPayload): Promise {\n    return await this.userRepository.findOneOrFail({\n      where: [{ id: payload.userId }],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ListRolesDto.html":{"url":"classes/ListRolesDto.html","title":"class - ListRolesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ListRolesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/list-roles.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/list-roles.dto.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/list-roles.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRoleEnum } from '../enum/user-role.enum';\n\nexport class ListRolesDto {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly roles: UserRoleEnum[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthenticationGuard.html":{"url":"injectables/LocalAuthenticationGuard.html","title":"injectable - LocalAuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/guards/auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthenticationGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/strategy/passport-local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/strategy/passport-local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(login: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/strategy/passport-local.strategy.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    login\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\nimport { UserEntity } from '../../user/domain/entities/user.entity';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authenticationService: AuthService) {\n    super({\n      usernameField: 'login',\n      passwordField: 'password',\n    });\n  }\n  async validate(login: string, password: string): Promise {\n    return this.authenticationService.login(login, password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoggingTypeEnum.html":{"url":"classes/LoggingTypeEnum.html","title":"class - LoggingTypeEnum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoggingTypeEnum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/domain/enum/logging-type.enum.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                ERROR\n                            \n                            \n                                    Static\n                                    Readonly\n                                REQUEST\n                            \n                            \n                                    Static\n                                    Readonly\n                                RESPONSE\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ERROR'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/enum/logging-type.enum.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        REQUEST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'REQUEST'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/enum/logging-type.enum.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'RESPONSE'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/enum/logging-type.enum.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoggingTypeEnum {\n  static readonly REQUEST = 'REQUEST';\n  static readonly RESPONSE = 'RESPONSE';\n  static readonly ERROR = 'ERROR';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginOfUserEvent.html":{"url":"classes/LoginOfUserEvent.html","title":"class - LoginOfUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginOfUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/login-of-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/login-of-user.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'login-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/login-of-user.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/login-of-user.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/login-of-user.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginOfUserEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'login-user';\n  constructor(public readonly username: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginOfUserEventHandler.html":{"url":"classes/LoginOfUserEventHandler.html","title":"class - LoginOfUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginOfUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/login-of-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/login-of-user.event-handler.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: LoginOfUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/login-of-user.event-handler.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                LoginOfUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { LoginOfUserEvent } from '../../event/login-of-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(LoginOfUserEvent)\nexport class LoginOfUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  async handle(event: LoginOfUserEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with username: ' + event.username + ' logged in',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MailDto.html":{"url":"classes/MailDto.html","title":"class - MailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/domain/dto/mail.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/domain/dto/mail.dto.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/domain/dto/mail.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/domain/dto/mail.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/domain/dto/mail.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class MailDto {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty()\n  email: string;\n\n  @ApiProperty()\n  title?: string;\n\n  @ApiProperty()\n  message?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MailLandingPageDto.html":{"url":"classes/MailLandingPageDto.html","title":"class - MailLandingPageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MailLandingPageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/domain/dto/mail-landing-page.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, mail: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/domain/dto/mail-landing-page.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mail\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/domain/dto/mail-landing-page.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/domain/dto/mail-landing-page.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MailLandingPageDto {\n  constructor(public readonly id: string, public readonly mail: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MailRequiredException.html":{"url":"classes/MailRequiredException.html","title":"class - MailRequiredException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MailRequiredException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/mail-required.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/mail-required.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class MailRequiredException extends HttpException {\n  constructor() {\n    super('Mail is required', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MailResponse.html":{"url":"classes/MailResponse.html","title":"class - MailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/domain/response/mail.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/domain/response/mail.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/domain/response/mail.response.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MailResponse {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly mail: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaEntity.html":{"url":"entities/MediaEntity.html","title":"entity - MediaEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/media.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CardPicture\n                            \n                            \n                                companyEntityBanner\n                            \n                            \n                                companyProfilePicture\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                groupBannerPicture\n                            \n                            \n                                groupPicture\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                profileEntityBanner\n                            \n                            \n                                profileEntityProfilePicture\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        CardPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, cardEntity => cardEntity.media, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyEntityBanner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, companyEntity => companyEntity.bannerPicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyProfilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, companyEntity => companyEntity.profilePicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupBannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, group => group.bannerPicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, group => group.picture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileEntityBanner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, profileEntity => profileEntity.bannerPicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileEntityProfilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, profileEntity => profileEntity.profilePicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:60\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ProfileEntity } from './profile.entity';\nimport {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { GroupEntity } from './group.entity';\nimport { CardEntity } from './card.entity';\nimport CompanyEntity from './company.entity';\n\n@Entity({ name: 'media' })\nexport class MediaEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  public key: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToOne(() => GroupEntity, group => group.picture, { onDelete: 'CASCADE' })\n  groupPicture: GroupEntity;\n\n  @OneToOne(() => GroupEntity, group => group.bannerPicture, {\n    onDelete: 'CASCADE',\n  })\n  groupBannerPicture: GroupEntity;\n\n  @OneToOne(() => ProfileEntity, profileEntity => profileEntity.profilePicture, { onDelete: 'CASCADE' })\n  profileEntityProfilePicture: ProfileEntity;\n  @OneToOne(() => ProfileEntity, profileEntity => profileEntity.bannerPicture, { onDelete: 'CASCADE' })\n  profileEntityBanner: ProfileEntity;\n\n  @OneToOne(() => CardEntity, cardEntity => cardEntity.media, { onDelete: 'CASCADE' })\n  CardPicture: CardEntity;\n\n  @OneToOne(() => CompanyEntity, companyEntity => companyEntity.profilePicture, { onDelete: 'CASCADE' })\n  companyProfilePicture: CompanyEntity;\n  @OneToOne(() => CompanyEntity, companyEntity => companyEntity.bannerPicture, { onDelete: 'CASCADE' })\n  companyEntityBanner: CompanyEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MessageEntity.html":{"url":"entities/MessageEntity.html","title":"entity - MessageEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MessageEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/message.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                author\n                            \n                            \n                                    Public\n                                content\n                            \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.messages, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, conversation => conversation.messages)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:43\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ConversationEntity } from './conversation.entity';\nimport { CardEntity } from './card.entity';\n\n@Entity({ name: 'message' })\nexport class MessageEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  public content: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.messages, { onDelete: 'CASCADE' })\n  public author: CardEntity;\n\n  @ManyToOne(() => ConversationEntity, conversation => conversation.messages)\n  conversation: ConversationEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoUserTraceException.html":{"url":"classes/NoUserTraceException.html","title":"class - NoUserTraceException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoUserTraceException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/no-user-trace.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    RuntimeException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/no-user-trace.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RuntimeException } from '@nestjs/core/errors/exceptions';\n\nexport class NoUserTraceException extends RuntimeException {\n  constructor() {\n    super(`Invalid parameter: No user trace provided`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/NotificationEntity.html":{"url":"entities/NotificationEntity.html","title":"entity - NotificationEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  NotificationEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/notification.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                isRead\n                            \n                            \n                                link\n                            \n                            \n                                profile\n                            \n                            \n                                title\n                            \n                            \n                                type\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, conversationEntity => conversationEntity.notifications, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: 'deleted_at', type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'description', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'is_read', type: 'boolean', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        link\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'link', type: 'varchar', length: 255, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profileEntity => profileEntity.notifications, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'title', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: NotificationTypeEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, userEntity => userEntity.notifications, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:49\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { NotificationTypeEnum } from './enum/notification-type.enum';\nimport { ProfileEntity } from './profile.entity';\nimport { ConversationEntity } from './conversation.entity';\nimport { IsNotEmpty, IsString } from 'class-validator';\nimport { UserEntity } from '../user/domain/entities/user.entity';\n\n@Entity({ name: 'notification' })\nexport class NotificationEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'title', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  title: string;\n\n  @Column({ name: 'description', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  description: string;\n\n  @Column({ type: 'enum', enum: NotificationTypeEnum, default: NotificationTypeEnum.INFO })\n  type: NotificationTypeEnum;\n\n  @Column({ name: 'is_read', type: 'boolean', default: false })\n  isRead: boolean;\n\n  @Column({ name: 'link', type: 'varchar', length: 255, nullable: true })\n  link: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => UserEntity, userEntity => userEntity.notifications, { nullable: true, onDelete: 'CASCADE' })\n  user: UserEntity;\n\n  @ManyToOne(() => ProfileEntity, profileEntity => profileEntity.notifications, { nullable: true, onDelete: 'CASCADE' })\n  profile: ProfileEntity;\n\n  @ManyToOne(() => ConversationEntity, conversationEntity => conversationEntity.notifications, {\n    nullable: true,\n    onDelete: 'CASCADE',\n  })\n  conversation: ConversationEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn({ name: 'created_at', type: 'timestamp' })\n  createdAt: Date;\n\n  @UpdateDateColumn({ name: 'updated_at', type: 'timestamp' })\n  updatedAt: Date;\n\n  @DeleteDateColumn({ name: 'deleted_at', type: 'timestamp', nullable: true })\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OccupationEntity.html":{"url":"entities/OccupationEntity.html","title":"entity - OccupationEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OccupationEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/occupation.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cards\n                            \n                            \n                                companies\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                profiles\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, cardEntity => cardEntity.occupations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, companyEntity => companyEntity.occupations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, profileEntity => profileEntity.occupations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:47\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport CompanyEntity from './company.entity';\nimport { CardEntity } from './card.entity';\nimport { ProfileEntity } from './profile.entity';\n\n@Entity('occupation')\nexport class OccupationEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: false, unique: true })\n  name: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToMany(() => ProfileEntity, profileEntity => profileEntity.occupations)\n  profiles: ProfileEntity[];\n\n  @ManyToMany(() => CompanyEntity, companyEntity => companyEntity.occupations)\n  companies: CompanyEntity[];\n\n  @ManyToMany(() => CardEntity, cardEntity => cardEntity.occupations)\n  cards: CardEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/PlanEntity.html":{"url":"entities/PlanEntity.html","title":"entity - PlanEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  PlanEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/plan.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                discountedPrice\n                            \n                            \n                                duration\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                subscriptions\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'description', type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountedPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discounted_price', type: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'duration', type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'name', type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'price', type: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, subscriptionEntity => subscriptionEntity.plan)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:51\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { SubscriptionEntity } from './subscription.entity';\n\n@Entity({ name: 'plan' })\nexport class PlanEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'name', type: 'varchar', length: 255 })\n  name: string;\n\n  @Column({ name: 'description', type: 'varchar', length: 255 })\n  description: string;\n\n  @Column({ name: 'price', type: 'float' })\n  price: number;\n\n  @Column({ name: 'duration', type: 'int' })\n  duration: number;\n\n  @Column({ name: 'discounted_price', type: 'float' })\n  discountedPrice: number;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToMany(() => SubscriptionEntity, subscriptionEntity => subscriptionEntity.plan)\n  subscriptions: SubscriptionEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProfileEntity.html":{"url":"entities/ProfileEntity.html","title":"entity - ProfileEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProfileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/profile.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                bannerPicture\n                            \n                            \n                                    Optional\n                                companies\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                joinedConversations\n                            \n                            \n                                notifications\n                            \n                            \n                                    Optional\n                                occupations\n                            \n                            \n                                    Optional\n                                ownerCompanies\n                            \n                            \n                                    Optional\n                                personalCards\n                            \n                            \n                                    Optional\n                                profilePicture\n                            \n                            \n                                    Optional\n                                savedCard\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                user\n                            \n                            \n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        bannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityBanner, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        companies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEmployeeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, companyEmployee => companyEmployee.profile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:124\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        joinedConversations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JoinedConversation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, joinedConversation => joinedConversation.profile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, notification => notification.profile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OccupationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, occupation => occupation.profiles, {onDelete: 'SET NULL'})@JoinTable({name: 'profile-occupation', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ownerCompanies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, companyEntity => companyEntity.ownerProfile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        personalCards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, card => card.owner, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityProfilePicture, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        savedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, card => card.profilesWhoSavedCard, {cascade: true, onDelete: 'SET NULL'})@JoinTable({name: 'saved-card', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.profiles)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { CardEntity } from './card.entity';\nimport { OccupationEntity } from './occupation.entity';\nimport { CompanyEmployeeEntity } from './company-employee.entity';\nimport { MediaEntity } from './media.entity';\nimport { JoinedConversation } from './joined-conversation.entity';\nimport CompanyEntity from './company.entity';\nimport { NotificationEntity } from './notification.entity';\n\n@Entity({ name: 'profile' })\nexport class ProfileEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  usernameProfile: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => UserEntity, user => user.profiles)\n  user?: UserEntity;\n\n  @OneToMany(() => CardEntity, card => card.owner, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  personalCards?: CardEntity[];\n\n  @ManyToMany(() => CardEntity, card => card.profilesWhoSavedCard, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  @JoinTable({\n    name: 'saved-card',\n    joinColumn: {\n      name: 'profile_id',\n    },\n    inverseJoinColumn: {\n      name: 'card_id',\n    },\n  })\n  savedCard?: CardEntity[];\n\n  @ManyToMany(() => OccupationEntity, occupation => occupation.profiles, {\n    onDelete: 'SET NULL',\n  })\n  @JoinTable({\n    name: 'profile-occupation',\n    joinColumn: {\n      name: 'profile_id',\n    },\n    inverseJoinColumn: {\n      name: 'occupation_id',\n    },\n  })\n  occupations?: OccupationEntity[];\n\n  @OneToMany(() => CompanyEmployeeEntity, companyEmployee => companyEmployee.profile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  companies?: CompanyEmployeeEntity[];\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityProfilePicture, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  profilePicture?: MediaEntity;\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityBanner, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  bannerPicture?: MediaEntity;\n\n  @OneToMany(() => JoinedConversation, joinedConversation => joinedConversation.profile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  joinedConversations?: JoinedConversation[];\n\n  @OneToMany(() => CompanyEntity, companyEntity => companyEntity.ownerProfile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  ownerCompanies?: CompanyEntity[];\n\n  @OneToMany(() => NotificationEntity, notification => notification.profile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  notifications: NotificationEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ReferralCodeEntity.html":{"url":"entities/ReferralCodeEntity.html","title":"entity - ReferralCodeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ReferralCodeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/referal-code.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                createdAt\n                            \n                            \n                                expiresAt\n                            \n                            \n                                id\n                            \n                            \n                                owner\n                            \n                            \n                                subscription\n                            \n                            \n                                updatedAt\n                            \n                            \n                                usedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'ABC123', minLength: 6, maxLength: 20})@Column({unique: true})@IsString()@Length(6, 10)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Date})@CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Date, required: false})@Column({type: 'timestamp', nullable: true})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'eb823d92-bf55-4210-8e24-89f4011bb96d'})@PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => UserEntity})@ManyToOne(undefined, user => user.referralCodes)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => SubscriptionEntity, required: false})@ManyToOne(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Date})@UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => UserEntity})@OneToOne(undefined, user => user.usedReferralCodes)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:29\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDateString, IsOptional, IsString, Length } from 'class-validator';\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  ManyToOne,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { SubscriptionEntity } from './subscription.entity';\nimport { UserEntity } from '../user/domain/entities/user.entity';\n\n@Entity('referral_code')\nexport class ReferralCodeEntity {\n  @ApiProperty({ example: 'eb823d92-bf55-4210-8e24-89f4011bb96d' })\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @ApiProperty({ example: 'ABC123', minLength: 6, maxLength: 20 })\n  @Column({ unique: true })\n  @IsString()\n  @Length(6, 10)\n  code: string;\n\n  @ApiProperty({ type: () => UserEntity })\n  @OneToOne(() => UserEntity, user => user.usedReferralCodes)\n  usedBy: UserEntity;\n\n  @ApiProperty({ type: () => UserEntity })\n  @ManyToOne(() => UserEntity, user => user.referralCodes)\n  owner: UserEntity;\n\n  @ApiProperty({ type: () => SubscriptionEntity, required: false })\n  @ManyToOne(() => SubscriptionEntity, { nullable: true })\n  subscription: SubscriptionEntity;\n\n  @ApiProperty({ type: () => Date, required: false })\n  @Column({ type: 'timestamp', nullable: true })\n  @IsOptional()\n  @IsDateString()\n  expiresAt: Date;\n\n  @ApiProperty({ type: () => Date })\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @ApiProperty({ type: () => Date })\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterCommand.html":{"url":"classes/RegisterCommand.html","title":"class - RegisterCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/cqrs/command/register.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                            \n                                    Public\n                                    Readonly\n                                password\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string, mail: string, password: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/cqrs/command/register.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mail\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/command/register.command.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/command/register.command.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/command/register.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RegisterCommand {\n  constructor(public readonly username: string, public readonly mail: string, public readonly password: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterEvent.html":{"url":"classes/RegisterEvent.html","title":"class - RegisterEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/cqrs/event/register.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/cqrs/event/register.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/event/register.event.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RegisterEvent {\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterEventHandler.html":{"url":"classes/RegisterEventHandler.html","title":"class - RegisterEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/cqrs/event-handler/register.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger_console\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logger_console\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('RegisterEventHandler')\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/event-handler/register.event-handler.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: RegisterEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/event-handler/register.event-handler.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RegisterEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { Logger } from '@nestjs/common';\nimport { logger } from '../../../../util/config/winston-logger.config';\nimport { RegisterEvent } from '../event/register.event';\n\n@EventsHandler(RegisterEvent)\nexport class RegisterEventHandler implements IEventHandler {\n  logger_console = new Logger('RegisterEventHandler');\n\n  handle(event: RegisterEvent): any {\n    logger.info('New user have registered  with id ' + event.userId);\n\n    this.logger_console.log('New user have registered with id ' + event.userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterHandler.html":{"url":"classes/RegisterHandler.html","title":"class - RegisterHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/cqrs/handler/command/register.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                regexValidatePassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                generateCode\n                            \n                            \n                                    Async\n                                generateUniqueReferralCode\n                            \n                            \n                                    Async\n                                getUserByReferralCode\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedEmail\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedUsername\n                            \n                            \n                                    Private\n                                isValidEmail\n                            \n                            \n                                    Private\n                                isValidPassword\n                            \n                            \n                                    Private\n                                isValidUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/cqrs/handler/command/register.handler.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        regexValidatePassword\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/api/auth/cqrs/handler/command/register.handler.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RegisterCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RegisterCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCode(length: number)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateUniqueReferralCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUniqueReferralCode()\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserByReferralCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByReferralCode(referralCode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    referralCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RegisterCommand } from '../../command/register.command';\nimport { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../../user/domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { validate } from 'class-validator';\nimport { RegisterEvent } from '../../event/register.event';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { InvalidParameterEntityException } from '../../../../../util/exception/custom-http-exception/invalid-parameter-entity.exception';\nimport { InvalidPasswordException } from '../../../../../util/exception/custom-http-exception/invalid-password.exception';\nimport { DuplicateMailException } from '../../../../../util/exception/custom-http-exception/duplicate-mail.exception';\nimport { DuplicateUsernameException } from '../../../../../util/exception/custom-http-exception/duplicate-username.exception';\nimport * as bcrypt from 'bcrypt';\nimport { InvalidMailException } from '../../../../../util/exception/custom-http-exception/invalid-mail.exception';\nimport { InvalidUsernameException } from '../../../../../util/exception/custom-http-exception/invalid-username.exception';\n\n@CommandHandler(RegisterCommand)\nexport class RegisterHandler implements ICommandHandler {\n  private regexValidatePassword;\n\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {\n    this.regexValidatePassword = new RegExp('^(?=.*[A-Za-z])(?=.*\\\\d)(?=.*[@$!%*#?&])[A-Za-z\\\\d@$!%*#?&]{6,}$');\n  }\n\n  async execute(command: RegisterCommand): Promise {\n    if (await this.isDuplicatedUsername(command.username)) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Username already exists' }),\n      );\n      throw new DuplicateUsernameException();\n    }\n    if (await this.isDuplicatedEmail(command.mail)) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Email already exists' }),\n      );\n      throw new DuplicateMailException();\n    }\n\n    if (this.isValidPassword(command.password)) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid password' }),\n      );\n      throw new InvalidPasswordException();\n    }\n\n    if (command.mail) {\n      if (!this.isValidEmail(command.mail)) {\n        this.eventBus.publish(\n          new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid mail' }),\n        );\n        throw new InvalidMailException();\n      }\n    }\n\n    if (command.username) {\n      if (!this.isValidUsername(command.username)) {\n        this.eventBus.publish(\n          new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid username' }),\n        );\n        throw new InvalidUsernameException();\n      }\n    }\n\n    const newUser = new UserEntity({\n      mail: command.mail,\n      password: bcrypt.hashSync(command.password, 10),\n      username: command.username,\n      referralCode: await this.generateUniqueReferralCode(),\n    });\n    const err = await validate(newUser);\n    if (err.length > 0) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid parameters :' + err }),\n      );\n      throw new InvalidParameterEntityException(err);\n    }\n\n    const insertedUser = await this.userRepository.save(newUser);\n    this.eventBus.publish(new RegisterEvent(insertedUser.id));\n    return insertedUser;\n  }\n\n  private async isDuplicatedUsername(username: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.username === username);\n    });\n  }\n\n  private async isDuplicatedEmail(email: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.mail === email);\n    });\n  }\n\n  private isValidPassword(password: string): boolean {\n    return !this.regexValidatePassword.test(password);\n  }\n\n  private isValidUsername(username: string): boolean {\n    return username.length > 4 && username.length  {\n    let code = this.generateCode(Number(process.env.LENGTH_REFERRAL_CODE) || 6);\n    while (await this.getUserByReferralCode(code)) {\n      code = this.generateCode(Number(process.env.LENGTH_REFERRAL_CODE) || 6);\n    }\n    return code;\n  }\n\n  async getUserByReferralCode(referralCode: string): Promise {\n    const user = await this.userRepository.findOne({ where: { referralCode: referralCode } });\n    return !!user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveRefreshTokenCommand.html":{"url":"classes/RemoveRefreshTokenCommand.html","title":"class - RemoveRefreshTokenCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveRefreshTokenCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/remove-refresh-token.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/remove-refresh-token.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/remove-refresh-token.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RemoveRefreshTokenCommand {\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveRefreshTokenCommandHandler.html":{"url":"classes/RemoveRefreshTokenCommandHandler.html","title":"class - RemoveRefreshTokenCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveRefreshTokenCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/remove-refresh-token.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/remove-refresh-token.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RemoveRefreshTokenCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/remove-refresh-token.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RemoveRefreshTokenCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { RemoveRefreshTokenCommand } from '../../command/remove-refresh-token.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@CommandHandler(RemoveRefreshTokenCommand)\nexport class RemoveRefreshTokenCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(command: RemoveRefreshTokenCommand): Promise {\n    try {\n      await this.userRepository.update(command.userId, {\n        currentHashedRefreshToken: undefined,\n      });\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'user', handler: 'RemoveRefreshTokenCommandHandler', error: error }),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveRefreshTokenEvent.html":{"url":"classes/RemoveRefreshTokenEvent.html","title":"class - RemoveRefreshTokenEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveRefreshTokenEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/remove-refresh-token.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/remove-refresh-token.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'remove-refresh-token'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/remove-refresh-token.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/remove-refresh-token.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/remove-refresh-token.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RemoveRefreshTokenEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'remove-refresh-token';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveRefreshTokenEventHandler.html":{"url":"classes/RemoveRefreshTokenEventHandler.html","title":"class - RemoveRefreshTokenEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveRefreshTokenEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/remove-refresh-token.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/remove-refresh-token.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: RemoveRefreshTokenEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/remove-refresh-token.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RemoveRefreshTokenEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { RemoveRefreshTokenEvent } from '../../event/remove-refresh-token.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(RemoveRefreshTokenEvent)\nexport class RemoveRefreshTokenEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  handle(event: RemoveRefreshTokenEvent): void {\n    this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Refresh token with id: ' + event.userId + ' removed',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestLoggingMiddleware.html":{"url":"injectables/RequestLoggingMiddleware.html","title":"injectable - RequestLoggingMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RequestLoggingMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/request-logging.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                VERBOSE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLoggerService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/middleware/request-logging.middleware.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLoggerService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/request-logging.middleware.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        VERBOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VerboseLogEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/request-logging.middleware.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport * as useragent from 'useragent';\nimport { Request, Response } from 'express';\nimport { CreateLogDto } from '../api/api-log/domain/dto/create-log.dto';\nimport { ApiTypeEnum } from '../api/api-log/domain/enum/api-type.enum';\nimport { ApiLogService } from '../api/api-log/api-log.service';\nimport { LoggingTypeEnum } from '../api/api-log/domain/enum/logging-type.enum';\nimport { VerboseLogEnum } from '../api/api-log/domain/enum/verbose-log.enum';\n\n@Injectable()\nexport class RequestLoggingMiddleware implements NestMiddleware {\n  private readonly VERBOSE: VerboseLogEnum;\n  constructor(private readonly apiLoggerService: ApiLogService) {\n    this.VERBOSE = (process.env.VERBOSE as VerboseLogEnum) || VerboseLogEnum.NONE;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  use(req: Request, res: Response, next: Function): void {\n    const ua = useragent.parse(req.headers['user-agent']);\n\n    const os = ua.os.toString();\n    const device = ua.device.toString();\n    const screenSize = req.headers['screen-size'] === undefined ? undefined : req.headers['screen-size'].toString();\n\n    const createLogDto = new CreateLogDto({});\n    createLogDto.loggingType = LoggingTypeEnum.REQUEST;\n    createLogDto.apiType = ApiTypeEnum.WALLET_SHARE_API;\n    createLogDto.method = req.method;\n    createLogDto.route = req.baseUrl;\n    createLogDto.headers = req.headers || undefined;\n    createLogDto.body = this.VERBOSE == VerboseLogEnum.DEBUG ? req.body : undefined;\n    createLogDto.platform = device;\n    createLogDto.os = os;\n    createLogDto.ip = req.ip;\n    createLogDto.platform = req.headers['user-agent']\n      ? req?.headers['user-agent']?.split('(')[1]?.split(')')[0]?.split('; ')[1]\n      : undefined;\n    createLogDto.screenSize = screenSize;\n\n    this.apiLoggerService.createLog(createLogDto);\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestUser.html":{"url":"interfaces/RequestUser.html","title":"interface - RequestUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RequestUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/interface/request-user.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserEntity\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from 'express';\nimport { UserEntity } from '../../user/domain/entities/user.entity';\n\nexport interface RequestUser extends Request {\n  user: UserEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResponseLoggingMiddleware.html":{"url":"injectables/ResponseLoggingMiddleware.html","title":"injectable - ResponseLoggingMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResponseLoggingMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/response-logging.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                VERBOSE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLoggerService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/middleware/response-logging.middleware.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLoggerService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/response-logging.middleware.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        VERBOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VerboseLogEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/response-logging.middleware.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport * as useragent from 'useragent';\nimport { Request, Response } from 'express';\nimport { CreateLogDto } from '../api/api-log/domain/dto/create-log.dto';\nimport { ApiLogService } from '../api/api-log/api-log.service';\nimport { VerboseLogEnum } from '../api/api-log/domain/enum/verbose-log.enum';\n\n@Injectable()\nexport class ResponseLoggingMiddleware implements NestMiddleware {\n  private readonly VERBOSE: VerboseLogEnum;\n\n  constructor(private readonly apiLoggerService: ApiLogService) {\n    this.VERBOSE = (process.env.VERBOSE as VerboseLogEnum) || VerboseLogEnum.NONE;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types,@typescript-eslint/explicit-module-boundary-types,@typescript-eslint/explicit-function-return-type\n  async use(req: Request, res: Response, next: Function) {\n    await next();\n    const ua = useragent.parse(req.headers['user-agent']);\n\n    const os = ua.os.toString();\n    const device = ua.device.toString();\n    const screenSize = req.headers['screen-size'] === undefined ? undefined : req.headers['screen-size'].toString();\n\n    const createLogDto = new CreateLogDto({});\n    createLogDto.method = req.method;\n    createLogDto.route = req.baseUrl;\n    createLogDto.headers = req.headers || undefined;\n    createLogDto.body = undefined;\n    createLogDto.status = res.statusCode;\n    createLogDto.responseHeaders = res.getHeaders();\n    createLogDto.responseBody = res.locals.responseBody;\n    createLogDto.error = undefined;\n    createLogDto.os = os;\n    createLogDto.ip = req.ip;\n    createLogDto.platform = device;\n    createLogDto.screenSize = screenSize;\n\n    this.apiLoggerService.createLog(createLogDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreUserCommand.html":{"url":"classes/RestoreUserCommand.html","title":"class - RestoreUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/restore-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/restore-user.command.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/restore-user.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RestoreUserCommand {\n  public readonly id: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreUserCommandHandler.html":{"url":"classes/RestoreUserCommandHandler.html","title":"class - RestoreUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/restore-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                eventBus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/restore-user.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        eventBus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventBus\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/restore-user.command-handler.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RestoreUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/restore-user.command-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RestoreUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { RestoreUserCommand } from '../../command/restore-user.command';\nimport { RestoreUserEvent } from '../../event/restore-user.event';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\n@CommandHandler(RestoreUserCommand)\nexport class RestoreUserCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    public eventBus: EventBus,\n  ) {}\n\n  async execute(command: RestoreUserCommand): Promise {\n    try {\n      if (!command.id) throw new Error('User id is required');\n      try {\n        await this.userRepository.findOneOrFail({ where: [{ id: command.id }], withDeleted: true });\n      } catch (e) {\n        throw new Error('User not found');\n      }\n      await this.userRepository.restore(command.id);\n      this.eventBus.publish(new RestoreUserEvent(command.id));\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'user', handler: 'RestoreUserCommandHandler', error }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreUserEvent.html":{"url":"classes/RestoreUserEvent.html","title":"class - RestoreUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/restore-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/restore-user.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'restore-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/restore-user.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/restore-user.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/restore-user.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RestoreUserEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'restore-user';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreUserEventHandler.html":{"url":"classes/RestoreUserEventHandler.html","title":"class - RestoreUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/restore-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/restore-user.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: RestoreUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/restore-user.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RestoreUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { RestoreUserEvent } from '../../event/restore-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(RestoreUserEvent)\nexport class RestoreUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: RestoreUserEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' restored',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleGroupMembershipEnum.html":{"url":"classes/RoleGroupMembershipEnum.html","title":"class - RoleGroupMembershipEnum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleGroupMembershipEnum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/enum/role-group-membership.enum.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                ADMIN\n                            \n                            \n                                    Static\n                                    Readonly\n                                MEMBER\n                            \n                            \n                                    Static\n                                    Readonly\n                                OWNER\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ADMIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ADMIN'\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/enum/role-group-membership.enum.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MEMBER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'MEMBER'\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/enum/role-group-membership.enum.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        OWNER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'OWNER'\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/enum/role-group-membership.enum.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RoleGroupMembershipEnum {\n  static readonly MEMBER = 'MEMBER';\n  static readonly ADMIN = 'ADMIN';\n  static readonly OWNER = 'OWNER';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SamePasswordException.html":{"url":"classes/SamePasswordException.html","title":"class - SamePasswordException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SamePasswordException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/same-password.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/same-password.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class SamePasswordException extends HttpException {\n  constructor() {\n    super('New password is the same as old password', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMailCommand.html":{"url":"classes/SendMailCommand.html","title":"class - SendMailCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMailCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/cqrs/command/send-mail.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                message\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/cqrs/command/send-mail.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/command/send-mail.command.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/command/send-mail.command.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/command/send-mail.command.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SendMailCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly email: string;\n\n  public readonly title?: string | undefined;\n\n  public readonly message?: string | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMailCommandHandler.html":{"url":"classes/SendMailCommandHandler.html","title":"class - SendMailCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMailCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/cqrs/handler/command/send-mail.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/cqrs/handler/command/send-mail.command.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: SendMailCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-mail/cqrs/handler/command/send-mail.command.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                SendMailCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { SendMailEvent } from '../../event/send-mail.event';\nimport { SendMailCommand } from '../../command/send-mail.command';\n\n@CommandHandler(SendMailCommand)\nexport class SendMailCommandHandler implements ICommandHandler {\n  constructor(@Inject('API_LOG') private client: ClientProxy, private readonly eventBus: EventBus) {}\n  async execute(command: SendMailCommand): Promise {\n    this.client.emit('send-email', command);\n    this.eventBus.publish(\n      new SendMailEvent({\n        email: command.email,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMailEvent.html":{"url":"classes/SendMailEvent.html","title":"class - SendMailEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMailEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/cqrs/event/send-mail.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                message\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'send-mail'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'api-mail'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SendMailEvent {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly module: string = 'api-mail';\n  public readonly method: string = 'send-mail';\n\n  public readonly email: string;\n\n  public readonly title?: string;\n\n  public readonly message?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMailEventHandler.html":{"url":"classes/SendMailEventHandler.html","title":"class - SendMailEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMailEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/cqrs/handler/event/send-mail.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/cqrs/handler/event/send-mail.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: SendMailEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-mail/cqrs/handler/event/send-mail.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SendMailEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { SendMailEvent } from '../../event/send-mail.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(SendMailEvent)\nexport class SendMailEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  async handle(event: SendMailEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Mail sent to: ' + event.email,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentRefreshTokenCommand.html":{"url":"classes/SetCurrentRefreshTokenCommand.html","title":"class - SetCurrentRefreshTokenCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentRefreshTokenCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/set-current-refresh-token.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                refreshToken\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(refreshToken: string, userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/set-current-refresh-token.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        refreshToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/set-current-refresh-token.command.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/set-current-refresh-token.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SetCurrentRefreshTokenCommand {\n  constructor(public readonly refreshToken: string, public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentRefreshTokenCommandHandler.html":{"url":"classes/SetCurrentRefreshTokenCommandHandler.html","title":"class - SetCurrentRefreshTokenCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentRefreshTokenCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/set-current-refresh-token.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/set-current-refresh-token.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: SetCurrentRefreshTokenCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/set-current-refresh-token.command-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                SetCurrentRefreshTokenCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { SetCurrentRefreshTokenCommand } from '../../command/set-current-refresh-token.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport * as bcrypt from 'bcrypt';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@CommandHandler(SetCurrentRefreshTokenCommand)\nexport class SetCurrentRefreshTokenCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(command: SetCurrentRefreshTokenCommand): Promise {\n    try {\n      const currentHashedRefreshToken = await bcrypt.hash(command.refreshToken, 10);\n      await this.userRepository.update(command.userId, {\n        currentHashedRefreshToken,\n      });\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'user', handler: 'SetCurrentRefreshTokenCommandHandler', error: error }),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentRefreshTokenEvent.html":{"url":"classes/SetCurrentRefreshTokenEvent.html","title":"class - SetCurrentRefreshTokenEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentRefreshTokenEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/set-current-refresh-token.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/set-current-refresh-token.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'set-refresh-token-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/set-current-refresh-token.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/set-current-refresh-token.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/set-current-refresh-token.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SetCurrentRefreshTokenEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'set-refresh-token-user';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentRefreshTokenEventHandler.html":{"url":"classes/SetCurrentRefreshTokenEventHandler.html","title":"class - SetCurrentRefreshTokenEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentRefreshTokenEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/set-current-refresh-token.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/set-current-refresh-token.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: SetCurrentRefreshTokenEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/set-current-refresh-token.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SetCurrentRefreshTokenEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { SetCurrentRefreshTokenEvent } from '../../event/set-current-refresh-token.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(SetCurrentRefreshTokenEvent)\nexport class SetCurrentRefreshTokenEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  handle(event: SetCurrentRefreshTokenEvent): void {\n    this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Refresh token with id: ' + event.userId + ' set',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/dto/sign-in.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@MinLength(5)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-in.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-in.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, MaxLength, MinLength } from 'class-validator';\n\nexport class SignInDto {\n  @IsNotEmpty()\n  username: string;\n\n  @IsNotEmpty()\n  @MinLength(5)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpDto.html":{"url":"classes/SignUpDto.html","title":"class - SignUpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/dto/sign-up.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mail\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-up.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@MinLength(5)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-up.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-up.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, MaxLength, MinLength } from 'class-validator';\n\nexport class SignUpDto {\n  @IsNotEmpty()\n  username: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  mail: string;\n\n  @IsNotEmpty()\n  @MinLength(5)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/SocialNetworkEntity.html":{"url":"entities/SocialNetworkEntity.html","title":"entity - SocialNetworkEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  SocialNetworkEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/social-network.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                define the social network entity\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cards\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, cardEntity => cardEntity.socialNetwork)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:40\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { CardEntity } from './card.entity';\n\n/**\n * @description\n * define the social network entity\n * @class\n * @classdesc define the social network entity\n * @memberof module:entities\n * @name SocialNetworkEntity\n * @property {string} id - the id of the social network\n * @property {string} name - the name of the social network\n * @property {string} url - the url of the social network\n * @property {string} icon - the icon of the social network\n * @property {Date} createdAt - the date of creation of the social network\n * @property {Date} updatedAt - the date of update of the social network\n * @property {Date} deletedAt - the date of deletion of the social network\n */\n@Entity({ name: 'social_network' })\nexport class SocialNetworkEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  name: string;\n\n  @Column()\n  url: string;\n\n  @Column()\n  icon: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToMany(() => CardEntity, cardEntity => cardEntity.socialNetwork)\n  cards: CardEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteUserCommand.html":{"url":"classes/SoftDeleteUserCommand.html","title":"class - SoftDeleteUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/soft-delete-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/soft-delete-user.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/soft-delete-user.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SoftDeleteUserCommand {\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteUserCommandHandler.html":{"url":"classes/SoftDeleteUserCommandHandler.html","title":"class - SoftDeleteUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/soft-delete-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                eventBus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/soft-delete-user.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        eventBus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventBus\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/soft-delete-user.command-handler.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: SoftDeleteUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/soft-delete-user.command-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                SoftDeleteUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { SoftDeleteUserCommand } from '../../command/soft-delete-user.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { SoftDeleteUserEvent } from '../../event/soft-delete-user.event';\n\n@CommandHandler(SoftDeleteUserCommand)\nexport class SoftDeleteUserCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    public eventBus: EventBus,\n  ) {}\n\n  async execute(command: SoftDeleteUserCommand): Promise {\n    try {\n      await this.userRepository\n        .findOneOrFail({\n          where: { id: command.userId },\n        })\n        .catch(() => {\n          throw new Error('User not found');\n        });\n\n      await this.userRepository.softDelete({\n        id: command.userId,\n      });\n      this.eventBus.publish(new SoftDeleteUserEvent(command.userId));\n    } catch (error) {\n      this.eventBus.publish(new ErrorCustomEvent({ localisation: 'user', handler: 'DeleteUserCommandHandler', error }));\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteUserEvent.html":{"url":"classes/SoftDeleteUserEvent.html","title":"class - SoftDeleteUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/soft-delete-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/soft-delete-user.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'set-refresh-token-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/soft-delete-user.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/soft-delete-user.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/soft-delete-user.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SoftDeleteUserEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'set-refresh-token-user';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteUserEventHandler.html":{"url":"classes/SoftDeleteUserEventHandler.html","title":"class - SoftDeleteUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/soft-delete-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/soft-delete-user.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: SoftDeleteUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/soft-delete-user.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SoftDeleteUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { SoftDeleteUserEvent } from '../../event/soft-delete-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(SoftDeleteUserEvent)\nexport class SoftDeleteUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: SoftDeleteUserEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' soft deleted',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/StripEventEntity.html":{"url":"entities/StripEventEntity.html","title":"entity - StripEventEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  StripEventEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/strip-event.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/strip-event.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n/**\n * @name StripEventEntity\n * @class StripEventEntity\n * @extends {BaseEntity}\n * @memberof PaymentEntity\n */\n@Entity({ name: 'strip_event' })\nexport default class StripEventEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn()\n  public id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/SubscriptionEntity.html":{"url":"entities/SubscriptionEntity.html","title":"entity - SubscriptionEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  SubscriptionEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/subscription.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                discountCodes\n                            \n                            \n                                    Public\n                                endDate\n                            \n                            \n                                id\n                            \n                            \n                                invoices\n                            \n                            \n                                    Public\n                                plan\n                            \n                            \n                                    Public\n                                startDate\n                            \n                            \n                                    Public\n                                    Optional\n                                stripCustomerId\n                            \n                            \n                                    Public\n                                    Optional\n                                trialEndDate\n                            \n                            \n                                    Public\n                                    Optional\n                                trialStartDate\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountCodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DiscountCodeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, discountCodeEntity => discountCodeEntity.subscriptions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'end_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invoices\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InvoicesEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, invoicesEntity => invoicesEntity.subscription)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        plan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PlanEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, planEntity => planEntity.subscriptions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'start_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        stripCustomerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:43\n                        \n                    \n\n            \n                \n                    This is a flag to indicate if the user has a stripe customer id.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        trialEndDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'trial_end_date', type: 'date', nullable: true})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        trialStartDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'trial_start_date', type: 'date', nullable: true})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, userEntity => userEntity.subscriptions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:61\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsDate } from 'class-validator';\nimport { PlanEntity } from './plan.entity';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { InvoicesEntity } from './invoices.entity';\nimport { DiscountCodeEntity } from './discount-code.entity';\n\n@Entity({ name: 'subscription' })\nexport class SubscriptionEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'start_date', type: 'date' })\n  @IsDate()\n  public startDate: Date;\n\n  @Column({ name: 'end_date', type: 'date' })\n  @IsDate()\n  public endDate: Date;\n\n  // @Column({ type: 'enum', enum: StatusSubscriptionEnum, default: StatusSubscriptionEnum.ACTIVE })\n  // public status: StatusSubscriptionEnum;\n\n  /**\n   * @description\n   * This is a flag to indicate if the user has a stripe customer id.\n   */\n  @Column({ unique: true, nullable: true })\n  public stripCustomerId?: string;\n\n  @Column({ name: 'trial_start_date', type: 'date', nullable: true })\n  @IsDate()\n  public trialStartDate?: Date;\n\n  @Column({ name: 'trial_end_date', type: 'date', nullable: true })\n  @IsDate()\n  public trialEndDate?: Date;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => PlanEntity, planEntity => planEntity.subscriptions)\n  public plan: PlanEntity;\n\n  @ManyToOne(() => UserEntity, userEntity => userEntity.subscriptions)\n  user: UserEntity;\n\n  @OneToMany(() => InvoicesEntity, invoicesEntity => invoicesEntity.subscription)\n  invoices: InvoicesEntity[];\n\n  @ManyToMany(() => DiscountCodeEntity, discountCodeEntity => discountCodeEntity.subscriptions)\n  discountCodes: DiscountCodeEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimestampEntityExtendEntity.html":{"url":"classes/TimestampEntityExtendEntity.html","title":"class - TimestampEntityExtendEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimestampEntityExtendEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/global/extend-entity/timestamp.extend-entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createdAt\n                            \n                            \n                                    Public\n                                deletedAt\n                            \n                            \n                                    Public\n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createTimestamp\n                            \n                            \n                                    Public\n                                deleteTimestamp\n                            \n                            \n                                    Public\n                                updateTimestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', name: 'created_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', name: 'deleted_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', name: 'updated_at', onUpdate: 'CURRENT_TIMESTAMP'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createTimestamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteTimestamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateTimestamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity, Column } from 'typeorm';\n\nexport class TimestampEntityExtendEntity extends BaseEntity {\n  @Column({ type: 'timestamp', name: 'created_at' })\n  public createdAt: Date;\n\n  @Column({ type: 'timestamp', name: 'updated_at', onUpdate: 'CURRENT_TIMESTAMP' })\n  public updatedAt: Date;\n\n  @Column({ type: 'timestamp', name: 'deleted_at' })\n  public deletedAt: Date | null;\n\n  public createTimestamp(): void {\n    this.createdAt = new Date(Date.now());\n    this.updatedAt = new Date(Date.now());\n    this.deletedAt = null;\n  }\n\n  public updateTimestamp(): void {\n    this.updatedAt = new Date(Date.now());\n    this.deletedAt = null;\n  }\n\n  public deleteTimestamp(): void {\n    this.deletedAt = new Date(Date.now());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenPayload.html":{"url":"interfaces/TokenPayload.html","title":"interface - TokenPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/interface/token-payload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenPayload {\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnauthorizedRequestException.html":{"url":"classes/UnauthorizedRequestException.html","title":"class - UnauthorizedRequestException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnauthorizedRequestException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/unauthorized-request.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/unauthorized-request.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class UnauthorizedRequestException extends HttpException {\n  constructor() {\n    super('Unauthorized request', HttpStatus.UNAUTHORIZED);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCommand.html":{"url":"classes/UpdateUserCommand.html","title":"class - UpdateUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/update-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                user\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, user: UpdateUserDto)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/update-user.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        UpdateUserDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateUserDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user.command.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateUserDto } from '../../domain/dto/update-user.dto';\n\nexport class UpdateUserCommand {\n  constructor(public readonly userId: string, public readonly user: UpdateUserDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCommandHandler.html":{"url":"classes/UpdateUserCommandHandler.html","title":"class - UpdateUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/update-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                eventBus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedEmail\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedUsername\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicateOfDeletedMail\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicateOfDeletedUsername\n                            \n                            \n                                    Private\n                                isValidEmail\n                            \n                            \n                                    Private\n                                isValidUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        eventBus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventBus\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:20\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicateOfDeletedMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicateOfDeletedMail(mail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicateOfDeletedUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicateOfDeletedUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { UpdateUserCommand } from '../../command/update-user.command';\nimport { Logger } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { validate } from 'class-validator';\nimport { InvalidClassException } from '@nestjs/core/errors/exceptions/invalid-class.exception';\nimport { UpdateUserEvent } from '../../event/update-user.event';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { UserResponse } from '../../../domain/response/user.response';\nimport { DuplicateUsernameException } from '../../../../../util/exception/custom-http-exception/duplicate-username.exception';\nimport { DuplicateMailException } from '../../../../../util/exception/custom-http-exception/duplicate-mail.exception';\n\n@CommandHandler(UpdateUserCommand)\nexport class UpdateUserCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    public eventBus: EventBus,\n  ) {}\n\n  async execute(command: UpdateUserCommand): Promise {\n    try {\n      if (command.user.username) {\n        if (await this.isDuplicatedUsername(command.user.username)) {\n          this.eventBus.publish(\n            new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Username already exists' }),\n          );\n          throw new DuplicateUsernameException();\n        }\n      }\n\n      if (command.user.mail) {\n        if (await this.isDuplicatedEmail(command.user.mail)) {\n          this.eventBus.publish(\n            new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Email already exists' }),\n          );\n          throw new DuplicateMailException();\n        }\n      }\n      if ((await this.userRepository.findOne({ where: [{ id: command.userId }] })) === undefined) {\n        throw new Error('User not found');\n      }\n\n      await this.isDuplicateOfDeletedUsername(command.user.username || '');\n      await this.isDuplicateOfDeletedMail(command.user.mail || '');\n\n      const err = await validate(command.user);\n      if (err.length > 0) {\n        throw new InvalidClassException('Parameter not validate');\n      }\n      await this.userRepository.update(command.userId, command.user);\n      const user: UserEntity = await this.userRepository.findOneOrFail({\n        where: [{ id: command.userId }],\n      });\n      this.eventBus.publish(new UpdateUserEvent(command.userId));\n      return new UserResponse({ ...user });\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'user',\n          handler: 'UpdateUserCommandHandler',\n          error: error,\n        }),\n      );\n      throw error;\n    }\n  }\n\n  private async isDuplicatedUsername(username: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.username === username);\n    });\n  }\n\n  private async isDuplicatedEmail(email: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.mail === email);\n    });\n  }\n\n  private isValidUsername(username: string): boolean {\n    return username.length > 4 && username.length  {\n    const verifyDuplicateMailWithDeleted: UserEntity | null = await this.userRepository.findOne({\n      where: [{ mail: mail }],\n      withDeleted: true,\n    });\n    if (verifyDuplicateMailWithDeleted !== null && verifyDuplicateMailWithDeleted.deletedAt !== null) {\n      await this.userRepository.update(verifyDuplicateMailWithDeleted.id, {\n        mail: 'deleted' + verifyDuplicateMailWithDeleted.mail + ' ' + Math.random().toString().split('.')[1],\n      });\n      await this.eventBus.publish(new UpdateUserEvent(verifyDuplicateMailWithDeleted.id));\n    }\n  }\n\n  private async isDuplicateOfDeletedUsername(username: string): Promise {\n    const verifyDuplicateMailWithDeleted: UserEntity | null = await this.userRepository.findOne({\n      where: [{ username: username }],\n      withDeleted: true,\n    });\n    if (verifyDuplicateMailWithDeleted !== null) {\n      await this.userRepository.update(verifyDuplicateMailWithDeleted.id, {\n        username: 'deleted' + verifyDuplicateMailWithDeleted.username + ' ' + Math.random().toString().split('.')[1],\n      });\n      await this.eventBus.publish(new UpdateUserEvent(verifyDuplicateMailWithDeleted.id));\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCredentialCommand.html":{"url":"classes/UpdateUserCredentialCommand.html","title":"class - UpdateUserCredentialCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCredentialCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/update-user-credential.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                updateUserCredentialDto\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/update-user-credential.command.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updateUserCredentialDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateUserCredentialDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user-credential.command.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user-credential.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateUserCredentialDto } from '../../domain/dto/update-user-credential.dto';\n\nexport class UpdateUserCredentialCommand {\n  public readonly userId: string;\n  public readonly updateUserCredentialDto: UpdateUserCredentialDto;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCredentialCommandHandler.html":{"url":"classes/UpdateUserCredentialCommandHandler.html","title":"class - UpdateUserCredentialCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCredentialCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/update-user-credential.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                regexValidatePassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                isValidPassword\n                            \n                            \n                                    Private\n                                    Async\n                                verifyPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/update-user-credential.command-handler.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        regexValidatePassword\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/update-user-credential.command-handler.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateUserCredentialCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user-credential.command-handler.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateUserCredentialCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user-credential.command-handler.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        verifyPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyPassword(plainTextPassword: string, hashedPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user-credential.command-handler.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plainTextPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hashedPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { UpdateUserCredentialCommand } from '../../command/update-user-credential.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { Repository } from 'typeorm';\nimport { UpdateUserCredentialEvent } from '../../event/update-user-credential.event';\nimport * as bcrypt from 'bcrypt';\n\n@CommandHandler(UpdateUserCredentialCommand)\nexport class UpdateUserCredentialCommandHandler implements ICommandHandler {\n  private regexValidatePassword;\n\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {\n    this.regexValidatePassword = new RegExp('^(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{4,}$');\n  }\n\n  async execute(command: UpdateUserCredentialCommand): Promise {\n    try {\n      if (command.updateUserCredentialDto.newPassword == command.updateUserCredentialDto.password) {\n        throw new Error('New password is the same as old password');\n      }\n      if (!this.isValidPassword(command.updateUserCredentialDto.newPassword)) {\n        throw new Error('Invalid password');\n      }\n      const user = await this.userRepository.findOne({\n        where: { id: command.userId },\n        select: ['id', 'password'],\n      });\n      if (!user) {\n        throw new Error('User not found');\n      }\n\n      if (!(await this.verifyPassword(command.updateUserCredentialDto.password, user.password))) {\n        throw new Error('Invalid old password');\n      }\n\n      await this.userRepository.update(command.userId, { password: command.updateUserCredentialDto.newPassword });\n      await this.eventBus.publish(new UpdateUserCredentialEvent(command.userId));\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'user', handler: 'UpdateUserCredentialCommandHandler', error: error }),\n      );\n      throw error;\n    }\n  }\n  private isValidPassword(password: string): boolean {\n    return this.regexValidatePassword.test(password);\n  }\n\n  private async verifyPassword(plainTextPassword: string, hashedPassword: string): Promise {\n    return await bcrypt.compare(plainTextPassword, hashedPassword);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCredentialDto.html":{"url":"classes/UpdateUserCredentialDto.html","title":"class - UpdateUserCredentialDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCredentialDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/update-user-credential.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                newPassword\n                            \n                            \n                                    Public\n                                    Readonly\n                                password\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/update-user-credential.dto.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user-credential.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user-credential.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user-credential.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateUserCredentialDto {\n  public readonly username: string;\n  public readonly password: string;\n\n  public readonly newPassword: string;\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCredentialEvent.html":{"url":"classes/UpdateUserCredentialEvent.html","title":"class - UpdateUserCredentialEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCredentialEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/update-user-credential.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/update-user-credential.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'update-user-credential'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user-credential.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user-credential.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user-credential.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateUserCredentialEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'update-user-credential';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCredentialEventHandler.html":{"url":"classes/UpdateUserCredentialEventHandler.html","title":"class - UpdateUserCredentialEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCredentialEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/update-user-credential.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/update-user-credential.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: UpdateUserCredentialEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/update-user-credential.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateUserCredentialEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\nimport { UpdateUserCredentialEvent } from '../../event/update-user-credential.event';\n\n@EventsHandler(UpdateUserCredentialEvent)\nexport class UpdateUserCredentialEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: UpdateUserCredentialEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' updated',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                mail\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 20)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, Length } from 'class-validator';\n\nexport class UpdateUserDto {\n  @IsEmail()\n  @IsNotEmpty()\n  mail?: string;\n\n  @Length(5, 20)\n  @IsNotEmpty()\n  username?: string;\n\n  password?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserEvent.html":{"url":"classes/UpdateUserEvent.html","title":"class - UpdateUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/update-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/update-user.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'update-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateUserEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'update-user';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserEventHandler.html":{"url":"classes/UpdateUserEventHandler.html","title":"class - UpdateUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/update-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/update-user.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: UpdateUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/update-user.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { UpdateUserEvent } from '../../event/update-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(UpdateUserEvent)\nexport class UpdateUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  handle(event: UpdateUserEvent): void {\n    this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' updated',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserRoleCommand.html":{"url":"classes/UpdateUserRoleCommand.html","title":"class - UpdateUserRoleCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserRoleCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/update-user-role.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/update-user-role.command.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user-role.command.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user-role.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRoleEnum } from '../../domain/enum/user-role.enum';\n\nexport class UpdateUserRoleCommand {\n  public readonly userId: string;\n  public readonly roles: UserRoleEnum[];\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserRoleCommandHandler.html":{"url":"classes/UpdateUserRoleCommandHandler.html","title":"class - UpdateUserRoleCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserRoleCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/update-user-role.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/update-user-role.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateUserRoleCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user-role.command-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateUserRoleCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { UpdateUserRoleCommand } from '../../command/update-user-role.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UpdateUserRoleEvent } from '../../event/update-user-role.event';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { Repository } from 'typeorm';\n\n@CommandHandler(UpdateUserRoleCommand)\nexport class UpdateUserRoleCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(command: UpdateUserRoleCommand): Promise {\n    try {\n      await this.userRepository.update(command.userId, { roles: command.roles });\n      await this.eventBus.publish(new UpdateUserRoleEvent(command));\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'user', handler: 'UpdateUserRoleCommandHandler', error: error }),\n      );\n      throw new Error(error.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserRoleEvent.html":{"url":"classes/UpdateUserRoleEvent.html","title":"class - UpdateUserRoleEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserRoleEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/update-user-role.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                updateUserRoleCommand\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(updateUserRoleCommand: UpdateUserRoleCommand)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/update-user-role.event.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        updateUserRoleCommand\n                                                  \n                                                        \n                                                                        UpdateUserRoleCommand\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'update-user-role'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user-role.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user-role.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updateUserRoleCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateUserRoleCommand\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user-role.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateUserRoleCommand } from '../command/update-user-role.command';\n\nexport class UpdateUserRoleEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'update-user-role';\n  constructor(public readonly updateUserRoleCommand: UpdateUserRoleCommand) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserRoleEventHandler.html":{"url":"classes/UpdateUserRoleEventHandler.html","title":"class - UpdateUserRoleEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserRoleEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/update-user-role.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/update-user-role.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: UpdateUserRoleEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/update-user-role.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateUserRoleEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { UpdateUserRoleEvent } from '../../event/update-user-role.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(UpdateUserRoleEvent)\nexport class UpdateUserRoleEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: UpdateUserRoleEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body:\n        'User with id: ' +\n        event.updateUserRoleCommand.userId +\n        ' updated role with ' +\n        event.updateUserRoleCommand.roles.join(', '),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/web/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteMe\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findWithCriteria\n                            \n                            \n                                    Async\n                                generateUserFromMail\n                            \n                            \n                                    Async\n                                getMe\n                            \n                            \n                                remove\n                            \n                            \n                                    Async\n                                restoreUser\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateMe\n                            \n                            \n                                    Async\n                                updatePassword\n                            \n                            \n                                    Async\n                                updateRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/admin/create')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMe(requestUser: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@Delete('/public/delete-me')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:233\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/admin/')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/admin/:id')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findWithCriteria\n                        \n                    \n                \n            \n            \n                \n                    \n                    findWithCriteria(getUserWithCriteriaDto: GetUserWithCriteriaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(200)@Post('/admin/criteria')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getUserWithCriteriaDto\n                                    \n                                                GetUserWithCriteriaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateUserFromMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUserFromMail(generateUserDto: GenerateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/admin/generate-user-from-mail')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    generateUserDto\n                                    \n                                                GenerateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMe(requestUser: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/public/get-me')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(requestUser: RequestUser, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@Delete('/admin/:id')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:217\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        restoreUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreUser(userId: UserIdDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@Post('/admin/restore-user')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                UserIdDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(userId: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/admin/:id')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMe(requestUser: RequestUser, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/public/update-me')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:180\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePassword(requestUser: RequestUser, updateUserCredentialDto: UpdateUserCredentialDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/public/update-password')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserCredentialDto\n                                    \n                                                UpdateUserCredentialDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRole(id: string, roles: ListRolesDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@Put('/admin/:id/role')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    roles\n                                    \n                                                ListRolesDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpException,\n  HttpStatus,\n  Param,\n  Post,\n  Put,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport { UserService } from '../user.service';\nimport { CreateUserDto } from '../domain/dto/create-user.dto';\nimport { CreateUserResponse } from '../domain/response/create-user.response';\nimport { UpdateUserDto } from '../domain/dto/update-user.dto';\nimport { RequestUser } from '../../auth/interface/request-user.interface';\nimport { ApiTags } from '@nestjs/swagger';\nimport { UserResponse } from '../domain/response/user.response';\nimport { RoleGuard } from '../../auth/guards/role.guard';\nimport { UserRoleEnum } from '../domain/enum/user-role.enum';\nimport { GetUserWithCriteriaDto } from '../domain/dto/get-user-with-criteria.dto';\nimport { UpdateUserCredentialDto } from '../domain/dto/update-user-credential.dto';\nimport { GenerateUserDto } from '../domain/dto/generate-user.dto';\nimport { ListRolesDto } from '../domain/dto/list-roles.dto';\nimport { UserIdDto } from '../domain/dto/user-id.dto';\n\n@Controller('user')\n@ApiTags('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post('/admin/create')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async createUser(@Body() createUserDto: CreateUserDto): Promise {\n    try {\n      return await this.userService.createUser(createUserDto);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Post('/admin/generate-user-from-mail')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async generateUserFromMail(@Body() generateUserDto: GenerateUserDto): Promise {\n    try {\n      return await this.userService.generateUserFromMail(generateUserDto);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @HttpCode(204)\n  @Post('/admin/restore-user')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async restoreUser(@Body() userId: UserIdDto): Promise {\n    try {\n      return await this.userService.restoreUser(userId.userId);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n  @Get('/admin/')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async findAll(): Promise {\n    try {\n      return await this.userService.findAll();\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Get('/admin/:id')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async findOne(@Param('id') id: string): Promise {\n    try {\n      return await this.userService.findOne(id);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @HttpCode(200)\n  @Post('/admin/criteria')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async findWithCriteria(\n    @Body() getUserWithCriteriaDto: GetUserWithCriteriaDto,\n  ): Promise {\n    try {\n      return await this.userService.findWithCriteria(getUserWithCriteriaDto);\n    } catch (error) {\n      return new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Get('/public/get-me')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async getMe(@Req() requestUser: RequestUser): Promise {\n    try {\n      const { user } = requestUser;\n      return await this.userService.findMe(user.id);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Put('/admin/:id')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async update(\n    @Param('id') userId: string,\n    @Body() updateUserDto: UpdateUserDto,\n  ): Promise {\n    try {\n      return await this.userService.update(userId, updateUserDto);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @HttpCode(204)\n  @Put('/admin/:id/role')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async updateRole(@Param('id') id: string, @Body() roles: ListRolesDto): Promise {\n    try {\n      return await this.userService.updateRoles(id, roles.roles);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Put('/public/update-me')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async updateMe(\n    @Req() requestUser: RequestUser,\n    @Body() updateUserDto: UpdateUserDto,\n  ): Promise {\n    try {\n      return await this.userService.update(requestUser.user.id, updateUserDto);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Put('/public/update-password')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async updatePassword(\n    @Req() requestUser: RequestUser,\n    @Body() updateUserCredentialDto: UpdateUserCredentialDto,\n  ): Promise {\n    try {\n      return await this.userService.updatePassword(requestUser.user.id, updateUserCredentialDto);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @HttpCode(204)\n  @Delete('/admin/:id')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  remove(@Req() requestUser: RequestUser, @Param('id') id: string): Promise {\n    try {\n      return this.userService.remove(id);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @HttpCode(204)\n  @Delete('/public/delete-me')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async deleteMe(@Req() requestUser: RequestUser): Promise {\n    try {\n      return await this.userService.deleteMe(requestUser.user.id);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserEntity.html":{"url":"entities/UserEntity.html","title":"entity - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addresses\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Public\n                                    Optional\n                                currentHashedRefreshToken\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                isEmailConfirmed\n                            \n                            \n                                    Public\n                                isRegisteredWithGoogle\n                            \n                            \n                                    Public\n                                    Optional\n                                jwtToken\n                            \n                            \n                                    Optional\n                                mail\n                            \n                            \n                                notifications\n                            \n                            \n                                password\n                            \n                            \n                                profiles\n                            \n                            \n                                    Public\n                                    Optional\n                                referralCode\n                            \n                            \n                                referralCodes\n                            \n                            \n                                roles\n                            \n                            \n                                subscriptions\n                            \n                            \n                                updatedAt\n                            \n                            \n                                usedReferralCodes\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addresses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, address => address.user, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        currentHashedRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, select: false})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEmailConfirmed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:56\n                        \n                    \n\n            \n                \n                    This is a flag to indicate if the user has confirmed their email address.\nThis is used to prevent users from logging in before they have confirmed their email address.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isRegisteredWithGoogle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:76\n                        \n                    \n\n            \n                \n                    This is a flag to indicate if the user has registered with google.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        jwtToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, notification => notification.user, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: false, nullable: true, select: false})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:48\n                        \n                    \n\n            \n                \n                    Password is nullable because user can connect with Google\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, profile => profile.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        referralCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        referralCodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReferralCodeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, referralCode => referralCode.owner)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, subscription => subscription.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usedReferralCodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReferralCodeEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, referralCode => referralCode.usedBy)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:40\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { Exclude } from 'class-transformer';\nimport { ProfileEntity } from '../../../entities-to-create/profile.entity';\nimport { UserRoleEnum } from '../enum/user-role.enum';\nimport { SubscriptionEntity } from '../../../entities-to-create/subscription.entity';\nimport { ReferralCodeEntity } from '../../../entities-to-create/referal-code.entity';\nimport { NotificationEntity } from '../../../entities-to-create/notification.entity';\nimport { AddressEntity } from '../../../entities-to-create/address.entity';\n\n@Entity({ name: 'user' })\nexport class UserEntity extends BaseEntity {\n  constructor(partial?: Partial) {\n    super();\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ unique: true, nullable: true })\n  mail?: string;\n\n  @Column()\n  @Column({ unique: true, nullable: true })\n  username?: string;\n\n  /**\n   * @description\n   * Password is nullable because user can connect with Google\n   */\n  @Column({ unique: false, nullable: true, select: false })\n  @Exclude()\n  password: string;\n\n  /**\n   * @description\n   * This is a flag to indicate if the user has confirmed their email address.\n   * This is used to prevent users from logging in before they have confirmed their email address.\n   */\n  @Column({ default: false })\n  isEmailConfirmed: boolean;\n\n  @Column({\n    nullable: true,\n    select: false,\n  })\n  @Exclude()\n  public currentHashedRefreshToken?: string;\n\n  @Exclude()\n  public jwtToken?: string;\n\n  @Column({ unique: true, nullable: true })\n  public referralCode?: string;\n\n  /**\n   * @description\n   * This is a flag to indicate if the user has registered with google.\n   */\n  @Column({ default: false })\n  public isRegisteredWithGoogle: boolean;\n\n  @Column('text', { array: true, default: [UserRoleEnum.PUBLIC] })\n  roles: UserRoleEnum[];\n\n  // _________________________________________________________\n  // Relations\n  // _________________________________________________________\n\n  @OneToMany(() => ProfileEntity, profile => profile.user)\n  profiles: ProfileEntity[];\n\n  @OneToMany(() => SubscriptionEntity, subscription => subscription.user)\n  subscriptions: SubscriptionEntity[];\n\n  @OneToMany(() => ReferralCodeEntity, referralCode => referralCode.owner)\n  referralCodes: ReferralCodeEntity[];\n\n  @OneToMany(() => ReferralCodeEntity, referralCode => referralCode.usedBy)\n  usedReferralCodes: ReferralCodeEntity;\n\n  @OneToMany(() => NotificationEntity, notification => notification.user, {\n    cascade: true,\n  })\n  notifications: NotificationEntity[];\n\n  @OneToMany(() => AddressEntity, address => address.user, {\n    cascade: true,\n  })\n  addresses: AddressEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserIdDto.html":{"url":"interfaces/UserIdDto.html","title":"interface - UserIdDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserIdDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/user-id.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserIdDto {\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserListResponse.html":{"url":"classes/UserListResponse.html","title":"class - UserListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/response/user-list.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                userList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(users?: UserResponse[])\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/response/user-list.response.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UserResponse[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserResponse[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-list.response.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserResponse } from './user.response';\n\nexport class UserListResponse {\n  public userList: UserResponse[];\n  constructor(users?: UserResponse[]) {\n    if (users) {\n      this.userList = users;\n    } else {\n      this.userList = [];\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginDto.html":{"url":"classes/UserLoginDto.html","title":"class - UserLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/user-login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                login\n                            \n                            \n                                    Public\n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(login: string, password: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/user-login.dto.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        login\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/user-login.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/user-login.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UserLoginDto {\n  constructor(login: string, password: string) {\n    this.login = login;\n    this.password = password;\n  }\n\n  @ApiProperty()\n  public readonly login: string;\n  @ApiProperty()\n  public readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginResponse.html":{"url":"classes/UserLoginResponse.html","title":"class - UserLoginResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/response/user-login.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                password\n                            \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                            \n                                    Public\n                                token\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/response/user-login.response.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserEntity } from '../entities/user.entity';\nimport { UserRoleEnum } from '../enum/user-role.enum';\n\nexport class UserLoginResponse {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  public readonly id: string;\n  public readonly username?: string;\n  public readonly email?: string;\n  public readonly createdAt: Date;\n  public readonly updatedAt: Date;\n  public token: string;\n  public readonly roles: UserRoleEnum[];\n  public password?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_imports\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nApiLogModule->UserModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nUserModule -->\n\nApiLogService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserEntity } from './domain/entities/user.entity';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserController } from './web/user.controller';\nimport { UserService } from './user.service';\nimport { CreateUserCommandHandler } from './cqrs/handler/command/create-user.command-handler';\nimport { GetUserByEmailQueryHandler } from './cqrs/handler/query/get-user-by-email.query-handler';\nimport { GetUserByUsernameQueryHandler } from './cqrs/handler/query/get-user-by-username.query-handler';\nimport { GetUserLoginQueryHandler } from './cqrs/handler/query/get-user-login.query-handler';\nimport { GetUserIfRefreshTokenMatchesQueryHandler } from './cqrs/handler/query/get-user-if-refresh-token-matches.query-handler';\nimport { GetUserQueryHandler } from './cqrs/handler/query/get-user.query-handler';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { SetCurrentRefreshTokenCommandHandler } from './cqrs/handler/command/set-current-refresh-token.command-handler';\nimport { UpdateUserCommandHandler } from './cqrs/handler/command/update-user.command-handler';\nimport { RemoveRefreshTokenCommandHandler } from './cqrs/handler/command/remove-refresh-token.command-handler';\nimport { CreateUserEventHandler } from './cqrs/handler/event/create-user.event-handler';\nimport { DeleteUserEventHandler } from './cqrs/handler/event/delete-user.event-handler';\nimport { RemoveRefreshTokenEventHandler } from './cqrs/handler/event/remove-refresh-token.event-handler';\nimport { SetCurrentRefreshTokenEventHandler } from './cqrs/handler/event/set-current-refresh-token.event-handler';\nimport { LoginOfUserEventHandler } from './cqrs/handler/event/login-of-user.event-handler';\nimport { UpdateUserEventHandler } from './cqrs/handler/event/update-user.event-handler';\nimport { SoftDeleteUserCommandHandler } from './cqrs/handler/command/soft-delete-user.command-handler';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\nimport { GetUserWithCriteriaQueryHandler } from './cqrs/handler/query/get-user-with-criteria.query-handler';\nimport { UpdateUserCredentialCommandHandler } from './cqrs/handler/command/update-user-credential.command-handler';\nimport { UpdateUserRoleCommandHandler } from './cqrs/handler/command/update-user-role.command-handler';\nimport { RestoreUserCommandHandler } from './cqrs/handler/command/restore-user.command-handler';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserEntity]),\n    CqrsModule,\n    ApiLogModule,\n    ClientsModule.register([{ name: 'API_LOG', transport: Transport.TCP, options: { port: 3001 } }]),\n  ],\n  controllers: [UserController],\n  providers: [\n    UserService,\n    // log\n    ApiLogService,\n    CreateLogCommandHandler,\n    // Command handlers\n    CreateUserCommandHandler,\n    RemoveRefreshTokenCommandHandler,\n    SetCurrentRefreshTokenCommandHandler,\n    UpdateUserCommandHandler,\n    SoftDeleteUserCommandHandler,\n    UpdateUserCredentialCommandHandler,\n    UpdateUserRoleCommandHandler,\n    RestoreUserCommandHandler,\n    // Query handlers\n    GetUserByUsernameQueryHandler,\n    GetUserByEmailQueryHandler,\n    GetUserLoginQueryHandler,\n    GetUserIfRefreshTokenMatchesQueryHandler,\n    GetUserQueryHandler,\n    GetUserWithCriteriaQueryHandler,\n    // Event handlers\n    CreateUserEventHandler,\n    DeleteUserEventHandler,\n    RemoveRefreshTokenEventHandler,\n    SetCurrentRefreshTokenEventHandler,\n    LoginOfUserEventHandler,\n    UpdateUserEventHandler,\n  ],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotFoundException.html":{"url":"classes/UserNotFoundException.html","title":"class - UserNotFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/user-not-found.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/user-not-found.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class UserNotFoundException extends HttpException {\n  constructor() {\n    super('User not found', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResponse.html":{"url":"classes/UserResponse.html","title":"class - UserResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/response/user.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                mail\n                            \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/response/user.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRoleEnum } from '../enum/user-role.enum';\n\nexport class UserResponse {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  public readonly id: string;\n  public readonly roles: UserRoleEnum[];\n  public readonly username?: string;\n  public readonly mail?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteMe\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findMe\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findWithCriteria\n                            \n                            \n                                    Private\n                                generatePassword\n                            \n                            \n                                    Async\n                                generateUserFromMail\n                            \n                            \n                                    Async\n                                getMe\n                            \n                            \n                                    Async\n                                getUserIfRefreshTokenMatches\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                removeRefreshToken\n                            \n                            \n                                    Async\n                                restoreUser\n                            \n                            \n                                    Async\n                                setCurrentRefreshToken\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updatePassword\n                            \n                            \n                                    Async\n                                updateRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/user.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMe(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMe(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findWithCriteria\n                        \n                    \n                \n            \n            \n                \n                    \n                    findWithCriteria(getUserWithCriteriaDto: GetUserWithCriteriaDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getUserWithCriteriaDto\n                                    \n                                                GetUserWithCriteriaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    generatePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateUserFromMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUserFromMail(generateUserDto: GenerateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    generateUserDto\n                                    \n                                                GenerateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMe(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserIfRefreshTokenMatches\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserIfRefreshTokenMatches(refreshToken: string, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeRefreshToken(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        restoreUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreUser(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setCurrentRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCurrentRefreshToken(token: string, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(userId: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePassword(userId: string, updateUserCredentialDto: UpdateUserCredentialDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserCredentialDto\n                                    \n                                                UpdateUserCredentialDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateRoles\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRoles(userId: string, roles: UserRoleEnum[])\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    roles\n                                    \n                                                UserRoleEnum[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { CreateUserCommand } from './cqrs/command/create-user.command';\nimport { CreateUserDto } from './domain/dto/create-user.dto';\nimport { CreateUserResponse } from './domain/response/create-user.response';\nimport { UserEntity } from './domain/entities/user.entity';\nimport * as process from 'process';\nimport { RemoveRefreshTokenCommand } from './cqrs/command/remove-refresh-token.command';\nimport { SetCurrentRefreshTokenCommand } from './cqrs/command/set-current-refresh-token.command';\nimport { GetUserIfRefreshTokenMatchesQuery } from './cqrs/query/get-user-if-refresh-token-matches.query';\nimport { UpdateUserDto } from './domain/dto/update-user.dto';\nimport { GetUserQuery } from './cqrs/query/get-user.query';\nimport { UpdateUserCommand } from './cqrs/command/update-user.command';\nimport { UserResponse } from './domain/response/user.response';\nimport { SoftDeleteUserCommand } from './cqrs/command/soft-delete-user.command';\nimport { GetUserWithCriteriaQuery } from './cqrs/query/get-user-with-criteria.query';\nimport { GetUserWithCriteriaDto } from './domain/dto/get-user-with-criteria.dto';\nimport { RestoreUserCommand } from './cqrs/command/restore-user.command';\nimport { UserRoleEnum } from './domain/enum/user-role.enum';\nimport { UpdateUserRoleCommand } from './cqrs/command/update-user-role.command';\nimport { UpdateUserCredentialCommand } from './cqrs/command/update-user-credential.command';\nimport { UpdateUserCredentialDto } from './domain/dto/update-user-credential.dto';\nimport { GenerateUserDto } from './domain/dto/generate-user.dto';\nimport { DeleteMailCommand } from '../api-landing-page/cqrs/command/delete-mail.command';\nimport { DuplicateMailException } from '../../util/exception/custom-http-exception/duplicate-mail.exception';\nimport { MailRequiredException } from '../../util/exception/custom-http-exception/mail-required.exception';\nimport { UserNotFoundException } from '../../util/exception/custom-http-exception/user-not-found.exception';\nimport { DuplicateUsernameException } from '../../util/exception/custom-http-exception/duplicate-username.exception';\nimport { SamePasswordException } from '../../util/exception/custom-http-exception/same-password.exception';\nimport { InvalidPasswordException } from '../../util/exception/custom-http-exception/invalid-password.exception';\n\n@Injectable()\nexport class UserService {\n  constructor(private readonly commandBus: CommandBus, private readonly queryBus: QueryBus) {}\n\n  async createUser(createUserDto: CreateUserDto): Promise {\n    return await this.commandBus.execute(new CreateUserCommand(createUserDto));\n  }\n\n  async getUserIfRefreshTokenMatches(refreshToken: string, userId: string) {\n    return await this.queryBus.execute(new GetUserIfRefreshTokenMatchesQuery(refreshToken, userId));\n  }\n\n  async removeRefreshToken(userId: string): Promise {\n    return await this.commandBus.execute(new RemoveRefreshTokenCommand(userId));\n  }\n\n  async setCurrentRefreshToken(token: string, userId: string): Promise {\n    return await this.commandBus.execute(new SetCurrentRefreshTokenCommand(token, userId));\n  }\n\n  async findAll(): Promise {\n    return await this.queryBus.execute(new GetUserQuery());\n  }\n\n  async findOne(id: string): Promise {\n    try {\n      return await this.queryBus.execute(new GetUserQuery(id));\n    } catch (error) {\n      throw new UserNotFoundException();\n    }\n  }\n\n  async update(userId: string, updateUserDto: UpdateUserDto): Promise {\n    try {\n      return await this.commandBus.execute(new UpdateUserCommand(userId, updateUserDto));\n    } catch (error) {\n      if (error.message === 'User not found') throw new UserNotFoundException();\n      else if (error.message === 'Mail already exists' || error instanceof DuplicateMailException)\n        throw new DuplicateMailException();\n      else if (error instanceof DuplicateUsernameException || error.message === 'Username already exists') {\n        throw new DuplicateUsernameException();\n      } else throw Error('not handled error');\n    }\n  }\n\n  async remove(id: string): Promise {\n    try {\n      return await this.commandBus.execute(new SoftDeleteUserCommand(id));\n    } catch (error) {\n      if (error.message === 'User not found') throw new UserNotFoundException();\n      else throw error;\n    }\n  }\n\n  async generateUserFromMail(generateUserDto: GenerateUserDto): Promise {\n    try {\n      if (!generateUserDto) throw new Error('Mail is required');\n      if ((await this.queryBus.execute(new GetUserWithCriteriaQuery({ mail: generateUserDto.mail }))).length > 0)\n        throw new Error('Mail already exists');\n      const user = await this.commandBus.execute(\n        new CreateUserCommand(\n          new CreateUserDto({\n            mail: generateUserDto.mail,\n            password: this.generatePassword(),\n            roles: generateUserDto.roles ? generateUserDto.roles : [UserRoleEnum.PUBLIC],\n          }),\n        ),\n      );\n      try {\n        await this.commandBus.execute(new DeleteMailCommand({ mail: generateUserDto.mail }));\n      } catch (error) {}\n      return user;\n    } catch (error) {\n      if (error.message === 'Mail is required') throw new MailRequiredException();\n      else if (error.message === 'Mail already exists') throw new DuplicateMailException();\n      else throw error;\n    }\n  }\n\n  async restoreUser(userId: string): Promise {\n    try {\n      return await this.commandBus.execute(new RestoreUserCommand({ id: userId }));\n    } catch (error) {\n      if (error.message === 'User not found') throw new UserNotFoundException();\n      else throw error;\n    }\n  }\n\n  async findWithCriteria(getUserWithCriteriaDto: GetUserWithCriteriaDto): Promise {\n    return await this.queryBus.execute(new GetUserWithCriteriaQuery(getUserWithCriteriaDto));\n  }\n\n  async getMe(userId: string): Promise {\n    return await this.queryBus.execute(new GetUserQuery(userId));\n  }\n\n  async updateRoles(userId: string, roles: UserRoleEnum[]): Promise {\n    try {\n      return await this.commandBus.execute(new UpdateUserRoleCommand({ userId: userId, roles: roles }));\n    } catch (error) {\n      throw new UserNotFoundException();\n    }\n  }\n\n  async updatePassword(userId: string, updateUserCredentialDto: UpdateUserCredentialDto): Promise {\n    try {\n      return await this.commandBus.execute(\n        new UpdateUserCredentialCommand({ userId: userId, updateUserCredentialDto: updateUserCredentialDto }),\n      );\n    } catch (error) {\n      if (error.message === 'New password is the same as old password') throw new SamePasswordException();\n      else if (error.message === 'User not found') throw new UserNotFoundException();\n      else if (error.message === 'Invalid password') throw new InvalidPasswordException();\n      else if (error.message === 'Invalid old password') throw new InvalidPasswordException();\n      else throw error;\n    }\n  }\n\n  async deleteMe(userId: string): Promise {\n    if (!!(await this.queryBus.execute(new GetUserQuery(userId)))) throw new Error('User not found');\n    return await this.commandBus.execute(new SoftDeleteUserCommand(userId));\n  }\n\n  async findMe(userId: string): Promise {\n    if (!(await this.queryBus.execute(new GetUserQuery(userId)))) throw new Error('User not found');\n    return await this.queryBus.execute(new GetUserQuery(userId));\n  }\n\n  private generatePassword(): string {\n    return 'Pt' + Math.random().toString(10).split('.')[1] + '!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n0.0.6 - 2023-03-18\nFeatures\n\napi-mail module\napi-landing-page module\nrefactor api-log\nfix things\n\n0.0.5 - 2023-03-15\nFeatures\n\nadd auth verification\nadd tcp validate-login\nadd e2e auth test\n\n0.0.4 - 2023-03-10\nFeatures\n\nadd referral code entity\nadd notification entity\nupdate README.md\n\n0.0.3 - 2023-03-10\nFeatures\n\nadd call to api-log\n\n0.0.2 - 2023-03-08\nFeatures\n\ncreate of all entities\n\n0.0.1 - 2023-03-04\nFeatures\n\nall packages: init nestJs project\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nNO CONTRIBUTING\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/api/api-landing-page/api-landing-page.controller.ts\n            \n            controller\n            ApiLandingPageController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/api-landing-page/api-landing-page.service.ts\n            \n            injectable\n            ApiLandingPageService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/api-landing-page/cqrs/command/delete-mail.command.ts\n            \n            class\n            DeleteMailCommand\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/api-landing-page/cqrs/event/delete-mail.event.ts\n            \n            class\n            DeleteMailEvent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/api-landing-page/cqrs/handler/command/delete-mail.command-handler.ts\n            \n            class\n            DeleteMailCommandHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/api-landing-page/cqrs/handler/event/delete-mail.event-handler.ts\n            \n            class\n            DeleteMailEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/api-landing-page/cqrs/handler/query/get-all-mail.query-handler.ts\n            \n            class\n            GetAllMailQueryHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/api-landing-page/cqrs/query/get-all-mail.query.ts\n            \n            class\n            GetAllMailQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/api-landing-page/domain/dto/mail-landing-page.dto.ts\n            \n            class\n            MailLandingPageDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/api-landing-page/domain/response/mail.response.ts\n            \n            class\n            MailResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/api-log/api-log.service.ts\n            \n            injectable\n            ApiLogService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/api-log/cqrs/command/create-log.command.ts\n            \n            class\n            CreateLogCommand\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/api/api-log/cqrs/handler/command/create-log.command-handler.ts\n            \n            class\n            CreateLogCommandHandler\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/api-log/domain/dto/create-log.dto.ts\n            \n            class\n            CreateLogDto\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/api/api-log/domain/dto/create-method-log.dto.ts\n            \n            class\n            CreateMethodLogDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/api-log/domain/enum/logging-type.enum.ts\n            \n            class\n            LoggingTypeEnum\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/api-mail/api-mail.controller.ts\n            \n            controller\n            ApiMailController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/api-mail/api-mail.service.ts\n            \n            injectable\n            ApiMailService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/api-mail/cqrs/command/send-mail.command.ts\n            \n            class\n            SendMailCommand\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/api-mail/cqrs/event/send-mail.event.ts\n            \n            class\n            SendMailEvent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/api-mail/cqrs/handler/command/send-mail.command.ts\n            \n            class\n            SendMailCommandHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/api-mail/cqrs/handler/event/send-mail.event-handler.ts\n            \n            class\n            SendMailEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/api-mail/domain/dto/mail.dto.ts\n            \n            class\n            MailDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/api/auth/cqrs/command/register.command.ts\n            \n            class\n            RegisterCommand\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/auth/cqrs/event-handler/register.event-handler.ts\n            \n            class\n            RegisterEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/auth/cqrs/event/register.event.ts\n            \n            class\n            RegisterEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/auth/cqrs/handler/command/register.handler.ts\n            \n            class\n            RegisterHandler\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/api/auth/dto/sign-in.dto.ts\n            \n            class\n            SignInDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/auth/dto/sign-up.dto.ts\n            \n            class\n            SignUpDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/auth/guards/auth.guard.ts\n            \n            injectable\n            LocalAuthenticationGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthenticationGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/auth/guards/jwt-refresh-token.guard.ts\n            \n            injectable\n            JwtRefreshGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/auth/guards/role.guard.ts\n            \n            variable\n            RoleGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/auth/interface/request-user.interface.ts\n            \n            interface\n            RequestUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/auth/interface/token-payload.interface.ts\n            \n            interface\n            TokenPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/auth/strategy/jwt-refresh-token.strategy.ts\n            \n            injectable\n            JwtRefreshTokenStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/auth/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/auth/strategy/passport-local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/address.entity.ts\n            \n            entity\n            AddressEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/card.entity.ts\n            \n            entity\n            CardEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/company-employee.entity.ts\n            \n            entity\n            CompanyEmployeeEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/company.entity.ts\n            \n            entity\n            CompanyEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/connected-card.entity.ts\n            \n            entity\n            ConnectedCardEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/conversation.entity.ts\n            \n            entity\n            ConversationEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/discount-code.entity.ts\n            \n            entity\n            DiscountCodeEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/enum/role-group-membership.enum.ts\n            \n            class\n            RoleGroupMembershipEnum\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/group-membership.entity.ts\n            \n            entity\n            GroupMembershipEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/group.entity.ts\n            \n            entity\n            GroupEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/invoices.entity.ts\n            \n            entity\n            InvoicesEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/joined-conversation.entity.ts\n            \n            entity\n            JoinedConversation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/media.entity.ts\n            \n            entity\n            MediaEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/message.entity.ts\n            \n            entity\n            MessageEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/notification.entity.ts\n            \n            entity\n            NotificationEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/occupation.entity.ts\n            \n            entity\n            OccupationEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/plan.entity.ts\n            \n            entity\n            PlanEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/profile.entity.ts\n            \n            entity\n            ProfileEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/referal-code.entity.ts\n            \n            entity\n            ReferralCodeEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/social-network.entity.ts\n            \n            entity\n            SocialNetworkEntity\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/strip-event.entity.ts\n            \n            entity\n            StripEventEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/subscription.entity.ts\n            \n            entity\n            SubscriptionEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/health-check/cqrs/handler/query/health-check.query-handler.ts\n            \n            class\n            HealthCheckQueryHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/health-check/cqrs/query/health-check.query.ts\n            \n            class\n            HealthCheckQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/health-check/custom-health-check.service.ts\n            \n            injectable\n            CustomHealthCheckService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/health-check/domain/response/health-check.response.ts\n            \n            class\n            HealthCheckResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/health-check/health-check.controller.ts\n            \n            controller\n            HealthCheckController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/command/create-user.command.ts\n            \n            class\n            CreateUserCommand\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/command/delete-user.command.ts\n            \n            class\n            DeleteUserCommand\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/command/remove-refresh-token.command.ts\n            \n            class\n            RemoveRefreshTokenCommand\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/command/restore-user.command.ts\n            \n            class\n            RestoreUserCommand\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/command/set-current-refresh-token.command.ts\n            \n            class\n            SetCurrentRefreshTokenCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/command/soft-delete-user.command.ts\n            \n            class\n            SoftDeleteUserCommand\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/command/update-user-credential.command.ts\n            \n            class\n            UpdateUserCredentialCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/command/update-user-role.command.ts\n            \n            class\n            UpdateUserRoleCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/command/update-user.command.ts\n            \n            class\n            UpdateUserCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/event/create-user.event.ts\n            \n            class\n            CreateUserEvent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/event/delete-user.event.ts\n            \n            class\n            DeleteUserEvent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/event/login-of-user.event.ts\n            \n            class\n            LoginOfUserEvent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/event/remove-refresh-token.event.ts\n            \n            class\n            RemoveRefreshTokenEvent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/event/restore-user.event.ts\n            \n            class\n            RestoreUserEvent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/event/set-current-refresh-token.event.ts\n            \n            class\n            SetCurrentRefreshTokenEvent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/event/soft-delete-user.event.ts\n            \n            class\n            SoftDeleteUserEvent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/event/update-user-credential.event.ts\n            \n            class\n            UpdateUserCredentialEvent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/event/update-user-role.event.ts\n            \n            class\n            UpdateUserRoleEvent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/event/update-user.event.ts\n            \n            class\n            UpdateUserEvent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/command/create-user.command-handler.ts\n            \n            class\n            CreateUserCommandHandler\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/command/delete-user.command-handler.ts\n            \n            class\n            DeleteUserCommandHandler\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/command/remove-refresh-token.command-handler.ts\n            \n            class\n            RemoveRefreshTokenCommandHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/command/restore-user.command-handler.ts\n            \n            class\n            RestoreUserCommandHandler\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/command/set-current-refresh-token.command-handler.ts\n            \n            class\n            SetCurrentRefreshTokenCommandHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/command/soft-delete-user.command-handler.ts\n            \n            class\n            SoftDeleteUserCommandHandler\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/command/update-user-credential.command-handler.ts\n            \n            class\n            UpdateUserCredentialCommandHandler\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/command/update-user-role.command-handler.ts\n            \n            class\n            UpdateUserRoleCommandHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/command/update-user.command-handler.ts\n            \n            class\n            UpdateUserCommandHandler\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/event/create-user.event-handler.ts\n            \n            class\n            CreateUserEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/event/delete-user.event-handler.ts\n            \n            class\n            DeleteUserEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/event/login-of-user.event-handler.ts\n            \n            class\n            LoginOfUserEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/event/remove-refresh-token.event-handler.ts\n            \n            class\n            RemoveRefreshTokenEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/event/restore-user.event-handler.ts\n            \n            class\n            RestoreUserEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/event/set-current-refresh-token.event-handler.ts\n            \n            class\n            SetCurrentRefreshTokenEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/event/soft-delete-user.event-handler.ts\n            \n            class\n            SoftDeleteUserEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/event/update-user-credential.event-handler.ts\n            \n            class\n            UpdateUserCredentialEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/event/update-user-role.event-handler.ts\n            \n            class\n            UpdateUserRoleEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/event/update-user.event-handler.ts\n            \n            class\n            UpdateUserEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/query/get-user-by-email.query-handler.ts\n            \n            class\n            GetUserByEmailQueryHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/query/get-user-by-username.query-handler.ts\n            \n            class\n            GetUserByUsernameQueryHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/query/get-user-if-refresh-token-matches.query-handler.ts\n            \n            class\n            GetUserIfRefreshTokenMatchesQueryHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/query/get-user-login.query-handler.ts\n            \n            class\n            GetUserLoginQueryHandler\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/query/get-user-with-criteria.query-handler.ts\n            \n            class\n            GetUserWithCriteriaQueryHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/query/get-user.query-handler.ts\n            \n            class\n            GetUserQueryHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/query/get-user-by-email.query.ts\n            \n            class\n            GetUserByEmailQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/query/get-user-by-username.query.ts\n            \n            class\n            GetUserByUsernameQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts\n            \n            class\n            GetUserIfRefreshTokenMatchesQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/query/get-user-login.query.ts\n            \n            class\n            GetUserLoginQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/query/get-user-with-criteria.query.ts\n            \n            class\n            GetUserWithCriteriaQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/query/get-user.query.ts\n            \n            class\n            GetUserQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/domain/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/user/domain/dto/generate-user.dto.ts\n            \n            class\n            GenerateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/domain/dto/get-user-with-criteria.dto.ts\n            \n            class\n            GetUserWithCriteriaDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/api/user/domain/dto/list-roles.dto.ts\n            \n            class\n            ListRolesDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/domain/dto/update-user-credential.dto.ts\n            \n            class\n            UpdateUserCredentialDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/user/domain/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/domain/dto/user-id.dto.ts\n            \n            interface\n            UserIdDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/user/domain/dto/user-login.dto.ts\n            \n            class\n            UserLoginDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/domain/entities/user.entity.ts\n            \n            entity\n            UserEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/user/domain/response/create-user.response.ts\n            \n            class\n            CreateUserResponse\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/api/user/domain/response/user-list.response.ts\n            \n            class\n            UserListResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/domain/response/user-login.response.ts\n            \n            class\n            UserLoginResponse\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/api/user/domain/response/user.response.ts\n            \n            class\n            UserResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/api/user/web/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middleware/error-logging.middleware.ts\n            \n            injectable\n            ErrorLoggingMiddleware\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/middleware/request-logging.middleware.ts\n            \n            injectable\n            RequestLoggingMiddleware\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/middleware/response-logging.middleware.ts\n            \n            injectable\n            ResponseLoggingMiddleware\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/util/config/database.configuration.ts\n            \n            injectable\n            DatabaseConfiguration\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/config/winston-logger.config.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/duplicate-mail.exception.ts\n            \n            class\n            DuplicateMailException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/duplicate-username.exception.ts\n            \n            class\n            DuplicateUsernameException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/invalid-id.exception.ts\n            \n            class\n            InvalidIdException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/invalid-mail.exception.ts\n            \n            class\n            InvalidMailException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/invalid-parameter-entity.exception.ts\n            \n            class\n            InvalidParameterEntityException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/invalid-password.exception.ts\n            \n            class\n            InvalidPasswordException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/invalid-username.exception.ts\n            \n            class\n            InvalidUsernameException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/mail-required.exception.ts\n            \n            class\n            MailRequiredException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/no-user-trace.exception.ts\n            \n            class\n            NoUserTraceException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/same-password.exception.ts\n            \n            class\n            SamePasswordException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/unauthorized-request.exception.ts\n            \n            class\n            UnauthorizedRequestException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/user-not-found.exception.ts\n            \n            class\n            UserNotFoundException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/error-handler/error-custom.event-handler.ts\n            \n            class\n            ErrorCustomEventHandler\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/util/exception/error-handler/error-custom.event.ts\n            \n            class\n            ErrorCustomEvent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/util/filter/error-exception.filter.ts\n            \n            class\n            ErrorExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/global/extend-entity/timestamp.extend-entity.ts\n            \n            class\n            TimestampEntityExtendEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/util/mocks/config.service.mock.ts\n            \n            variable\n            mockedConfigService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/mocks/jwt.service.mock.ts\n            \n            variable\n            mockedJwtService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/pipe/is-test-environment.pipe.ts\n            \n            class\n            IsTestEnvironmentPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                test/test-environment/app-test-e2e.controller.ts\n            \n            controller\n            AppTestE2eController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                test/test-environment/app-test-e2e.service.ts\n            \n            injectable\n            AppTestE2eService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/cqrs : ^9.0.3\n        \n            @nestjs/jwt : ^10.0.2\n        \n            @nestjs/microservices : ^9.3.9\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.2.1\n        \n            @nestjs/terminus : ^9.2.1\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            @types/passport-jwt : ^3.0.8\n        \n            @types/passport-local : ^1.0.35\n        \n            @types/useragent : ^2.3.1\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.9.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.6.2\n        \n            typeorm : ^0.3.12\n        \n            useragent : ^2.3.0\n        \n            winston : ^3.8.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiTypeEnum   (src/.../api-type.enum.ts)\n                        \n                        \n                            ErrorEnum   (src/.../ErrorEnum.ts)\n                        \n                        \n                            NotificationTypeEnum   (src/.../notification-type.enum.ts)\n                        \n                        \n                            PostgresErrorCode   (src/.../postgres-error-code.enum.ts)\n                        \n                        \n                            RoleCompanyEmployeeEnum   (src/.../role-company-employee.enum.ts)\n                        \n                        \n                            StatusInvoiceEnum   (src/.../status-invoice.enum.ts)\n                        \n                        \n                            StatusLogEnum   (src/.../status-log.enum.ts)\n                        \n                        \n                            StatusSubscriptionEnum   (src/.../status-subscription.enum.ts)\n                        \n                        \n                            TransferableStatusCardEnum   (src/.../transferable-status-card.enum.ts)\n                        \n                        \n                            TypeOfCardEnum   (src/.../type-of-card.enum.ts)\n                        \n                        \n                            UserRoleEnum   (src/.../user-role.enum.ts)\n                        \n                        \n                            VerboseLogEnum   (src/.../verbose-log.enum.ts)\n                        \n                        \n                            WhoCanCommunicateWithEnum   (src/.../who-can-communicate-with.enum.ts)\n                        \n                        \n                            WhoCanSeeCardInformationEnum   (src/.../who-can-see-card-information.enum.ts)\n                        \n                        \n                            WhoCanShareCardEnum   (src/.../who-can-share-card.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/api-log/domain/enum/api-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ApiTypeEnum\n                    \n                \n                        \n                            \n                                 WALLET_SHARE_API\n                            \n                        \n                        \n                            \n                                Value : wallet_share_api\n                            \n                        \n                        \n                            \n                                 MAIL_API\n                            \n                        \n                        \n                            \n                                Value : mail_api\n                            \n                        \n            \n        \n\n    src/util/exception/ErrorEnum.ts\n    \n        \n            \n                \n                    \n                        \n                        ErrorEnum\n                    \n                \n                        \n                            \n                                 DUPLICATE_USERNAME\n                            \n                        \n                        \n                            \n                                Value : Username already exists\n                            \n                        \n                        \n                            \n                                 DUPLICATE_EMAIL\n                            \n                        \n                        \n                            \n                                Value : Email already exists\n                            \n                        \n                        \n                            \n                                 INVALID_PASSWORD\n                            \n                        \n                        \n                            \n                                Value : Invalid password\n                            \n                        \n                        \n                            \n                                 INVALID_PARAMETERS\n                            \n                        \n                        \n                            \n                                Value : Invalid parameters\n                            \n                        \n                        \n                            \n                                 NO_USER_TRACE\n                            \n                        \n                        \n                            \n                                Value : UserSenderId not found\n                            \n                        \n                        \n                            \n                                 USER_NOT_FOUND\n                            \n                        \n                        \n                            \n                                Value : User not found\n                            \n                        \n                        \n                            \n                                 DUPLICATE_CATEGORY_NAME\n                            \n                        \n                        \n                            \n                                Value : Category name already exists\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/notification-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        NotificationTypeEnum\n                    \n                \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : INFO\n                            \n                        \n                        \n                            \n                                 WARNING\n                            \n                        \n                        \n                            \n                                Value : WARNING\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : ERROR\n                            \n                        \n                        \n                            \n                                 NEW_MESSAGE\n                            \n                        \n                        \n                            \n                                Value : NEW_MESSAGE\n                            \n                        \n                        \n                            \n                                 JOIN_NEW_GROUP\n                            \n                        \n                        \n                            \n                                Value : JOIN_NEW_GROUP\n                            \n                        \n                        \n                            \n                                 NEW_GROUP_MESSAGE\n                            \n                        \n                        \n                            \n                                Value : NEW_GROUP_MESSAGE\n                            \n                        \n                        \n                            \n                                 NEW_CALL\n                            \n                        \n                        \n                            \n                                Value : NEW_CALL\n                            \n                        \n            \n        \n\n    src/api/auth/database/postgres-error-code.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PostgresErrorCode\n                    \n                \n                        \n                            \n                                 UniqueViolation\n                            \n                        \n                        \n                            \n                                Value : 23505\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/role-company-employee.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        RoleCompanyEmployeeEnum\n                    \n                \n                        \n                            \n                                 OWNER\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                 EMPLOYEE\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/status-invoice.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusInvoiceEnum\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 VALIDATED\n                            \n                        \n                        \n                            \n                                Value : VALIDATED\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n                        \n                            \n                                Value : CANCELED\n                            \n                        \n                        \n                            \n                                 EXPIRED\n                            \n                        \n                        \n                            \n                                Value : EXPIRED\n                            \n                        \n                        \n                            \n                                 REFUNDED\n                            \n                        \n                        \n                            \n                                Value : REFUNDED\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n                        \n                            \n                                Value : FAILED\n                            \n                        \n                        \n                            \n                                 REJECTED\n                            \n                        \n                        \n                            \n                                Value : REJECTED\n                            \n                        \n            \n        \n\n    src/api/api-log/domain/enum/status-log.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusLogEnum\n                    \n                \n                        \n                            \n                                 UNKNOWN\n                            \n                        \n                        \n                            \n                                Value : UNKNOWN\n                            \n                        \n                        \n                            \n                                 ANONYMOUS\n                            \n                        \n                        \n                            \n                                Value : ANONYMOUS\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/status-subscription.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusSubscriptionEnum\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : ACTIVE\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                Value : INACTIVE\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n                        \n                            \n                                Value : CANCELED\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/transferable-status-card.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TransferableStatusCardEnum\n                    \n                \n                        \n                            \n                                 IS_TRANSFERABLE\n                            \n                        \n                        \n                            \n                                Value : IS_TRANSFERABLE\n                            \n                        \n                        \n                            \n                                 IS_NOT_TRANSFERABLE\n                            \n                        \n                        \n                            \n                                Value : IS_NOT_TRANSFERABLE\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/type-of-card.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TypeOfCardEnum\n                    \n                \n                        \n                            \n                                 SOCIAL_NETWORK\n                            \n                        \n                        \n                            \n                                Value : SOCIAL_NETWORK\n                            \n                        \n                        \n                            \n                                 WEBSITE\n                            \n                        \n                        \n                            \n                                Value : WEBSITE\n                            \n                        \n                        \n                            \n                                 WALLET_SHARE\n                            \n                        \n                        \n                            \n                                Value : WALLET_SHARE\n                            \n                        \n                        \n                            \n                                 V_CARD\n                            \n                        \n                        \n                            \n                                Value : V_CARD\n                            \n                        \n            \n        \n\n    src/api/user/domain/enum/user-role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRoleEnum\n                    \n                \n                        \n                            \n                                 PUBLIC\n                            \n                        \n                        \n                            \n                                Value : PUBLIC\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n                        \n                            \n                                 SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                Value : SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                 COMPANY_ACCOUNT\n                            \n                        \n                        \n                            \n                                Value : COMPANY_ACCOUNT\n                            \n                        \n            \n        \n\n    src/api/api-log/domain/enum/verbose-log.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        VerboseLogEnum\n                    \n                \n                        \n                            \n                                 CLASSIC\n                            \n                        \n                        \n                            \n                                Value : CLASSIC\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                Value : DEBUG\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                Value : NONE\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/who-can-communicate-with.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        WhoCanCommunicateWithEnum\n                    \n                \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                Value : ALL\n                            \n                        \n                        \n                            \n                                 ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                Value : ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                 NOBODY\n                            \n                        \n                        \n                            \n                                Value : NOBODY\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/who-can-see-card-information.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        WhoCanSeeCardInformationEnum\n                    \n                \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                Value : ALL\n                            \n                        \n                        \n                            \n                                 ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                Value : ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                 ONLY_ME\n                            \n                        \n                        \n                            \n                                Value : ONLY_ME\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/who-can-share-card.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        WhoCanShareCardEnum\n                    \n                \n                        \n                            \n                                 DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                Value : DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                 NOT_DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                Value : NOT_DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                 ONlY_BY_COMPANY_MEMBERS\n                            \n                        \n                        \n                            \n                                Value : ONlY_BY_COMPANY_MEMBERS\n                            \n                        \n                        \n                            \n                                 ONLY_BY_COMPANY_ADMIN\n                            \n                        \n                        \n                            \n                                Value : ONLY_BY_COMPANY_ADMIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nApi Wallet Share\n\n\nContributors\n\nBRIAND Thibaud\nARNAUD David-henrie\nANGOSTON Lucas\n\nDescription\nThis project is a REST API for the organisation WalletShareOrg.\nDependencies libraries\n\nNodeJS\nNPM\nPostgreSQL\nDocker\nDocker Compose\nNodemon\nJest\nSupertest\nESLint\nPrettier\n\nInstallation\nnpm installRun\nnpm run startTest\nnpm run testAPI Documentation\nnpm run documentation:serveApplication Dependencies\n\n\nAPI Routes V_0.0.4\n\n\nDatabase Schema V_0.0.4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApiLandingPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ApiLogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ApiMailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppTestE2eModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EntitiesToMoveModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthCheckModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiLandingPageModule\n\n\n\ncluster_ApiLandingPageModule_imports\n\n\n\ncluster_ApiLandingPageModule_providers\n\n\n\ncluster_ApiMailModule\n\n\n\ncluster_ApiMailModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppTestE2eModule\n\n\n\ncluster_AppTestE2eModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_HealthCheckModule\n\n\n\ncluster_HealthCheckModule_providers\n\n\n\n\nApiLogModule\n\nApiLogModule\n\nApiLogModule -->\n\nApiLogModule->ApiLogModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nApiLogModule->UserModule\n\n\n\n\n\nApiLandingPageModule\n\nApiLandingPageModule\n\nApiLandingPageModule -->\n\nApiLogModule->ApiLandingPageModule\n\n\n\n\n\nApiMailModule\n\nApiMailModule\n\nApiMailModule -->\n\nApiLogModule->ApiMailModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nApiLogModule->AuthModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiLogModule->AppModule\n\n\n\nApiLandingPageModule -->\n\nUserModule->ApiLandingPageModule\n\n\n\nApiMailModule -->\n\nUserModule->ApiMailModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\nAppModule -->\n\nApiLandingPageModule->AppModule\n\n\n\n\n\nApiLandingPageService\n\nApiLandingPageService\n\nApiLandingPageModule -->\n\nApiLandingPageService->ApiLandingPageModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nApiLogModule -->\n\nApiLogService->ApiLogModule\n\n\n\nUserModule -->\n\nApiLogService->UserModule\n\n\n\nApiLandingPageModule -->\n\nApiLogService->ApiLandingPageModule\n\n\n\nApiMailModule -->\n\nApiLogService->ApiMailModule\n\n\n\nAuthModule -->\n\nApiLogService->AuthModule\n\n\n\nAppModule -->\n\nApiLogService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\nApiLandingPageModule -->\n\nUserService->ApiLandingPageModule\n\n\n\nApiMailModule -->\n\nUserService->ApiMailModule\n\n\n\nAuthModule -->\n\nUserService->AuthModule\n\n\n\nAppModule -->\n\nApiMailModule->AppModule\n\n\n\n\n\nApiMailService\n\nApiMailService\n\nApiMailModule -->\n\nApiMailService->ApiMailModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nEntitiesToMoveModule\n\nEntitiesToMoveModule\n\nAppModule -->\n\nEntitiesToMoveModule->AppModule\n\n\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nAppModule -->\n\nHealthCheckModule->AppModule\n\n\n\n\n\nAppTestE2eModule\n\nAppTestE2eModule\n\nAppTestE2eModule -->\n\nAppModule->AppTestE2eModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAppTestE2eService\n\nAppTestE2eService\n\nAppTestE2eModule -->\n\nAppTestE2eService->AppTestE2eModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtRefreshTokenStrategy\n\nJwtRefreshTokenStrategy\n\nAuthModule -->\n\nJwtRefreshTokenStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCustomHealthCheckService\n\nCustomHealthCheckService\n\nHealthCheckModule -->\n\nCustomHealthCheckService->HealthCheckModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    22 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    106 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.6\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\n\n Serialize response to send empty string when data is null api-nestjs-serializing-response-interceptors\n add auth jwt\n add double auth\n add auth with Google \n add confirming mail confirming-mail-address\n add database migrations and cron typeorm-migrations\n add flag feature flag-feature\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConstraintMap   (src/.../invalid-parameter-entity.exception.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/util/exception/custom-http-exception/invalid-parameter-entity.exception.ts\n    \n    \n        \n            \n                \n                    \n                    ConstraintMap\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            logger   (src/.../winston-logger.config.ts)\n                        \n                        \n                            mockedConfigService   (src/.../config.service.mock.ts)\n                        \n                        \n                            mockedJwtService   (src/.../jwt.service.mock.ts)\n                        \n                        \n                            RoleGuard   (src/.../role.guard.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/util/config/winston-logger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : winston.createLogger({\n  format: winston.format.combine(\n    winston.format.timestamp({ format: 'DD/MM/YYYY-HH:mm:ss' }),\n    winston.format.printf(\n      info => `[${info.level.toUpperCase()}] - ${info.timestamp} - WS : ${JSON.stringify(info.message)}`,\n    ),\n  ),\n  transports: [\n    new winston.transports.File({\n      filename: `api.log`,\n      dirname: './logs',\n      maxsize: 500000,\n      maxFiles: 5,\n    }),\n  ],\n})\n                    \n                \n\n\n        \n    \n\n    src/util/mocks/config.service.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockedConfigService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  get(key: string) {\n    switch (key) {\n      case 'JWT_ACCESS_TOKEN_EXPIRATION_TIME':\n        return '3600';\n    }\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/util/mocks/jwt.service.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockedJwtService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  sign: () => '',\n}\n                    \n                \n\n\n        \n    \n\n    src/api/auth/guards/role.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleGuard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (roles: UserRoleEnum[]): Type => {\n  @Injectable()\n  class RoleGuardMixin extends JwtRefreshGuard {\n    constructor(private readonly userService: UserService) {\n      super();\n    }\n    async canActivate(context: ExecutionContext): Promise {\n      await super.canActivate(context);\n\n      const request = context.switchToHttp().getRequest();\n      const { user } = request;\n      return roles.some(role => user?.roles.includes(role));\n    }\n  }\n  return mixin(RoleGuardMixin);\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
